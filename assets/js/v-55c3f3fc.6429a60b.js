(self.webpackChunkgordan404wiki=self.webpackChunkgordan404wiki||[]).push([[4281],{3137:(e,d,u)=>{"use strict";u.r(d),u.d(d,{data:()=>l});const l={key:"v-55c3f3fc",path:"/vueNextAnalysis/introduction/",title:"介绍和参考",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"Vue发展简史",slug:"vue发展简史",children:[]},{level:2,title:"Vue版本变化",slug:"vue版本变化",children:[{level:3,title:"Vue1.0到Vue2.0",slug:"vue1-0到vue2-0",children:[]},{level:3,title:"Vue2.0到Vue3.0",slug:"vue2-0到vue3-0",children:[]}]}],filePathRelative:"vueNextAnalysis/introduction/README.md",git:{updatedTime:1626972344e3,contributors:[{name:"lishuaixingNewBee",email:"vae.china@foxmail.com",commits:1}]}}},557:(e,d,u)=>{"use strict";u.r(d),u.d(d,{default:()=>U});var l=u(4057);const o=(0,l.Wm)("h1",{id:"介绍和参考",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#介绍和参考","aria-hidden":"true"},"#"),(0,l.Uk)(" 介绍和参考")],-1),c=(0,l.Uk)("本篇"),i=(0,l.Wm)("code",null,"Vue3.0.5",-1),r=(0,l.Uk)("源码分析文章由学习"),a={href:"https://kaiwu.lagou.com/course/courseInfo.htm?courseId=326&sid=20-h5Url-0#/sale",target:"_blank",rel:"noopener noreferrer"},n=(0,l.Uk)("Vue.js 3.0 核心源码解析"),t=(0,l.Uk)("课程以参考其他博客而来，请支持正版课程。"),s=(0,l.uE)('<h2 id="vue发展简史" tabindex="-1"><a class="header-anchor" href="#vue发展简史" aria-hidden="true">#</a> Vue发展简史</h2><ul><li>2013年7月，<code>Vue.js</code>在<code>Github</code>上第一次提交，此时名字叫做<code>Element</code>，后来被改名为<code>Seed.js</code>，到现在的<code>Vue.js</code>。</li><li>2013年12月，<code>Github</code>发布<code>0.6</code>版本，并正式更名为<code>Vue.js</code>。</li><li>2014年2月，在<code>Hacker News</code>网站上时候首次公开。</li><li>2015年10月，<code>Vue.js</code>发布<code>1.0.0</code>版本。</li><li>2016年10月，<code>Vue.js</code>发布<code>2.0</code>版本。</li><li>2020年9月18日，<code>Vue.js</code>发布<code>3.0</code>版本。</li></ul><h2 id="vue版本变化" tabindex="-1"><a class="header-anchor" href="#vue版本变化" aria-hidden="true">#</a> Vue版本变化</h2><h3 id="vue1-0到vue2-0" tabindex="-1"><a class="header-anchor" href="#vue1-0到vue2-0" aria-hidden="true">#</a> Vue1.0到Vue2.0</h3><p><code>Vue2.0</code>版本和<code>Vue1.0</code>版本之间虽然内部变化非常大，整个渲染层都重写了，但<code>API</code>层面的变化却很小，对开发者来说非常友好，另外<code>Vue2.0</code>版本还引入了很多特性：</p><ul><li><code>Virtual DOM</code>虚拟DOM。</li><li>支持<code>JSX</code>语法。</li><li>支持<code>TypeScript</code>。</li><li>支持服务端渲染<code>ssr</code>。</li><li>提供跨平台能力<code>weex</code>。</li></ul>',6),h=(0,l.Wm)("strong",null,"正确理解虚拟DOM",-1),m=(0,l.Uk)("："),v=(0,l.Wm)("code",null,"Vue",-1),V=(0,l.Uk)("中的虚拟DOM借鉴了开源库"),k={href:"https://github.com/snabbdom/snabbdom",target:"_blank",rel:"noopener noreferrer"},b=(0,l.Uk)("snabbdom"),f=(0,l.Uk)("的实现，并根据自身特色添加了许多特性。引入虚拟DOM的一个很重要的好处是：绝大部分情况下，组件渲染变得更快了，而少部分情况下反而变慢了。引入虚拟DOM这项技术通常都是在解决一些问题，然而解决一个问题的同时也可能会引入其它问题，这种情况更多的是如何做权衡、如何做取舍。因此，一味的强调虚拟DOM在任何时候都能提高性能这种说法需要正确对待和理解。"),p=(0,l.Wm)("p",null,[(0,l.Wm)("strong",null,"核心思想"),(0,l.Uk)("："),(0,l.Wm)("code",null,"Vue"),(0,l.Uk)("两大核心思想是"),(0,l.Wm)("strong",null,"数据驱动"),(0,l.Uk)("和"),(0,l.Wm)("strong",null,"组件化"),(0,l.Uk)("，因此我们在介绍完源码目录设计和整体流程后，会先介绍这两方面。")],-1),W=(0,l.Wm)("h3",{id:"vue2-0到vue3-0",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#vue2-0到vue3-0","aria-hidden":"true"},"#"),(0,l.Uk)(" Vue2.0到Vue3.0")],-1),g=(0,l.Wm)("p",null,"Vue2.0到Vue3.0",-1),U={render:function(e,d){const u=(0,l.up)("OutboundLink");return(0,l.wg)(),(0,l.j4)(l.HY,null,[o,(0,l.Wm)("p",null,[c,i,r,(0,l.Wm)("a",a,[n,(0,l.Wm)(u)]),t]),s,(0,l.Wm)("p",null,[h,m,v,V,(0,l.Wm)("a",k,[b,(0,l.Wm)(u)]),f]),p,W,g],64)}}}}]);