(self.webpackChunkgordan404wiki=self.webpackChunkgordan404wiki||[]).push([[2871],{6447:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>t});const t={key:"v-ff5a9acc",path:"/interview/vue.html",title:"前端面试指北",lang:"zh-CN",frontmatter:{sidebar:"auto"},excerpt:"",headers:[{level:2,title:"VUE相关面试题",slug:"vue相关面试题",children:[{level:3,title:"为什么 data 是一个函数",slug:"为什么-data-是一个函数",children:[]},{level:3,title:"组件中写name选项有什么作用",slug:"组件中写name选项有什么作用",children:[]},{level:3,title:"v-if 和 v-show 的区别",slug:"v-if-和-v-show-的区别",children:[]},{level:3,title:"computed和watch的区别",slug:"computed和watch的区别",children:[]},{level:3,title:"v-if 与 v-for 为什么不建议一起使用",slug:"v-if-与-v-for-为什么不建议一起使用",children:[]},{level:3,title:"v-for 为什么要加 key",slug:"v-for-为什么要加-key",children:[]},{level:3,title:"Vue组件通信",slug:"vue组件通信",children:[]},{level:3,title:"组件生命周期",slug:"组件生命周期",children:[]},{level:3,title:"父子组件的渲染顺序",slug:"父子组件的渲染顺序",children:[]},{level:3,title:"keep-alive 使用场景和原理",slug:"keep-alive-使用场景和原理",children:[]},{level:3,title:"$nextTick 原理和使用场景",slug:"nexttick-原理和使用场景",children:[]},{level:3,title:"Vue.mixin 的使用场景和原理",slug:"vue-mixin-的使用场景和原理",children:[]}]}],filePathRelative:"interview/vue.md",git:{updatedTime:1630935336e3,contributors:[{name:"lishuaixingNewBee",email:"vae.china@foxmail.com",commits:4}]}}},5050:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>en});var t=a(4057);const o=a.p+"assets/img/21.862bafaf.png",e=(0,t.Wm)("h1",{id:"前端面试指北",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#前端面试指北","aria-hidden":"true"},"#"),(0,t.Uk)(" 前端面试指北")],-1),c=(0,t.Wm)("h2",{id:"vue相关面试题",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#vue相关面试题","aria-hidden":"true"},"#"),(0,t.Uk)(" VUE相关面试题")],-1),p=(0,t.Uk)("强烈建议阅读"),k={href:"/vueAnalysis/introduction/",target:"_blank",rel:"noopener noreferrer"},l=(0,t.Uk)("Vue源码分析"),u=(0,t.Wm)("h3",{id:"为什么-data-是一个函数",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#为什么-data-是一个函数","aria-hidden":"true"},"#"),(0,t.Uk)(" 为什么 data 是一个函数")],-1),m=(0,t.Wm)("div",{class:"custom-container tip"},[(0,t.Wm)("p",{class:"custom-container-title"},"TIP"),(0,t.Wm)("p",null,"组件中的 data 写成一个函数，数据以函数返回值形式定义，这样每复用一次组件，就会返回一份新的对象的独立拷贝data，类似于给每个组件实例创建一个私有的数据空间，让各个组件实例维护各自的数据。而单纯的写成对象形式，就使得所有组件实例共用了一份 data，就会造成一个变了全都会变的结果，跟JS的引用类型相关，而非Vue.")],-1),i=(0,t.Wm)("h3",{id:"组件中写name选项有什么作用",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#组件中写name选项有什么作用","aria-hidden":"true"},"#"),(0,t.Uk)(" 组件中写name选项有什么作用")],-1),W=(0,t.Wm)("div",{class:"custom-container tip"},[(0,t.Wm)("p",{class:"custom-container-title"},"TIP"),(0,t.Wm)("p",null,"1、组件keep-alive缓存用name搭配exclude过滤 2、组件递归调用 3、组件安装 4、vue-devtools调试工具name 对应组件名称")],-1),r=(0,t.Wm)("h3",{id:"v-if-和-v-show-的区别",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#v-if-和-v-show-的区别","aria-hidden":"true"},"#"),(0,t.Uk)(" v-if 和 v-show 的区别")],-1),U=(0,t.Wm)("div",{class:"custom-container tip"},[(0,t.Wm)("p",{class:"custom-container-title"},"TIP"),(0,t.Wm)("p",null,"v-if 在编译过程中会被转化成三元表达式,条件不满足时不渲染此节点。"),(0,t.Wm)("p",null,"v-show 会被编译成指令，条件不满足时控制样式将对应节点隐藏 （display:none）")],-1),d=(0,t.Wm)("h3",{id:"computed和watch的区别",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#computed和watch的区别","aria-hidden":"true"},"#"),(0,t.Uk)(" computed和watch的区别")],-1),h=(0,t.Wm)("div",{class:"custom-container tip"},[(0,t.Wm)("p",{class:"custom-container-title"},"TIP"),(0,t.Wm)("ol",null,[(0,t.Wm)("li",null,[(0,t.Wm)("code",null,"computed"),(0,t.Uk)(" 是计算属性，依赖其他属性计算值，并且 "),(0,t.Wm)("code",null,"computed"),(0,t.Uk)(" 的值有缓存(data里不变还是不会重新计算的)，只有当计算值变化才会返回内容，它可以设置 "),(0,t.Wm)("code",null,"getter"),(0,t.Uk)(" 和 "),(0,t.Wm)("code",null,"setter"),(0,t.Uk)("。")]),(0,t.Wm)("li",null,[(0,t.Uk)("从使用场景上说，"),(0,t.Wm)("code",null,"computed"),(0,t.Uk)("适用一个数据被多个数据影响，而"),(0,t.Wm)("code",null,"watch"),(0,t.Uk)("适用一个数据影响多个数据；")]),(0,t.Wm)("li",null,[(0,t.Wm)("code",null,"computed"),(0,t.Uk)(" 是在"),(0,t.Wm)("code",null,"Dep.update()"),(0,t.Uk)("，执行之后，数据更新之前,watch 是在set刚开始的时候添加回调用，可以监听数据变化情况")]),(0,t.Wm)("li",null,[(0,t.Wm)("code",null,"watch"),(0,t.Uk)("监听引用类型需要设置"),(0,t.Wm)("code",null,"deep:true")])])],-1),f=(0,t.Wm)("p",null,[(0,t.Wm)("strong",null,"运用场景：")],-1),v=(0,t.Wm)("ul",null,[(0,t.Wm)("li",null,"当我们需要进行数值计算，并且依赖于其它数据时，应该使用 computed，因为可以利用 computed 的缓存特性，避免每次获取值时，都要重新计算；"),(0,t.Wm)("li",null,"当我们需要在数据变化时执行异步或开销较大的操作时，应该使用 watch，使用 watch 选项允许我们执行异步操作 ( 访问一个 API )，限制我们执行该操作的频率，并在我们得到最终结果前，设置中间状态。这些都是计算属性无法做到的。")],-1),y=(0,t.Wm)("div",{class:"language-javascript ext-js"},[(0,t.Wm)("pre",{class:"language-javascript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token comment"},"// 先来看看computed最最核心的代码， 脏检查, 执行计算"),(0,t.Uk)("\n "),(0,t.Wm)("span",{class:"token keyword"},"if"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("watcher"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("dirty"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    watcher"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"evaluate"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n "),(0,t.Wm)("span",{class:"token comment"},"// Dep更新依赖"),(0,t.Uk)("\n "),(0,t.Wm)("span",{class:"token keyword"},"if"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("Dep"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("target"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    watcher"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"depend"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n"),(0,t.Wm)("span",{class:"token keyword"},"const"),(0,t.Uk)(" vm "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    data"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n      name"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'狗蛋'"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n    computed"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n      info"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n        "),(0,t.Wm)("span",{class:"token function-variable function"},"get"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"function"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n          console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token string"},'"调用了getter属性"'),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n          "),(0,t.Wm)("span",{class:"token keyword"},"return"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("name "),(0,t.Wm)("span",{class:"token operator"},"+"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'牛逼'"),(0,t.Uk)("\n        "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("\n        "),(0,t.Wm)("span",{class:"token function-variable function"},"set"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"function"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token parameter"},"newValue"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n          console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token string"},'"调用了settter属性"'),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n          console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("newValue"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n          "),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("name "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'狗蛋Plus'"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n        "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("\n      "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("  \n    "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token comment"},"// 第一次访问 `this.name` 的时候, 会调用相应的 get(),记录了依赖项 `name`"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token number"},"1"),(0,t.Uk)("、在 computed 初始化的过程中会创建一个 watcher 并设置lazy"),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Wm)("span",{class:"token boolean"},"true"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("所以在初始化时会求值，在页面中调用 computed 时，开始求值，调用 watcher"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"evaluate"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("方法"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("并将 dirty"),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Wm)("span",{class:"token boolean"},"false"),(0,t.Uk)("。\n"),(0,t.Wm)("span",{class:"token number"},"2"),(0,t.Uk)("、当 computed依赖的属性发生改变时，会调用 watcher"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"update"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(" 方法，将dirty"),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Wm)("span",{class:"token boolean"},"true"),(0,t.Uk)("。\n"),(0,t.Wm)("span",{class:"token number"},"3"),(0,t.Uk)("、当在页面中再次获取该属性时，会再次调用 如果dirty为 truewatcher"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"evaluate"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(" 方法，否则返回原来计算的值。这就是computed 为什么具有缓存效果的原因。\n")])])],-1),w=(0,t.Wm)("h3",{id:"v-if-与-v-for-为什么不建议一起使用",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#v-if-与-v-for-为什么不建议一起使用","aria-hidden":"true"},"#"),(0,t.Uk)(" v-if 与 v-for 为什么不建议一起使用")],-1),g=(0,t.Wm)("div",{class:"custom-container tip"},[(0,t.Wm)("p",{class:"custom-container-title"},"TIP"),(0,t.Wm)("p",null,"v-for 和 v-if 不要在同一个标签中使用,因为解析时先解析 v-for 优先级高于 v-if,这意味着 v-if 将分别重复运行于每个 v-for 循环中。如果遇到需要同时使用时可以考虑写成计算属性的方式。")],-1),b=(0,t.Wm)("h3",{id:"v-for-为什么要加-key",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#v-for-为什么要加-key","aria-hidden":"true"},"#"),(0,t.Uk)(" v-for 为什么要加 key")],-1),x=(0,t.Wm)("div",{class:"custom-container tip"},[(0,t.Wm)("p",{class:"custom-container-title"},"TIP"),(0,t.Wm)("p",null,"key 是为 Vue 中 vnode 的唯一标记，当diff oldCh 和 newCh 四种比较方式没有匹配到，如果设置了key就会用key比较，如果不使用 key，Vue 会使用一种最大限度减少动态元素并且尽可能的尝试就地修改/复用相同类型元素的算法。通过这个 key，我们的 diff 操作可以更准确、更快速 更准确：因为带 key 就不是原地复用了，在 sameNode 函数 a.key === b.key 对比中可以避免就地复用的情况。所以会更加准确。 更快速：利用 key 的唯一性生成 map 对象来获取对应节点，比遍历方式更快")],-1),I=(0,t.Wm)("div",{class:"language-javascript ext-js"},[(0,t.Wm)("pre",{class:"language-javascript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token keyword"},"function"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token function"},"createKeyToOldIdx"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token parameter"},[(0,t.Uk)("children"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(" beginIdx"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(" endIdx")]),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" i"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(" key\n  "),(0,t.Wm)("span",{class:"token keyword"},"const"),(0,t.Uk)(" map "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token keyword"},"for"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("i "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(" beginIdx"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)(" i "),(0,t.Wm)("span",{class:"token operator"},"<="),(0,t.Uk)(" endIdx"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"++"),(0,t.Uk)("i"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    key "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(" children"),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Uk)("i"),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("key\n    "),(0,t.Wm)("span",{class:"token keyword"},"if"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token function"},"isDef"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("key"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(" map"),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Uk)("key"),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(" i\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token keyword"},"return"),(0,t.Uk)(" map\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n")])])],-1),T=(0,t.Wm)("h3",{id:"vue组件通信",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#vue组件通信","aria-hidden":"true"},"#"),(0,t.Uk)(" Vue组件通信")],-1),C=(0,t.Wm)("ul",null,[(0,t.Wm)("li",null,"父子组件通信"),(0,t.Wm)("li",null,"兄弟组件通信"),(0,t.Wm)("li",null,"跨多层级组件通信"),(0,t.Wm)("li",null,"任意组件")],-1),V=(0,t.Wm)("h4",{id:"父子通信",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#父子通信","aria-hidden":"true"},"#"),(0,t.Uk)(" 父子通信")],-1),O=(0,t.Wm)("div",{class:"custom-container tip"},[(0,t.Wm)("p",{class:"custom-container-title"},"TIP"),(0,t.Wm)("ol",null,[(0,t.Wm)("li",null,[(0,t.Uk)("父组件通过 "),(0,t.Wm)("code",null,"props"),(0,t.Uk)(" 传递数据给子组件，子组件通过 "),(0,t.Wm)("code",null,"emit"),(0,t.Uk)(" 发送事件传递数据给父组件")]),(0,t.Wm)("li",null,[(0,t.Uk)("父组件"),(0,t.Wm)("code",null,"v-model"),(0,t.Uk)("(语法糖),子组件派发"),(0,t.Wm)("code",null,"this.$emit('input', 1)")]),(0,t.Wm)("li",null,[(0,t.Uk)("通过访问 "),(0,t.Wm)("code",null,"$parent"),(0,t.Uk)(" 或者 "),(0,t.Wm)("code",null,"$children"),(0,t.Uk)(" 对象来访问组件实例中的方法和数据")]),(0,t.Wm)("li",null,[(0,t.Uk)("Vue 2.3 及以上版本的话还可以使用 "),(0,t.Wm)("code",null,"$listeners"),(0,t.Uk)("、"),(0,t.Wm)("code",null,"$attrs"),(0,t.Uk)(" 和 "),(0,t.Wm)("code",null,".sync"),(0,t.Uk)(" 属性")])])],-1),$=(0,t.Wm)("ul",null,[(0,t.Wm)("li",null,"$attrs：当前组件的属性，通俗的讲也就是在组件标签定义的一系列属性，如input的value，placeholder等，但是不包括在当前组件里面定义的props属性"),(0,t.Wm)("li",null,"$listeners：当前组件监听的事件，通俗的讲也就是在使用组件的时候在标签中定义的事件，如@input，以及一些自定义事件"),(0,t.Wm)("li",null,[(0,t.Uk)("当前组件中使用"),(0,t.Wm)("code",null,'v-bind="$attrs"'),(0,t.Uk)("、"),(0,t.Wm)("code",null,'v-bind="$props"'),(0,t.Uk)(","),(0,t.Wm)("code",null,'v-on="$listeners"'),(0,t.Uk)("也就是把之前父组件那里给它的属性再全部传到它的子组件")]),(0,t.Wm)("li",null,"多级组件传多个值时，调用目标组件绑定$attrs，可直接获取根组件所传递参数，而不用每一级组件逐层传递。例如：组件二次封装，想保留之前属性方法，并且扩展新属性方法。")],-1),j=(0,t.Wm)("div",{class:"language-text ext-text"},[(0,t.Wm)("pre",{class:"language-text"},[(0,t.Wm)("code",null,'\x3c!--父组件中--\x3e\n<input :value.sync="value" />\n\x3c!--以上写法等同于--\x3e\n<input :value="value" @update:value="v => value = v"></comp>\n\x3c!--子组件中--\x3e\n<script>\n  this.$emit(\'update:value\', 1)\n<\/script>\n')])],-1),P=(0,t.Wm)("h4",{id:"兄弟组件通信",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#兄弟组件通信","aria-hidden":"true"},"#"),(0,t.Uk)(" 兄弟组件通信")],-1),D=(0,t.Wm)("div",{class:"custom-container tip"},[(0,t.Wm)("p",{class:"custom-container-title"},"TIP"),(0,t.Wm)("p",null,[(0,t.Uk)("对于这种情况可以通过查找父组件中的子组件实现，也就是 "),(0,t.Wm)("code",null,"this.$parent.$children"),(0,t.Uk)("，在 "),(0,t.Wm)("code",null,"$children"),(0,t.Uk)(" 中可以通过组件 name 查询到需要的组件实例，然后进行通信。")])],-1),M=(0,t.Wm)("h4",{id:"跨多层次组件通信",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#跨多层次组件通信","aria-hidden":"true"},"#"),(0,t.Uk)(" 跨多层次组件通信")],-1),E=(0,t.Wm)("div",{class:"custom-container tip"},[(0,t.Wm)("p",{class:"custom-container-title"},"TIP"),(0,t.Wm)("p",null,"provide / inject，虽然文档中不推荐直接使用在业务中，但是如果用得好的话还是很有用的。 假设有父组件 A，然后有一个跨多层级的子组件 B,element表单中有使用(disabled)")],-1),N=(0,t.Wm)("div",{class:"language-text ext-text"},[(0,t.Wm)("pre",{class:"language-text"},[(0,t.Wm)("code",null,"// 父组件 A\nexport default {\n  provide: {\n    data: 1\n  }\n}\n// 子组件 B\nexport default {\n  inject: ['data'],\n  mounted() {\n    // 无论跨几层都能获得父组件的 data 属性\n    console.log(this.data) // => 1\n  }\n}\n")])],-1),F=(0,t.Wm)("h4",{id:"任意组件",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#任意组件","aria-hidden":"true"},"#"),(0,t.Uk)(" 任意组件")],-1),A=(0,t.Wm)("div",{class:"custom-container tip"},[(0,t.Wm)("p",{class:"custom-container-title"},"TIP"),(0,t.Wm)("p",null,"这种方式可以通过 Vuex 或者 Event Bus（Vue本身就有EventBus能力，不需要再引入EventBus） 解决，另外如果你不怕麻烦的话，可以使用这种方式解决上述所有的通信情况"),(0,t.Wm)("ul",null,[(0,t.Wm)("li",null,"Vuex: UserInfo、getUserInfo、logout"),(0,t.Wm)("li",null,"Event Bus: $on不会自己销毁，需要我们手动给销毁，否则会重复触发,甚至造成内存泄漏，在keep-alive中尤为明显。")])],-1),B=(0,t.Wm)("h3",{id:"组件生命周期",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#组件生命周期","aria-hidden":"true"},"#"),(0,t.Uk)(" 组件生命周期")],-1),L=(0,t.Wm)("p",null,[(0,t.Wm)("img",{src:o,alt:"VUE"})],-1),S=(0,t.Wm)("div",{class:"custom-container tip"},[(0,t.Wm)("p",{class:"custom-container-title"},"TIP"),(0,t.Wm)("ul",null,[(0,t.Wm)("li",null,"beforeCreate 在实例初始化之后，数据观测(data observer) 和 event/watcher 事件配置之前被调用。在当前阶段 data、methods、computed 以及 watch 上的数据和方法都不能被访问"),(0,t.Wm)("li",null,"created 实例已经创建完成之后被调用。在这一步，实例已完成以下的配置：数据观测(data observer)，属性和方法的运算， watch/event 事件回调。这里没有$el,如果非要想与 Dom 进行交互，可以通过 vm.$nextTick 来访问 Dom"),(0,t.Wm)("li",null,"beforeMount 在挂载开始之前被调用：相关的 render 函数首次被调用。"),(0,t.Wm)("li",null,"mounted 在挂载完成后发生，在当前阶段，真实的 Dom 挂载完毕，数据完成双向绑定，可以访问到 Dom 节点"),(0,t.Wm)("li",null,"beforeUpdate 数据更新时调用，发生在虚拟 DOM 重新渲染和打补丁（patch）之前。可以在这个钩子中进一步地更改状态，这不会触发附加的重渲染过程"),(0,t.Wm)("li",null,"updated 发生在更新完成之后，当前阶段组件 Dom 已完成更新。要注意的是避免在此期间更改数据，因为这可能会导致无限循环的更新，该钩子在服务器端渲染期间不被调用。"),(0,t.Wm)("li",null,"beforeDestroy 实例销毁之前调用。在这一步，实例仍然完全可用。我们可以在这时进行善后收尾工作，比如清除计时器。"),(0,t.Wm)("li",null,"destroyed Vue 实例销毁后调用。调用后，Vue 实例指示的所有东西都会解绑定，所有的事件监听器会被移除，所有的子实例也会被销毁。 该钩子在服务器端渲染期间不被调用。"),(0,t.Wm)("li",null,"activated keep-alive 专属，组件被激活时调用"),(0,t.Wm)("li",null,"deactivated keep-alive 专属，组件被销毁时调用"),(0,t.Wm)("li",null,"errorCaptured(错误调用)：当捕获一个来自后代组件的错误时被调用")])],-1),_=(0,t.Wm)("h3",{id:"父子组件的渲染顺序",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#父子组件的渲染顺序","aria-hidden":"true"},"#"),(0,t.Uk)(" 父子组件的渲染顺序")],-1),R=(0,t.Wm)("div",{class:"custom-container tip"},[(0,t.Wm)("p",{class:"custom-container-title"},"TIP"),(0,t.Wm)("ul",null,[(0,t.Wm)("li",null,"加载渲染过程 父beforeCreate->父created->父beforeMount->子beforeCreate->子created->子beforeMount->子mounted->父mounted"),(0,t.Wm)("li",null,"子组件更新过程 父beforeUpdate->子beforeUpdate->子updated->父updated 父组件更新过程 父beforeUpdate->父updated"),(0,t.Wm)("li",null,"销毁过程 父beforeDestroy->子beforeDestroy->子destroyed->父destroyed")])],-1),z=(0,t.Wm)("h3",{id:"keep-alive-使用场景和原理",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#keep-alive-使用场景和原理","aria-hidden":"true"},"#"),(0,t.Uk)(" keep-alive 使用场景和原理")],-1),H=(0,t.Uk)("建议阅读有关"),K={href:"https://www.jianshu.com/p/9523bb439950",target:"_blank",rel:"noopener noreferrer"},Y=(0,t.Uk)("keep-alive源码"),J=(0,t.Wm)("div",{class:"custom-container tip"},[(0,t.Wm)("p",{class:"custom-container-title"},"TIP"),(0,t.Wm)("p",null,"keep-alive 是 Vue 内置的一个组件，可以实现组件缓存，当组件切换时不会对当前组件进行卸载。"),(0,t.Wm)("ul",null,[(0,t.Wm)("li",null,"常用的两个属性 include/exclude/max，允许组件有条件的进行缓存。"),(0,t.Wm)("li",null,"两个生命周期 activated/deactivated，用来得知当前组件是否处于活跃状态。"),(0,t.Wm)("li",null,"keep-alive 的中还运用了 LRU(最近最少使用) 算法，选择最近最久未使用的组件予以淘汰。")]),(0,t.Wm)("ol",null,[(0,t.Wm)("li",null,"在首次加载被包裹组建时，由keep-alive.js中的render函数可知，vnode.componentInstance的值是undfined，keepAlive的值是true，因为keep-alive组件作为父组件，它的render函数会先于被包裹组件执行；那么只执行到i(vnode,false)，后面的逻辑不执行；"),(0,t.Wm)("li",null,"再次访问被包裹组件时，vnode.componentInstance的值就是已经缓存的组件实例，那么会执行insert(parentElm, vnode.elm, refElm)逻辑，这样就直接把上一次的DOM插入到父元素中。")])],-1),q=(0,t.Wm)("div",{class:"language-javascript ext-js"},[(0,t.Wm)("pre",{class:"language-javascript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token comment"},"// 大白话就是将render 返回的Vnode存储下来了，当命中的时候再取出来通过render返回"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"export"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"default"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  name"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},'"keep-alive"'),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("\n  abstract"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token boolean"},"true"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token comment"},"//抽象组件"),(0,t.Uk)("\n\n  props"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    include"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(" patternTypes"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token comment"},"//要缓存的组件"),(0,t.Uk)("\n    exclude"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(" patternTypes"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token comment"},"//要排除的组件"),(0,t.Uk)("\n    max"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Uk)("String"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(" Number"),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token comment"},"//最大缓存数"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("\n\n  "),(0,t.Wm)("span",{class:"token function"},"created"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("cache "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(" Object"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"create"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token keyword"},"null"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token comment"},"//缓存对象  {a:vNode,b:vNode}"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("keys "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token comment"},"//缓存组件的key集合 [a,b]"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("\n\n  "),(0,t.Wm)("span",{class:"token function"},"destroyed"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token keyword"},"for"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token keyword"},"const"),(0,t.Uk)(" key "),(0,t.Wm)("span",{class:"token keyword"},"in"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("cache"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n      "),(0,t.Wm)("span",{class:"token function"},"pruneCacheEntry"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("cache"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(" key"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("keys"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("\n\n  "),(0,t.Wm)("span",{class:"token function"},"mounted"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token comment"},"//动态监听include  exclude"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"$watch"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token string"},'"include"'),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token parameter"},"val"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"=>"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n      "),(0,t.Wm)("span",{class:"token function"},"pruneCache"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token parameter"},"name"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"=>"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token function"},"matches"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("val"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(" name"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"$watch"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token string"},'"exclude"'),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token parameter"},"val"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"=>"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n      "),(0,t.Wm)("span",{class:"token function"},"pruneCache"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token parameter"},"name"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"=>"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"!"),(0,t.Wm)("span",{class:"token function"},"matches"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("val"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(" name"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("\n\n  "),(0,t.Wm)("span",{class:"token function"},"render"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token keyword"},"const"),(0,t.Uk)(" slot "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("$slots"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("default"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token comment"},"//获取包裹的插槽默认值"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token keyword"},"const"),(0,t.Uk)(" vnode"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(" VNode "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token function"},"getFirstComponentChild"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("slot"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token comment"},"//获取第一个子组件"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token keyword"},"const"),(0,t.Uk)(" componentOptions"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"?"),(0,t.Uk)("VNodeComponentOptions "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)("\n      vnode "),(0,t.Wm)("span",{class:"token operator"},"&&"),(0,t.Uk)(" vnode"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("componentOptions"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token keyword"},"if"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("componentOptions"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n      "),(0,t.Wm)("span",{class:"token comment"},"// check pattern"),(0,t.Uk)("\n      "),(0,t.Wm)("span",{class:"token keyword"},"const"),(0,t.Uk)(" name"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"?"),(0,t.Uk)("string "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token function"},"getComponentName"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("componentOptions"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n      "),(0,t.Wm)("span",{class:"token keyword"},"const"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)(" include"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(" exclude "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n      "),(0,t.Wm)("span",{class:"token comment"},"// 不走缓存"),(0,t.Uk)("\n      "),(0,t.Wm)("span",{class:"token keyword"},"if"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("\n        "),(0,t.Wm)("span",{class:"token comment"},"// not included  不包含"),(0,t.Uk)("\n        "),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("include "),(0,t.Wm)("span",{class:"token operator"},"&&"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token operator"},"!"),(0,t.Uk)("name "),(0,t.Wm)("span",{class:"token operator"},"||"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"!"),(0,t.Wm)("span",{class:"token function"},"matches"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("include"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(" name"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"||"),(0,t.Uk)("\n        "),(0,t.Wm)("span",{class:"token comment"},"// excluded  排除里面"),(0,t.Uk)("\n        "),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("exclude "),(0,t.Wm)("span",{class:"token operator"},"&&"),(0,t.Uk)(" name "),(0,t.Wm)("span",{class:"token operator"},"&&"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token function"},"matches"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("exclude"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(" name"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n      "),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n        "),(0,t.Wm)("span",{class:"token comment"},"//返回虚拟节点"),(0,t.Uk)("\n        "),(0,t.Wm)("span",{class:"token keyword"},"return"),(0,t.Uk)(" vnode"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n      "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n      "),(0,t.Wm)("span",{class:"token keyword"},"const"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)(" cache"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(" keys "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n      "),(0,t.Wm)("span",{class:"token keyword"},"const"),(0,t.Uk)(" key"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"?"),(0,t.Uk)("string "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)("\n        vnode"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("key "),(0,t.Wm)("span",{class:"token operator"},"=="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"null"),(0,t.Uk)("\n          "),(0,t.Wm)("span",{class:"token operator"},"?"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token comment"},"// same constructor may get registered as different local components"),(0,t.Uk)("\n            "),(0,t.Wm)("span",{class:"token comment"},"// so cid alone is not enough (#3269)"),(0,t.Uk)("\n            componentOptions"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("Ctor"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("cid "),(0,t.Wm)("span",{class:"token operator"},"+"),(0,t.Uk)("\n            "),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("componentOptions"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("tag "),(0,t.Wm)("span",{class:"token operator"},"?"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token template-string"},[(0,t.Wm)("span",{class:"token template-punctuation string"},"`"),(0,t.Wm)("span",{class:"token string"},"::"),(0,t.Wm)("span",{class:"token interpolation"},[(0,t.Wm)("span",{class:"token interpolation-punctuation punctuation"},"${"),(0,t.Uk)("componentOptions"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("tag"),(0,t.Wm)("span",{class:"token interpolation-punctuation punctuation"},"}")]),(0,t.Wm)("span",{class:"token template-punctuation string"},"`")]),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},'""'),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n          "),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(" vnode"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("key"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n      "),(0,t.Wm)("span",{class:"token keyword"},"if"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("cache"),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Uk)("key"),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n        "),(0,t.Wm)("span",{class:"token comment"},"//通过key 找到缓存 获取实例"),(0,t.Uk)("\n        vnode"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("componentInstance "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(" cache"),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Uk)("key"),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("componentInstance"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n        "),(0,t.Wm)("span",{class:"token comment"},"// make current key freshest"),(0,t.Uk)("\n        "),(0,t.Wm)("span",{class:"token function"},"remove"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("keys"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(" key"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token comment"},"//通过LRU算法把数组里面的key删掉"),(0,t.Uk)("\n        keys"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"push"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("key"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token comment"},"//把它放在数组末尾"),(0,t.Uk)("\n      "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"else"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n        cache"),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Uk)("key"),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(" vnode"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token comment"},"//没找到就换存下来"),(0,t.Uk)("\n        keys"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"push"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("key"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token comment"},"//把它放在数组末尾"),(0,t.Uk)("\n        "),(0,t.Wm)("span",{class:"token comment"},"// prune oldest entry  //如果超过最大值就把数组第0项删掉"),(0,t.Uk)("\n        "),(0,t.Wm)("span",{class:"token keyword"},"if"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("max "),(0,t.Wm)("span",{class:"token operator"},"&&"),(0,t.Uk)(" keys"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("length "),(0,t.Wm)("span",{class:"token operator"},">"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token function"},"parseInt"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("max"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n          "),(0,t.Wm)("span",{class:"token function"},"pruneCacheEntry"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("cache"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(" keys"),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Wm)("span",{class:"token number"},"0"),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(" keys"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("_vnode"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n        "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n      "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n      vnode"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("data"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("keepAlive "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token boolean"},"true"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token comment"},"//标记虚拟节点已经被缓存"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token comment"},"// 返回虚拟节点"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token keyword"},"return"),(0,t.Uk)(" vnode "),(0,t.Wm)("span",{class:"token operator"},"||"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("slot "),(0,t.Wm)("span",{class:"token operator"},"&&"),(0,t.Uk)(" slot"),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Wm)("span",{class:"token number"},"0"),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n")])])],-1),G=(0,t.Wm)("h3",{id:"nexttick-原理和使用场景",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#nexttick-原理和使用场景","aria-hidden":"true"},"#"),(0,t.Uk)(" $nextTick 原理和使用场景")],-1),Q=(0,t.Uk)("建议阅读有关"),X={href:"https://juejin.cn/post/6939704519668432910#heading-4",target:"_blank",rel:"noopener noreferrer"},Z=(0,t.Uk)("nextTick源码"),nn=(0,t.Wm)("div",{class:"custom-container tip"},[(0,t.Wm)("p",{class:"custom-container-title"},"TIP"),(0,t.Wm)("ol",null,[(0,t.Wm)("li",null,"Vue 是异步渲染,$nextTick 会在DOM渲染之后被触发回调，以获取最新的DOM节点。"),(0,t.Wm)("li",null,"页面渲染时会将data的修改做整合，多次data的修改会合并成一次DOM渲染，否则渲染过于频繁太耗性能了。")]),(0,t.Wm)("ul",null,[(0,t.Wm)("li",null,[(0,t.Uk)("$nextTick内部实现了microtask队列 2.5 之前会使用"),(0,t.Wm)("code",null,"Mutation.Observe"),(0,t.Uk)(", 2.5之后是用优雅降级"),(0,t.Wm)("code",null,"setImmediate"),(0,t.Uk)("-"),(0,t.Wm)("code",null,"MessageChannel"),(0,t.Uk)("-"),(0,t.Wm)("code",null,"Promise"),(0,t.Uk)("-"),(0,t.Wm)("code",null,"setTimeout")])])],-1),sn=(0,t.Wm)("div",{class:"language-javascript ext-js"},[(0,t.Wm)("pre",{class:"language-javascript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" callbacks "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" pending "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token boolean"},"false"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"function"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token function"},"flushCallbacks"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  pending "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token boolean"},"false"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token comment"},"//把标志还原为false"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token comment"},"// 依次执行回调"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token keyword"},"for"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" i "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"0"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)(" i "),(0,t.Wm)("span",{class:"token operator"},"<"),(0,t.Uk)(" callbacks"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("length"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)(" i"),(0,t.Wm)("span",{class:"token operator"},"++"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    callbacks"),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Uk)("i"),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" timerFunc"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token comment"},"//定义异步方法  采用优雅降级"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"if"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token keyword"},"typeof"),(0,t.Uk)(" Promise "),(0,t.Wm)("span",{class:"token operator"},"!=="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},'"undefined"'),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token comment"},"// 如果支持promise"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token keyword"},"const"),(0,t.Uk)(" p "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(" Promise"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"resolve"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token function-variable function"},"timerFunc"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"=>"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    p"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"then"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("flushCallbacks"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"else"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"if"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token keyword"},"typeof"),(0,t.Uk)(" MutationObserver "),(0,t.Wm)("span",{class:"token operator"},"!=="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},'"undefined"'),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token comment"},"// MutationObserver 主要是监听dom变化 也是一个异步方法"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" counter "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"1"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token keyword"},"const"),(0,t.Uk)(" observer "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"MutationObserver"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("flushCallbacks"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token keyword"},"const"),(0,t.Uk)(" textNode "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(" document"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"createTextNode"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token function"},"String"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("counter"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n  observer"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"observe"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("textNode"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    characterData"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token boolean"},"true"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token function-variable function"},"timerFunc"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"=>"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    counter "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("counter "),(0,t.Wm)("span",{class:"token operator"},"+"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"1"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"%"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"2"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    textNode"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("data "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token function"},"String"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("counter"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"else"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"if"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token keyword"},"typeof"),(0,t.Uk)(" setImmediate "),(0,t.Wm)("span",{class:"token operator"},"!=="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},'"undefined"'),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token comment"},"// 如果前面都不支持 判断setImmediate"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token function-variable function"},"timerFunc"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"=>"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token function"},"setImmediate"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("flushCallbacks"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"else"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token comment"},"// 最后降级采用setTimeout"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token function-variable function"},"timerFunc"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"=>"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token function"},"setTimeout"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("flushCallbacks"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"0"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n"),(0,t.Wm)("span",{class:"token keyword"},"export"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"function"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token function"},"nextTick"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token parameter"},"cb"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token comment"},"// 除了渲染watcher  还有用户自己手动调用的nextTick 一起被收集到数组"),(0,t.Uk)("\n  callbacks"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"push"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("cb"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token keyword"},"if"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token operator"},"!"),(0,t.Uk)("pending"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token comment"},"// 如果多次调用nextTick  只会执行一次异步 等异步队列清空之后再把标志变为false"),(0,t.Uk)("\n    pending "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token boolean"},"true"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token function"},"timerFunc"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n")])])],-1),an=(0,t.Wm)("h3",{id:"vue-mixin-的使用场景和原理",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#vue-mixin-的使用场景和原理","aria-hidden":"true"},"#"),(0,t.Uk)(" Vue.mixin 的使用场景和原理")],-1),tn=(0,t.Wm)("div",{class:"custom-container tip"},[(0,t.Wm)("p",{class:"custom-container-title"},"TIP"),(0,t.Wm)("p",null,"在日常的开发中，我们经常会遇到在不同的组件中经常会需要用到一些相同或者相似的代码，这些代码的功能相对独立，可以通过 Vue 的 mixin 功能抽离公共的业务逻辑，原理类似“对象的继承”，当组件初始化时会调用 mergeOptions 方法进行合并，采用策略模式针对不同的属性进行合并。当组件和混入对象含有同名选项时，这些选项将以恰当的方式进行“合并”。"),(0,t.Wm)("ul",null,[(0,t.Wm)("li",null,"缺点：(Vue3推出 Compostion Api 去解决这些问题)")]),(0,t.Wm)("ol",null,[(0,t.Wm)("li",null,"变量来源不明确，不利于阅读（只能靠全局搜索）"),(0,t.Wm)("li",null,"多mixin可能会造成命名冲突"),(0,t.Wm)("li",null,"mixin和组件可能出现多对多的关系，复杂度较高")])],-1),on=(0,t.Wm)("div",{class:"language-javascript ext-js"},[(0,t.Wm)("pre",{class:"language-javascript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token keyword"},"export"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"default"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"function"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token function"},"initMixin"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token parameter"},"Vue"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  Vue"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function-variable function"},"mixin"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"function"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token parameter"},"mixin"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token comment"},"//   合并对象"),(0,t.Uk)("\n      "),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("options"),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Wm)("span",{class:"token function"},"mergeOptions"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("options"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("mixin"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n\n"),(0,t.Wm)("span",{class:"token comment"},"// src/util/index.js"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token comment"},"// 定义生命周期"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"export"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"const"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token constant"},"LIFECYCLE_HOOKS"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token string"},'"beforeCreate"'),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token string"},'"created"'),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token string"},'"beforeMount"'),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token string"},'"mounted"'),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token string"},'"beforeUpdate"'),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token string"},'"updated"'),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token string"},'"beforeDestroy"'),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token string"},'"destroyed"'),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n\n"),(0,t.Wm)("span",{class:"token comment"},"// 合并策略"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"const"),(0,t.Uk)(" strats "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token comment"},"// mixin核心方法"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"export"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"function"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token function"},"mergeOptions"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token parameter"},[(0,t.Uk)("parent"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(" child")]),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token keyword"},"const"),(0,t.Uk)(" options "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token comment"},"// 遍历父亲"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token keyword"},"for"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" k "),(0,t.Wm)("span",{class:"token keyword"},"in"),(0,t.Uk)(" parent"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token function"},"mergeFiled"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("k"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token comment"},"// 父亲没有 儿子有"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token keyword"},"for"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" k "),(0,t.Wm)("span",{class:"token keyword"},"in"),(0,t.Uk)(" child"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token keyword"},"if"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token operator"},"!"),(0,t.Uk)("parent"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"hasOwnProperty"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("k"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n      "),(0,t.Wm)("span",{class:"token function"},"mergeFiled"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("k"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n  "),(0,t.Wm)("span",{class:"token comment"},"//真正合并字段方法"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token keyword"},"function"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token function"},"mergeFiled"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token parameter"},"k"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token keyword"},"if"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("strats"),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Uk)("k"),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n      options"),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Uk)("k"),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(" strats"),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Uk)("k"),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("parent"),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Uk)("k"),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(" child"),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Uk)("k"),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"else"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n      "),(0,t.Wm)("span",{class:"token comment"},"// 默认策略"),(0,t.Uk)("\n      options"),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Uk)("k"),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(" child"),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Uk)("k"),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"?"),(0,t.Uk)(" child"),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Uk)("k"),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(" parent"),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Uk)("k"),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token keyword"},"return"),(0,t.Uk)(" options"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n")])])],-1),en={render:function(n,s){const a=(0,t.up)("OutboundLink");return(0,t.wg)(),(0,t.j4)(t.HY,null,[e,c,(0,t.Wm)("p",null,[p,(0,t.Wm)("a",k,[l,(0,t.Wm)(a)])]),u,m,i,W,r,U,d,h,f,v,y,w,g,b,x,I,T,C,V,O,$,j,P,D,M,E,N,F,A,B,L,S,_,R,z,(0,t.Wm)("p",null,[H,(0,t.Wm)("a",K,[Y,(0,t.Wm)(a)])]),J,q,G,(0,t.Wm)("p",null,[Q,(0,t.Wm)("a",X,[Z,(0,t.Wm)(a)])]),nn,sn,an,tn,on],64)}}}}]);