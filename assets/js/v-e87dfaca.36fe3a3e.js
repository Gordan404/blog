(self.webpackChunkvuepress_starter=self.webpackChunkvuepress_starter||[]).push([[6757],{3507:(n,e,a)=>{"use strict";a.r(e),a.d(e,{data:()=>l});const l={key:"v-e87dfaca",path:"/books/git/",title:"精通Git",lang:"zh-CN",frontmatter:{sidebar:"auto"},excerpt:"",headers:[{level:2,title:"起步",slug:"起步",children:[{level:3,title:"版本控制",slug:"版本控制",children:[]},{level:3,title:"简史",slug:"简史",children:[]},{level:3,title:"Git基础",slug:"git基础",children:[]}]},{level:2,title:"Git基础",slug:"git基础-1",children:[{level:3,title:"获取Git仓库",slug:"获取git仓库",children:[]},{level:3,title:"记录更改到仓库",slug:"记录更改到仓库",children:[]},{level:3,title:"查看提交历史",slug:"查看提交历史",children:[]},{level:3,title:"撤销操作",slug:"撤销操作",children:[]},{level:3,title:"远程仓库",slug:"远程仓库",children:[]},{level:3,title:"标记",slug:"标记",children:[]},{level:3,title:"Git别名",slug:"git别名",children:[]}]},{level:2,title:"Git分支",slug:"git分支",children:[{level:3,title:"分支机制",slug:"分支机制",children:[]},{level:3,title:"基本的分支与合并操作",slug:"基本的分支与合并操作",children:[]},{level:3,title:"分支管理",slug:"分支管理",children:[]},{level:3,title:"与分支有关的工作流",slug:"与分支有关的工作流",children:[]},{level:3,title:"远程分支",slug:"远程分支",children:[]},{level:3,title:"变基",slug:"变基",children:[]}]},{level:2,title:"服务器上的Git",slug:"服务器上的git",children:[{level:3,title:"协议",slug:"协议",children:[]},{level:3,title:"在服务器上搭建Git",slug:"在服务器上搭建git",children:[]},{level:3,title:"生成SSH公钥",slug:"生成ssh公钥",children:[]},{level:3,title:"配置服务器",slug:"配置服务器",children:[]},{level:3,title:"Git守护进程",slug:"git守护进程",children:[]},{level:3,title:"Smart HTTP",slug:"smart-http",children:[]},{level:3,title:"GitWeb",slug:"gitweb",children:[]},{level:3,title:"GitLab",slug:"gitlab",children:[]}]},{level:2,title:"分布式Git",slug:"分布式git",children:[{level:3,title:"分布式工作流程",slug:"分布式工作流程",children:[]},{level:3,title:"对项目做出贡献",slug:"对项目做出贡献",children:[]},{level:3,title:"维护项目",slug:"维护项目",children:[]}]},{level:2,title:"Git工具",slug:"git工具",children:[{level:3,title:"选择修订版本",slug:"选择修订版本",children:[]},{level:3,title:"交互式暂存",slug:"交互式暂存",children:[]},{level:3,title:"存储与清理",slug:"存储与清理",children:[]},{level:3,title:"签署工作",slug:"签署工作",children:[]},{level:3,title:"搜索",slug:"搜索",children:[]},{level:3,title:"重写历史",slug:"重写历史",children:[]},{level:3,title:"重置揭秘",slug:"重置揭秘",children:[]},{level:3,title:"高级合并",slug:"高级合并",children:[]},{level:3,title:"Refere",slug:"refere",children:[]},{level:3,title:"使用Git调试",slug:"使用git调试",children:[]},{level:3,title:"子模块",slug:"子模块",children:[]},{level:3,title:"打包",slug:"打包",children:[]},{level:3,title:"替换",slug:"替换",children:[]},{level:3,title:"凭证存储",slug:"凭证存储",children:[]}]},{level:2,title:"自定义Git",slug:"自定义git",children:[{level:3,title:"配置Git",slug:"配置git",children:[]},{level:3,title:"Git属性",slug:"git属性",children:[]},{level:3,title:"Git钩子",slug:"git钩子",children:[]},{level:3,title:"使用强制策略",slug:"使用强制策略",children:[]}]},{level:2,title:"Git内部原理",slug:"git内部原理",children:[{level:3,title:"底层命令和高层命令",slug:"底层命令和高层命令",children:[]},{level:3,title:"Git对象",slug:"git对象",children:[]},{level:3,title:"Git引用",slug:"git引用",children:[]},{level:3,title:"包文件",slug:"包文件",children:[]},{level:3,title:"引用规格",slug:"引用规格",children:[]},{level:3,title:"传输协议",slug:"传输协议",children:[]},{level:3,title:"维护与数据恢复",slug:"维护与数据恢复",children:[]},{level:3,title:"环境变量",slug:"环境变量",children:[]}]}],filePathRelative:"books/git/README.md",git:{updatedTime:1626959386e3,contributors:[{name:"jun6.li",email:"jun6.li@ly.com",commits:1}]}}},5:(n,e,a)=>{"use strict";a.r(e),a.d(e,{default:()=>Wl});var l=a(4057);const s=a.p+"assets/img/1.3bc96e6c.png",t=a.p+"assets/img/2.e332200f.png",m=a.p+"assets/img/3.eb824888.png",i=a.p+"assets/img/4.d12b3de5.png",c=a.p+"assets/img/5.6f548221.png",o=(0,l.Wm)("h1",{id:"精通git",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#精通git","aria-hidden":"true"},"#"),(0,l.Uk)(" 精通Git")],-1),u=(0,l.Wm)("h2",{id:"起步",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#起步","aria-hidden":"true"},"#"),(0,l.Uk)(" 起步")],-1),d=(0,l.Wm)("h3",{id:"版本控制",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#版本控制","aria-hidden":"true"},"#"),(0,l.Uk)(" 版本控制")],-1),W=(0,l.Wm)("p",null,[(0,l.Uk)("版本控制"),(0,l.Wm)("code",null,"VCS"),(0,l.Uk)("是一套系统，该系统按时间顺序记录某一个或一系列文件的变更，让我们可以查看其以前的特定版本，其有三种类别："),(0,l.Wm)("strong",null,"本地版本控制系统"),(0,l.Uk)("、"),(0,l.Wm)("strong",null,"集中式版本控制系统"),(0,l.Uk)("、"),(0,l.Wm)("strong",null,"分布式版本控制系统"),(0,l.Uk)("。")],-1),k=(0,l.Wm)("h4",{id:"本地版本控制系统",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#本地版本控制系统","aria-hidden":"true"},"#"),(0,l.Uk)(" 本地版本控制系统")],-1),r=(0,l.Wm)("p",null,[(0,l.Uk)("很多人控制版本的方式是将文件复制到另一个文件目录，甚至还会给目录加上一个时间戳，这种做法很常见，而且很容易实现。但这种方式也同样出错，随后衍生出来的"),(0,l.Wm)("code",null,"RCS"),(0,l.Uk)("工具，它是一种常见的"),(0,l.Wm)("code",null,"VCS"),(0,l.Uk)("工具，它会在磁盘上以一种特殊的格式保存补丁集。")],-1),h=(0,l.Wm)("p",null,[(0,l.Wm)("img",{src:s,alt:"本地版本控制系统"})],-1),U=(0,l.Wm)("h4",{id:"集中式版本控制系统",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#集中式版本控制系统","aria-hidden":"true"},"#"),(0,l.Uk)(" 集中式版本控制系统")],-1),g=(0,l.Wm)("p",null,[(0,l.Uk)("由于本地版本控制系统无法解决多人协作问题，集中式版本控制系统"),(0,l.Wm)("code",null,"CVCS"),(0,l.Uk)("也就应运而生了。它与本地版本控制系统相比，有多方面的优势：")],-1),p=(0,l.Wm)("ul",null,[(0,l.Wm)("li",null,"所有人在一定程度上知道其他人在项目里做了什么。"),(0,l.Wm)("li",null,"管理员可以精细的控制每一个人的权限。"),(0,l.Wm)("li",null,"维护一个集中式版本控制系统要比在每台客户机上都维护一个数据库简单得多。")],-1),b=(0,l.Wm)("p",null,"但集中式版本控制系统也不是没有缺点的，它最大的缺点是故障问题：如果集中式服务器存在故障宕机，那么这期间任何人都不能协作或者提交更改；如果中央数据库所在的硬盘受损，备份也没有保住的情况下，代码将会面临全面丢失的风险。",-1),f=(0,l.Wm)("p",null,[(0,l.Wm)("img",{src:t,alt:"集中式版本控制系统"})],-1),x=(0,l.Wm)("h4",{id:"分布式版本控制系统",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#分布式版本控制系统","aria-hidden":"true"},"#"),(0,l.Uk)(" 分布式版本控制系统")],-1),v=(0,l.Wm)("p",null,[(0,l.Uk)("为了针对解决以上集中式版本控制系统所存在的潜在问题，进而出现了分布式版本控制系统"),(0,l.Wm)("code",null,"DVCS"),(0,l.Uk)("。对于一个分布式版本控制系统来说，客户端冰粉仅仅是检出文件的最新快照，而是对代码仓库进行完整的镜像。这样一来，无论哪一个服务器出现故障，任何一个客户端都可以使用自己本地的镜像来恢复服务器。")],-1),G=(0,l.Wm)("p",null,[(0,l.Wm)("img",{src:m,alt:"分布式版本控制系统"})],-1),E=(0,l.Wm)("p",null,"除了以上提到的有点，分布式版本控制系统可以很好的处理多个远程仓库。",-1),A=(0,l.Wm)("h3",{id:"简史",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#简史","aria-hidden":"true"},"#"),(0,l.Uk)(" 简史")],-1),$=(0,l.Wm)("p",null,[(0,l.Uk)("同许多伟大的事物一样，"),(0,l.Wm)("code",null,"Git"),(0,l.Uk)("的诞生伴随着许多颠覆式的创新以及激烈的争论。")],-1),D=(0,l.Wm)("ul",null,[(0,l.Wm)("li",null,[(0,l.Uk)("2002年，"),(0,l.Wm)("code",null,"Linux"),(0,l.Uk)("内核项目开始采用一款叫做"),(0,l.Wm)("code",null,"BitKeeper"),(0,l.Uk)("的专用分布式版本控制系统。")]),(0,l.Wm)("li",null,[(0,l.Uk)("2005年，"),(0,l.Wm)("code",null,"Linux"),(0,l.Uk)("开发者社区与"),(0,l.Wm)("code",null,"BitKeeper"),(0,l.Uk)("研发公司关系破裂，该公司回收了软件的免费使用权，这个事情促使了"),(0,l.Wm)("code",null,"Linux"),(0,l.Uk)("开发社区决定开发自己的版本控制系统。")]),(0,l.Wm)("li",null,[(0,l.Uk)("2005年，"),(0,l.Wm)("code",null,"Git"),(0,l.Uk)("版本控制系统诞生。")])],-1),M=(0,l.Wm)("p",null,[(0,l.Wm)("code",null,"Git"),(0,l.Uk)("开发之初，它的设计目标如下：")],-1),R=(0,l.Wm)("ul",null,[(0,l.Wm)("li",null,"速度快"),(0,l.Wm)("li",null,"设计简洁"),(0,l.Wm)("li",null,"对于非线性开发强有力的支持"),(0,l.Wm)("li",null,"完全的分布式设计"),(0,l.Wm)("li",null,"能够有效的处理大象项目")],-1),w=(0,l.Wm)("h3",{id:"git基础",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#git基础","aria-hidden":"true"},"#"),(0,l.Uk)(" Git基础")],-1),y=(0,l.Wm)("h4",{id:"快照-而非差异",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#快照-而非差异","aria-hidden":"true"},"#"),(0,l.Uk)(" 快照，而非差异")],-1),H=(0,l.Wm)("p",null,[(0,l.Wm)("code",null,"Git"),(0,l.Uk)("与其他版本控制系统相比，最大的不同在于其对待数据的方式。")],-1),S=(0,l.Wm)("ul",null,[(0,l.Wm)("li",null,"其他版本控制系统：将其存储的信息视为一组文件以及对这些文件随时间所作出的变更。")],-1),C=(0,l.Wm)("p",null,[(0,l.Wm)("img",{src:i,alt:"其他版本控制系统"})],-1),N=(0,l.Wm)("ul",null,[(0,l.Wm)("li",null,[(0,l.Wm)("code",null,"Git"),(0,l.Uk)("版本控制系统：每次提交或在"),(0,l.Wm)("code",null,"Git"),(0,l.Uk)("中保存项目的状态时，"),(0,l.Wm)("code",null,"Git"),(0,l.Uk)("会抓取一张所有文件当前状态的快照，然后存储一个指向该快照的引用。 "),(0,l.Wm)("img",{src:c,alt:"Git控制系统"})])],-1),L=(0,l.Wm)("h4",{id:"git的完整性",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#git的完整性","aria-hidden":"true"},"#"),(0,l.Uk)(" Git的完整性")],-1),O=(0,l.Wm)("p",null,[(0,l.Wm)("code",null,"Git"),(0,l.Uk)("的所有数据在存储前都会执行校验和计算，随后以校验和来引用对应的数据，其采用的校验和机制叫做"),(0,l.Wm)("code",null,"SHA-1"),(0,l.Uk)("散列，它是一个由"),(0,l.Wm)("code",null,"40"),(0,l.Uk)("个十六进制字符所组成的字符串，它是根据文件内容或"),(0,l.Wm)("code",null,"Git"),(0,l.Uk)("的目录结构计算所得到的。一个"),(0,l.Wm)("code",null,"SHA-1"),(0,l.Uk)("散列的案例如下：")],-1),I=(0,l.Wm)("div",{class:"language-bash ext-sh"},[(0,l.Wm)("pre",{class:"language-bash"},[(0,l.Wm)("code",null,"24b9da6552252987aa493b52f8696cd6d3b00373\n")])],-1),T=(0,l.Wm)("h4",{id:"三种状态",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#三种状态","aria-hidden":"true"},"#"),(0,l.Uk)(" 三种状态")],-1),j=(0,l.Wm)("p",null,[(0,l.Uk)("在"),(0,l.Wm)("code",null,"Git"),(0,l.Uk)("中，文件可以处于以下三种状态之一：")],-1),P=(0,l.Wm)("ul",null,[(0,l.Wm)("li",null,[(0,l.Uk)("已修改"),(0,l.Wm)("code",null,"modified"),(0,l.Uk)("：已修改表示已经改动了文件，但尚未提交到数据库。")]),(0,l.Wm)("li",null,[(0,l.Uk)("已暂存"),(0,l.Wm)("code",null,"staged"),(0,l.Uk)("：已暂存表示对已修改文件的当前版本做出了标识并将其加入到下一次提交的快照中。")]),(0,l.Wm)("li",null,[(0,l.Uk)("已提交"),(0,l.Wm)("code",null,"committed"),(0,l.Uk)("：已提交表示数据已经被安全地存入本地数据库中。")])],-1),V=(0,l.Wm)("p",null,[(0,l.Uk)("根据以上文件的三种状态，由此便引入了"),(0,l.Wm)("code",null,"Git"),(0,l.Uk)("的三个主要区域的概念：")],-1),_=(0,l.Wm)("ul",null,[(0,l.Wm)("li",null,"工作目录：是项目某个版本的单次检出"),(0,l.Wm)("li",null,[(0,l.Uk)("暂存区：是一个文件，一般位于"),(0,l.Wm)("code",null,"Git"),(0,l.Uk)("目录中，它保存了下一次所要提交内容的相关信息。")]),(0,l.Wm)("li",null,[(0,l.Wm)("code",null,"Git目录"),(0,l.Uk)("：是保存项目元数据和对象数据库的地方，它是"),(0,l.Wm)("code",null,"Git"),(0,l.Uk)("最核心最重要的部分。")])],-1),B=(0,l.Wm)("p",null,[(0,l.Uk)("根据以上的概念，我们不难推测出"),(0,l.Wm)("code",null,"Git"),(0,l.Uk)("的基本工作流：")],-1),K=(0,l.Wm)("ul",null,[(0,l.Wm)("li",null,"修改工作目录中的文件。"),(0,l.Wm)("li",null,"暂存文件，将这些文件的快照加入暂存区。"),(0,l.Wm)("li",null,[(0,l.Uk)("提交暂存区中的文件，将快照永久的保存在"),(0,l.Wm)("code",null,"Git"),(0,l.Uk)("目录中。")])],-1),z=(0,l.Wm)("h2",{id:"git基础-1",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#git基础-1","aria-hidden":"true"},"#"),(0,l.Uk)(" Git基础")],-1),F=(0,l.Wm)("p",null,[(0,l.Uk)("在安装完毕"),(0,l.Wm)("code",null,"Git"),(0,l.Uk)("后，我们首先需要做的就是配置"),(0,l.Wm)("code",null,"Git"),(0,l.Uk)("信息配置：")],-1),Y=(0,l.Wm)("div",{class:"custom-container tip"},[(0,l.Wm)("p",{class:"custom-container-title"},"参数说明"),(0,l.Wm)("p",null,[(0,l.Wm)("code",null,"--global"),(0,l.Uk)("参数代表在当前计算机中全局配置，如果不带此参数，则代表仅在当前的"),(0,l.Wm)("code",null,"Git"),(0,l.Uk)("目录下配置用户名和邮箱地址。")])],-1),q=(0,l.Wm)("div",{class:"language-bash ext-sh"},[(0,l.Wm)("pre",{class:"language-bash"},[(0,l.Wm)("code",null,[(0,l.Uk)("$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(" config --global user.name "),(0,l.Wm)("span",{class:"token string"},"'your name'"),(0,l.Uk)("\n$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(" config --global user.email "),(0,l.Wm)("span",{class:"token string"},"'you email'"),(0,l.Uk)("\n")])])],-1),J=(0,l.Wm)("p",null,[(0,l.Uk)("注意：配置用户名和电子邮件地址非常重要，因为"),(0,l.Wm)("code",null,"Git"),(0,l.Uk)("的每一次提交都会用到这些信息，而且还会被写入到所创建的提交中，不可更改。")],-1),Q=(0,l.Wm)("p",null,"在配置完用户名和邮箱地址后，我们可以使用如下命令查看我们的相关配置信息：",-1),X=(0,l.Wm)("div",{class:"language-bash ext-sh"},[(0,l.Wm)("pre",{class:"language-bash"},[(0,l.Wm)("code",null,[(0,l.Wm)("span",{class:"token comment"},"# 列举所有配置"),(0,l.Uk)("\n$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(" config --list\nuser.email"),(0,l.Wm)("span",{class:"token operator"},"="),(0,l.Uk)("your email\nuser.name"),(0,l.Wm)("span",{class:"token operator"},"="),(0,l.Uk)("your name\n\n"),(0,l.Wm)("span",{class:"token comment"},"# 查看单个配置后"),(0,l.Uk)("\n$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(" config user.name\nyour name\n")])])],-1),Z=(0,l.Wm)("h3",{id:"获取git仓库",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#获取git仓库","aria-hidden":"true"},"#"),(0,l.Uk)(" 获取Git仓库")],-1),nn=(0,l.Wm)("p",null,[(0,l.Uk)("建立"),(0,l.Wm)("code",null,"Git"),(0,l.Uk)("项目的方法主要有两种：第一种是把现有项目或者目录导入到"),(0,l.Wm)("code",null,"Git"),(0,l.Uk)("中，另外一种是从服务器上克隆现有的"),(0,l.Wm)("code",null,"Git"),(0,l.Uk)("仓库。")],-1),en=(0,l.Wm)("p",null,[(0,l.Uk)("在现有目录下，使用如下命令可以把项目进行"),(0,l.Wm)("code",null,"Git"),(0,l.Uk)("管理：")],-1),an=(0,l.Wm)("div",{class:"language-bash ext-sh"},[(0,l.Wm)("pre",{class:"language-bash"},[(0,l.Wm)("code",null,[(0,l.Uk)("$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(" init\n")])])],-1),ln=(0,l.Wm)("p",null,[(0,l.Uk)("这个命令会在当前目录下，新建一个"),(0,l.Wm)("code",null,".git"),(0,l.Uk)("文件夹，这个文件夹包含了构成"),(0,l.Wm)("code",null,"Git"),(0,l.Uk)("仓库骨架的所有必须文件。")],-1),sn=(0,l.Wm)("p",null,[(0,l.Uk)("克隆仓库需要使用"),(0,l.Wm)("code",null,"git clone [url]"),(0,l.Uk)("命令：")],-1),tn=(0,l.Wm)("div",{class:"language-bash ext-sh"},[(0,l.Wm)("pre",{class:"language-bash"},[(0,l.Wm)("code",null,[(0,l.Wm)("span",{class:"token comment"},"# 克隆现有仓库"),(0,l.Uk)("\n$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(" clone https://github.com/wangtunan/blog\n")])])],-1),mn=(0,l.Wm)("p",null,[(0,l.Uk)("执行这段命令后，会创建一个叫做"),(0,l.Wm)("code",null,"blog"),(0,l.Uk)("的目录，并在其中初始化"),(0,l.Wm)("code",null,".git"),(0,l.Uk)("目录，然后将远程仓库中所有的数据拉取到本地并检出最新版本的可用副本。")],-1),cn=(0,l.Wm)("p",null,"如果我们在克隆的时候，需要更改创建目录的名字，可以如下方式：",-1),on=(0,l.Wm)("div",{class:"language-bash ext-sh"},[(0,l.Wm)("pre",{class:"language-bash"},[(0,l.Wm)("code",null,[(0,l.Wm)("span",{class:"token comment"},"# 克隆现有仓库，新创建的目录名字叫做newblog"),(0,l.Uk)("\n$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(" clone https://github.com/wangtunan/blog newblog\n")])])],-1),un=(0,l.Wm)("h3",{id:"记录更改到仓库",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#记录更改到仓库","aria-hidden":"true"},"#"),(0,l.Uk)(" 记录更改到仓库")],-1),dn=(0,l.Wm)("p",null,[(0,l.Uk)("在"),(0,l.Wm)("code",null,"Git"),(0,l.Uk)("工作目录中，每一个文件都处于两种状态之一：")],-1),Wn=(0,l.Wm)("ul",null,[(0,l.Wm)("li",null,"已跟踪：是指上一次快照中包含的文件，这些文件又可以分为未修改、已修改或已暂存三种状态。"),(0,l.Wm)("li",null,"未跟踪：工作目录中排出已跟踪文件之外的所有文件。")],-1),kn=(0,l.Wm)("h4",{id:"查看当前文件的状态",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#查看当前文件的状态","aria-hidden":"true"},"#"),(0,l.Uk)(" 查看当前文件的状态")],-1),rn=(0,l.Wm)("p",null,[(0,l.Uk)("如果我们在"),(0,l.Wm)("code",null,"git init"),(0,l.Uk)("或者克隆仓库后立即使用"),(0,l.Wm)("code",null,"git status"),(0,l.Uk)("命令来检查文件的状态，将会输出以下信息：")],-1),hn=(0,l.Wm)("div",{class:"language-bash ext-sh"},[(0,l.Wm)("pre",{class:"language-bash"},[(0,l.Wm)("code",null,[(0,l.Uk)("$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(" status\nOn branch master\nNo commits yet\nnothing to commit "),(0,l.Wm)("span",{class:"token punctuation"},"("),(0,l.Uk)("create/copy files and use "),(0,l.Wm)("span",{class:"token string"},'"git add"'),(0,l.Uk)(" to track"),(0,l.Wm)("span",{class:"token punctuation"},")"),(0,l.Uk)("\n")])])],-1),Un=(0,l.Wm)("p",null,[(0,l.Uk)("以上说明代表我们的工作目录是干净的，这个时候如果我们新建了一个"),(0,l.Wm)("code",null,"README.md"),(0,l.Uk)("文件，再次使用"),(0,l.Wm)("code",null,"git status"),(0,l.Uk)("后，它的输出信息就会变成如下所示：")],-1),gn=(0,l.Wm)("div",{class:"language-bash ext-sh"},[(0,l.Wm)("pre",{class:"language-bash"},[(0,l.Wm)("code",null,[(0,l.Uk)("$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(" status\nOn branch master\nNo commits yet\nUntracked files:\n  "),(0,l.Wm)("span",{class:"token punctuation"},"("),(0,l.Uk)("use "),(0,l.Wm)("span",{class:"token string"},'"git add <file>..."'),(0,l.Uk)(" to include "),(0,l.Wm)("span",{class:"token keyword"},"in"),(0,l.Uk)(" what will be committed"),(0,l.Wm)("span",{class:"token punctuation"},")"),(0,l.Uk)("\n\n        README.md\n\nnothing added to commit but untracked files present "),(0,l.Wm)("span",{class:"token punctuation"},"("),(0,l.Uk)("use "),(0,l.Wm)("span",{class:"token string"},'"git add"'),(0,l.Uk)(" to track"),(0,l.Wm)("span",{class:"token punctuation"},")"),(0,l.Uk)("\n")])])],-1),pn=(0,l.Wm)("p",null,[(0,l.Uk)("在以上代码的提示中我们可以看到，新创建的"),(0,l.Wm)("code",null,"README.md"),(0,l.Uk)("文件处于未跟踪状态。"),(0,l.Wm)("br"),(0,l.Uk)(" 在"),(0,l.Wm)("code",null,"Git"),(0,l.Uk)("中判断一个文件是否已跟踪是根据上一次的快照为基础进行对比的。需要注意的是"),(0,l.Wm)("code",null,"Git"),(0,l.Uk)("并不会主动的帮我们把这些文件包含到下一次提交的文件范围中，这样做是为了避免不小心把编译生成的二进制文件或者其他我们不想跟踪的文件包含进来。")],-1),bn=(0,l.Wm)("p",null,[(0,l.Wm)("strong",null,"注意"),(0,l.Uk)("：如果你觉得"),(0,l.Wm)("code",null,"git status"),(0,l.Uk)("命令的输出消息过于全面，"),(0,l.Wm)("code",null,"Git"),(0,l.Uk)("提供了一种显示简短状态命令行的选项，添加"),(0,l.Wm)("code",null,"--short"),(0,l.Uk)("参数：")],-1),fn=(0,l.Wm)("div",{class:"language-bash ext-sh"},[(0,l.Wm)("pre",{class:"language-bash"},[(0,l.Wm)("code",null,[(0,l.Wm)("span",{class:"token comment"},"# 显示简短信息"),(0,l.Uk)("\n$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(" status -s\n"),(0,l.Wm)("span",{class:"token comment"},"# 或者"),(0,l.Uk)("\n$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(" status --short\nA  README.md\n")])])],-1),xn=(0,l.Wm)("p",null,"简写说明：",-1),vn=(0,l.Wm)("ul",null,[(0,l.Wm)("li",null,[(0,l.Wm)("code",null,"??"),(0,l.Uk)("：表示未被跟踪的新文件。")]),(0,l.Wm)("li",null,[(0,l.Wm)("code",null,"A"),(0,l.Uk)("：表示已暂存的新文件。")]),(0,l.Wm)("li",null,[(0,l.Wm)("code",null,"M"),(0,l.Uk)("：表示已修改的文件。")]),(0,l.Wm)("li",null,[(0,l.Wm)("code",null,"MM"),(0,l.Uk)("：表示被修改过两次的文件。")])],-1),Gn=(0,l.Wm)("h4",{id:"跟踪新文件",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#跟踪新文件","aria-hidden":"true"},"#"),(0,l.Uk)(" 跟踪新文件")],-1),En=(0,l.Wm)("p",null,[(0,l.Uk)("在以上案例中，我们新创建的"),(0,l.Wm)("code",null,"README.md"),(0,l.Uk)("处于未跟踪状态，我们可以使用"),(0,l.Wm)("code",null,"git add"),(0,l.Uk)("命令来让"),(0,l.Wm)("code",null,"Git"),(0,l.Uk)("跟踪此文件：")],-1),An=(0,l.Wm)("div",{class:"custom-container tip"},[(0,l.Wm)("p",{class:"custom-container-title"},"参数说明"),(0,l.Wm)("p",null,[(0,l.Wm)("code",null,"git add"),(0,l.Uk)("命令接受一个文件、多个文件或目录的路径名作为参数，如果提供的参数是目录，该命令会递归地添加该目录下的所有文件。")])],-1),$n=(0,l.Wm)("div",{class:"language-bash ext-sh"},[(0,l.Wm)("pre",{class:"language-bash"},[(0,l.Wm)("code",null,[(0,l.Wm)("span",{class:"token comment"},"# 跟踪README.md文件"),(0,l.Uk)("\n$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(),(0,l.Wm)("span",{class:"token function"},"add"),(0,l.Uk)(" README.md\n"),(0,l.Wm)("span",{class:"token comment"},"# 跟踪完毕后，查看文件状态"),(0,l.Uk)("\n$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(" status\nOn branch master\nNo commits yet\nChanges to be committed:\n  "),(0,l.Wm)("span",{class:"token punctuation"},"("),(0,l.Uk)("use "),(0,l.Wm)("span",{class:"token string"},'"git rm --cached <file>..."'),(0,l.Uk)(" to unstage"),(0,l.Wm)("span",{class:"token punctuation"},")"),(0,l.Uk)("\n\n        new file:   README.md\n")])])],-1),Dn=(0,l.Wm)("h4",{id:"忽略文件",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#忽略文件","aria-hidden":"true"},"#"),(0,l.Uk)(" 忽略文件")],-1),Mn=(0,l.Wm)("p",null,[(0,l.Uk)("有时候我们并不想某一类文件被"),(0,l.Wm)("code",null,"Git"),(0,l.Uk)("自动添加，这个时候我们可以在根目录下新建"),(0,l.Wm)("code",null,".gitignore"),(0,l.Uk)("文件，然后把不想要被"),(0,l.Wm)("code",null,"Git"),(0,l.Uk)("跟踪的文件名或者其他匹配模式填写进去即可：")],-1),Rn=(0,l.Wm)("div",{class:"language-bash ext-sh"},[(0,l.Wm)("pre",{class:"language-bash"},[(0,l.Wm)("code",null,[(0,l.Uk)("package-lock.json "),(0,l.Wm)("span",{class:"token comment"},"# 不跟踪单个文件"),(0,l.Uk)("\nnode_modules/     "),(0,l.Wm)("span",{class:"token comment"},"# 不跟踪node_modules目录下的所有文件"),(0,l.Uk)("\ndist/             "),(0,l.Wm)("span",{class:"token comment"},"# 不跟踪dist目录下的所有文件"),(0,l.Uk)("\n*.txt             "),(0,l.Wm)("span",{class:"token comment"},"# 不跟踪所有.txt文件"),(0,l.Uk)("\n")])])],-1),wn=(0,l.Wm)("h4",{id:"查看已暂存和未暂存的变更",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#查看已暂存和未暂存的变更","aria-hidden":"true"},"#"),(0,l.Uk)(" 查看已暂存和未暂存的变更")],-1),yn=(0,l.Wm)("p",null,[(0,l.Uk)("如果"),(0,l.Wm)("code",null,"git status"),(0,l.Uk)("命名显示的信息对你来说信息太过于泛泛，你想要知道具体修改了哪些内容，而不仅仅是更改了哪些文件，这时可以使用"),(0,l.Wm)("code",null,"git diff"),(0,l.Uk)("命令：")],-1),Hn=(0,l.Wm)("div",{class:"language-bash ext-sh"},[(0,l.Wm)("pre",{class:"language-bash"},[(0,l.Wm)("code",null,[(0,l.Wm)("span",{class:"token comment"},"# 查看未添加到暂存区的变更"),(0,l.Uk)("\n$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(),(0,l.Wm)("span",{class:"token function"},"diff"),(0,l.Uk)("\n"),(0,l.Wm)("span",{class:"token function"},"diff"),(0,l.Uk)(" --git a/README.md b/README.md\nindex 5628bfe"),(0,l.Wm)("span",{class:"token punctuation"},".."),(0,l.Uk)("c557f44 "),(0,l.Wm)("span",{class:"token number"},"100644"),(0,l.Uk)("\n--- a/README.md\n+++ b/README.md\n@@ -1 +1,3 @@\n-"),(0,l.Wm)("span",{class:"token comment"},"# 精通Git"),(0,l.Uk)("\n"),(0,l.Wm)("span",{class:"token punctuation"},"\\"),(0,l.Uk)(" No newline at end of "),(0,l.Wm)("span",{class:"token function"},"file"),(0,l.Uk)("\n+"),(0,l.Wm)("span",{class:"token comment"},"# 精通Git"),(0,l.Uk)("\n+\n+嘤嘤嘤\n"),(0,l.Wm)("span",{class:"token punctuation"},"\\"),(0,l.Uk)(" No newline at end of "),(0,l.Wm)("span",{class:"token function"},"file"),(0,l.Uk)("\n")])])],-1),Sn=(0,l.Wm)("p",null,[(0,l.Uk)("以上命令仅仅只是查看未添加到暂存区的变更，可以添加"),(0,l.Wm)("code",null,"--staged"),(0,l.Uk)("参数，查看哪些已暂存的内容会进入下一次提交：")],-1),Cn=(0,l.Wm)("div",{class:"language-bash ext-sh"},[(0,l.Wm)("pre",{class:"language-bash"},[(0,l.Wm)("code",null,[(0,l.Wm)("span",{class:"token comment"},"# 查看哪些已暂存的内容下一次会被提交"),(0,l.Uk)("\n$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(),(0,l.Wm)("span",{class:"token function"},"diff"),(0,l.Uk)(" --staged\n"),(0,l.Wm)("span",{class:"token comment"},"# 或者"),(0,l.Uk)("\n$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(),(0,l.Wm)("span",{class:"token function"},"diff"),(0,l.Uk)(" --cached\n"),(0,l.Wm)("span",{class:"token function"},"diff"),(0,l.Uk)(" --git a/README.md b/README.md\nnew "),(0,l.Wm)("span",{class:"token function"},"file"),(0,l.Uk)(" mode "),(0,l.Wm)("span",{class:"token number"},"100644"),(0,l.Uk)("\nindex 0000000"),(0,l.Wm)("span",{class:"token punctuation"},".."),(0,l.Uk)("5628bfe\n--- /dev/null\n+++ b/README.md\n@@ -0,0 +1 @@\n+"),(0,l.Wm)("span",{class:"token comment"},"# 精通Git"),(0,l.Uk)("\n"),(0,l.Wm)("span",{class:"token punctuation"},"\\"),(0,l.Uk)(" No newline at end of "),(0,l.Wm)("span",{class:"token function"},"file"),(0,l.Uk)("\n")])])],-1),Nn=(0,l.Wm)("h4",{id:"提交变更",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#提交变更","aria-hidden":"true"},"#"),(0,l.Uk)(" 提交变更")],-1),Ln=(0,l.Wm)("p",null,[(0,l.Uk)("假如我们的暂存区已经准备完毕，那么可以使用"),(0,l.Wm)("code",null,"git commit"),(0,l.Uk)("命令来提交：")],-1),On=(0,l.Wm)("div",{class:"language-bash ext-sh"},[(0,l.Wm)("pre",{class:"language-bash"},[(0,l.Wm)("code",null,[(0,l.Wm)("span",{class:"token comment"},"# 提交变更，并在命令行中键入提交信息"),(0,l.Uk)("\n$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(" commit -m "),(0,l.Wm)("span",{class:"token function"},"add"),(0,l.Uk)(" README.md\n"),(0,l.Wm)("span",{class:"token punctuation"},"["),(0,l.Uk)("master "),(0,l.Wm)("span",{class:"token punctuation"},"("),(0,l.Uk)("root-commit"),(0,l.Wm)("span",{class:"token punctuation"},")"),(0,l.Uk)(" 7aca891"),(0,l.Wm)("span",{class:"token punctuation"},"]"),(0,l.Uk)(),(0,l.Wm)("span",{class:"token function"},"add"),(0,l.Uk)("\n "),(0,l.Wm)("span",{class:"token number"},"1"),(0,l.Uk)(),(0,l.Wm)("span",{class:"token function"},"file"),(0,l.Uk)(" changed, "),(0,l.Wm)("span",{class:"token number"},"3"),(0,l.Uk)(" insertions"),(0,l.Wm)("span",{class:"token punctuation"},"("),(0,l.Uk)("+"),(0,l.Wm)("span",{class:"token punctuation"},")"),(0,l.Uk)("\n create mode "),(0,l.Wm)("span",{class:"token number"},"100644"),(0,l.Uk)(" README.md\n")])])],-1),In=(0,l.Wm)("p",null,[(0,l.Uk)("在"),(0,l.Wm)("code",null,"Git"),(0,l.Uk)("，暂存区非常有用，但就工作流而言，它有时候显得过于繁琐。如果我们想跳过暂存区直接提交，"),(0,l.Wm)("code",null,"Git"),(0,l.Uk)("为我们提供了更快捷的方式：")],-1),Tn=(0,l.Wm)("div",{class:"language-bash ext-sh"},[(0,l.Wm)("pre",{class:"language-bash"},[(0,l.Wm)("code",null,[(0,l.Wm)("span",{class:"token comment"},"# 添加-a参数，跳过暂存区，直接提交"),(0,l.Uk)("\n$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(" commit  -a -m "),(0,l.Wm)("span",{class:"token string"},'"update README.md"'),(0,l.Uk)("\n"),(0,l.Wm)("span",{class:"token punctuation"},"["),(0,l.Uk)("master "),(0,l.Wm)("span",{class:"token number"},"6444834"),(0,l.Wm)("span",{class:"token punctuation"},"]"),(0,l.Uk)(" update README.md\n "),(0,l.Wm)("span",{class:"token number"},"1"),(0,l.Uk)(),(0,l.Wm)("span",{class:"token function"},"file"),(0,l.Uk)(" changed, "),(0,l.Wm)("span",{class:"token number"},"1"),(0,l.Uk)(" insertion"),(0,l.Wm)("span",{class:"token punctuation"},"("),(0,l.Uk)("+"),(0,l.Wm)("span",{class:"token punctuation"},")"),(0,l.Uk)(", "),(0,l.Wm)("span",{class:"token number"},"3"),(0,l.Uk)(" deletions"),(0,l.Wm)("span",{class:"token punctuation"},"("),(0,l.Uk)("-"),(0,l.Wm)("span",{class:"token punctuation"},")"),(0,l.Uk)("\n")])])],-1),jn=(0,l.Wm)("h4",{id:"重命名文件",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#重命名文件","aria-hidden":"true"},"#"),(0,l.Uk)(" 重命名文件")],-1),Pn=(0,l.Wm)("p",null,[(0,l.Uk)("如果我们重命名了文件，那么"),(0,l.Wm)("code",null,"Git"),(0,l.Uk)("会检测到这种变动，同时我们可以使用"),(0,l.Wm)("code",null,"git mv"),(0,l.Uk)("命令来重命名：")],-1),Vn=(0,l.Wm)("div",{class:"language-bash ext-sh"},[(0,l.Wm)("pre",{class:"language-bash"},[(0,l.Wm)("code",null,[(0,l.Wm)("span",{class:"token comment"},"# 重命名"),(0,l.Uk)("\n$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(),(0,l.Wm)("span",{class:"token function"},"mv"),(0,l.Uk)(" README.md readme.md\n"),(0,l.Wm)("span",{class:"token comment"},"# 查看重命名后的变更"),(0,l.Uk)("\n$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(" status\nOn branch master\nChanges to be committed:\n  "),(0,l.Wm)("span",{class:"token punctuation"},"("),(0,l.Uk)("use "),(0,l.Wm)("span",{class:"token string"},'"git reset HEAD <file>..."'),(0,l.Uk)(" to unstage"),(0,l.Wm)("span",{class:"token punctuation"},")"),(0,l.Uk)("\n\n        renamed:    README.md -"),(0,l.Wm)("span",{class:"token operator"},">"),(0,l.Uk)(" readme.md\n")])])],-1),_n=(0,l.Wm)("p",null,"值得一提的是，虽然我们只键入了一条命令，但它相当于下面三条命令：",-1),Bn=(0,l.Wm)("div",{class:"language-bash ext-sh"},[(0,l.Wm)("pre",{class:"language-bash"},[(0,l.Wm)("code",null,[(0,l.Uk)("$ "),(0,l.Wm)("span",{class:"token function"},"mv"),(0,l.Uk)(" README.md readme.md\n$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(),(0,l.Wm)("span",{class:"token function"},"rm"),(0,l.Uk)(" README.md\n$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(),(0,l.Wm)("span",{class:"token function"},"add"),(0,l.Uk)(" readme.md\n")])])],-1),Kn=(0,l.Wm)("h3",{id:"查看提交历史",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#查看提交历史","aria-hidden":"true"},"#"),(0,l.Uk)(" 查看提交历史")],-1),zn=(0,l.Wm)("p",null,[(0,l.Uk)("在我们完成了几次提交以后，我们可以使用"),(0,l.Wm)("code",null,"git log"),(0,l.Uk)("命令来查看提交历史：")],-1),Fn=(0,l.Wm)("div",{class:"language-bash ext-sh"},[(0,l.Wm)("pre",{class:"language-bash"},[(0,l.Wm)("code",null,[(0,l.Wm)("span",{class:"token comment"},"# 查看提交历史"),(0,l.Uk)("\n$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(" log\ncommit 6444834e8debf9e407c26ee29ae5fb42b9b99511 "),(0,l.Wm)("span",{class:"token punctuation"},"("),(0,l.Uk)("HEAD -"),(0,l.Wm)("span",{class:"token operator"},">"),(0,l.Uk)(" master"),(0,l.Wm)("span",{class:"token punctuation"},")"),(0,l.Uk)("\nAuthor: xxx "),(0,l.Wm)("span",{class:"token operator"},"<"),(0,l.Uk)("xxx@gmail.com"),(0,l.Wm)("span",{class:"token operator"},">"),(0,l.Uk)("\nDate:   Mon Mar "),(0,l.Wm)("span",{class:"token number"},"30"),(0,l.Uk)(),(0,l.Wm)("span",{class:"token number"},"15"),(0,l.Uk)(":19:28 "),(0,l.Wm)("span",{class:"token number"},"2020"),(0,l.Uk)(" +0800\n\n    update README.md\n\ncommit 7aca89161b709f1f16f637703020815c0afb14ea\nAuthor: xxx "),(0,l.Wm)("span",{class:"token operator"},"<"),(0,l.Uk)("xxx@gmail.com"),(0,l.Wm)("span",{class:"token operator"},">"),(0,l.Uk)("\nDate:   Mon Mar "),(0,l.Wm)("span",{class:"token number"},"30"),(0,l.Uk)(),(0,l.Wm)("span",{class:"token number"},"15"),(0,l.Uk)(":13:38 "),(0,l.Wm)("span",{class:"token number"},"2020"),(0,l.Uk)(" +0800\n\n    "),(0,l.Wm)("span",{class:"token function"},"add"),(0,l.Uk)("\n")])])],-1),Yn=(0,l.Wm)("p",null,[(0,l.Uk)("你可以从以上看到，"),(0,l.Wm)("code",null,"git log"),(0,l.Uk)("默认不加参数的情况下，会按时间顺序列出仓库中所有提交，其中最新的提交显示在最前面。")],-1),qn=(0,l.Wm)("p",null,[(0,l.Uk)("如果你觉得上述信息太过于繁琐，可以使用"),(0,l.Wm)("code",null,"--pretty=oneline"),(0,l.Uk)("参数让以上信息显示在一行：")],-1),Jn=(0,l.Wm)("div",{class:"language-bash ext-sh"},[(0,l.Wm)("pre",{class:"language-bash"},[(0,l.Wm)("code",null,[(0,l.Wm)("span",{class:"token comment"},"# 一行显示提交历史信息"),(0,l.Uk)("\n$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(" log --pretty"),(0,l.Wm)("span",{class:"token operator"},"="),(0,l.Uk)("oneline\n6444834e8debf9e407c26ee29ae5fb42b9b99511 "),(0,l.Wm)("span",{class:"token punctuation"},"("),(0,l.Uk)("HEAD -"),(0,l.Wm)("span",{class:"token operator"},">"),(0,l.Uk)(" master"),(0,l.Wm)("span",{class:"token punctuation"},")"),(0,l.Uk)(" update README.md\n7aca89161b709f1f16f637703020815c0afb14ea "),(0,l.Wm)("span",{class:"token function"},"add"),(0,l.Uk)("\n")])])],-1),Qn=(0,l.Wm)("p",null,[(0,l.Wm)("code",null,"--stat"),(0,l.Uk)("参数可以查看每次提交的简要统计信息：")],-1),Xn=(0,l.Wm)("div",{class:"language-bash ext-sh"},[(0,l.Wm)("pre",{class:"language-bash"},[(0,l.Wm)("code",null,[(0,l.Wm)("span",{class:"token comment"},"# 查看简要统计信息"),(0,l.Uk)("\n$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(" log --stat\ncommit 6444834e8debf9e407c26ee29ae5fb42b9b99511 "),(0,l.Wm)("span",{class:"token punctuation"},"("),(0,l.Uk)("HEAD -"),(0,l.Wm)("span",{class:"token operator"},">"),(0,l.Uk)(" master"),(0,l.Wm)("span",{class:"token punctuation"},")"),(0,l.Uk)("\nAuthor: xxx "),(0,l.Wm)("span",{class:"token operator"},"<"),(0,l.Uk)("xxx@gmail.com"),(0,l.Wm)("span",{class:"token operator"},">"),(0,l.Uk)("\nDate:   Mon Mar "),(0,l.Wm)("span",{class:"token number"},"30"),(0,l.Uk)(),(0,l.Wm)("span",{class:"token number"},"15"),(0,l.Uk)(":19:28 "),(0,l.Wm)("span",{class:"token number"},"2020"),(0,l.Uk)(" +0800\n\n    update README.md\n\n README.md "),(0,l.Wm)("span",{class:"token operator"},"|"),(0,l.Uk)(),(0,l.Wm)("span",{class:"token number"},"4"),(0,l.Uk)(" +---\n "),(0,l.Wm)("span",{class:"token number"},"1"),(0,l.Uk)(),(0,l.Wm)("span",{class:"token function"},"file"),(0,l.Uk)(" changed, "),(0,l.Wm)("span",{class:"token number"},"1"),(0,l.Uk)(" insertion"),(0,l.Wm)("span",{class:"token punctuation"},"("),(0,l.Uk)("+"),(0,l.Wm)("span",{class:"token punctuation"},")"),(0,l.Uk)(", "),(0,l.Wm)("span",{class:"token number"},"3"),(0,l.Uk)(" deletions"),(0,l.Wm)("span",{class:"token punctuation"},"("),(0,l.Uk)("-"),(0,l.Wm)("span",{class:"token punctuation"},")"),(0,l.Uk)("\n\ncommit 7aca89161b709f1f16f637703020815c0afb14ea\nAuthor: xxx "),(0,l.Wm)("span",{class:"token operator"},"<"),(0,l.Uk)("xxx@gmail.com"),(0,l.Wm)("span",{class:"token operator"},">"),(0,l.Uk)("\nDate:   Mon Mar "),(0,l.Wm)("span",{class:"token number"},"30"),(0,l.Uk)(),(0,l.Wm)("span",{class:"token number"},"15"),(0,l.Uk)(":13:38 "),(0,l.Wm)("span",{class:"token number"},"2020"),(0,l.Uk)(" +0800\n\n    "),(0,l.Wm)("span",{class:"token function"},"add"),(0,l.Uk)("\n\n README.md "),(0,l.Wm)("span",{class:"token operator"},"|"),(0,l.Uk)(),(0,l.Wm)("span",{class:"token number"},"3"),(0,l.Uk)(" +++\n "),(0,l.Wm)("span",{class:"token number"},"1"),(0,l.Uk)(),(0,l.Wm)("span",{class:"token function"},"file"),(0,l.Uk)(" changed, "),(0,l.Wm)("span",{class:"token number"},"3"),(0,l.Uk)(" insertions"),(0,l.Wm)("span",{class:"token punctuation"},"("),(0,l.Uk)("+"),(0,l.Wm)("span",{class:"token punctuation"},")"),(0,l.Uk)("\n")])])],-1),Zn=(0,l.Wm)("p",null,[(0,l.Uk)("最后一个比较有意思的地方是"),(0,l.Wm)("code",null,"--graph"),(0,l.Uk)("参数，它会使用"),(0,l.Wm)("code",null,"ASCII"),(0,l.Uk)("字符形式的简单图来显示"),(0,l.Wm)("code",null,"Git"),(0,l.Uk)("分支以及合并历史：")],-1),ne=(0,l.Wm)("div",{class:"language-bash ext-sh"},[(0,l.Wm)("pre",{class:"language-bash"},[(0,l.Wm)("code",null,[(0,l.Wm)("span",{class:"token comment"},"# 图形显示提交历史"),(0,l.Uk)("\n$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(" log --graph\n* commit 6444834e8debf9e407c26ee29ae5fb42b9b99511 "),(0,l.Wm)("span",{class:"token punctuation"},"("),(0,l.Uk)("HEAD -"),(0,l.Wm)("span",{class:"token operator"},">"),(0,l.Uk)(" master"),(0,l.Wm)("span",{class:"token punctuation"},")"),(0,l.Uk)("\n"),(0,l.Wm)("span",{class:"token operator"},"|"),(0,l.Uk)(" Author: xxx "),(0,l.Wm)("span",{class:"token operator"},"<"),(0,l.Uk)("xxx@gmail.com"),(0,l.Wm)("span",{class:"token operator"},">"),(0,l.Uk)("\n"),(0,l.Wm)("span",{class:"token operator"},"|"),(0,l.Uk)(" Date:   Mon Mar "),(0,l.Wm)("span",{class:"token number"},"30"),(0,l.Uk)(),(0,l.Wm)("span",{class:"token number"},"15"),(0,l.Uk)(":19:28 "),(0,l.Wm)("span",{class:"token number"},"2020"),(0,l.Uk)(" +0800\n"),(0,l.Wm)("span",{class:"token operator"},"|"),(0,l.Uk)("\n"),(0,l.Wm)("span",{class:"token operator"},"|"),(0,l.Uk)("     update README.md\n"),(0,l.Wm)("span",{class:"token operator"},"|"),(0,l.Uk)("\n* commit 7aca89161b709f1f16f637703020815c0afb14ea\n  Author: xxx "),(0,l.Wm)("span",{class:"token operator"},"<"),(0,l.Uk)("xxx@gmail.com"),(0,l.Wm)("span",{class:"token operator"},">"),(0,l.Uk)("\n  Date:   Mon Mar "),(0,l.Wm)("span",{class:"token number"},"30"),(0,l.Uk)(),(0,l.Wm)("span",{class:"token number"},"15"),(0,l.Uk)(":13:38 "),(0,l.Wm)("span",{class:"token number"},"2020"),(0,l.Uk)(" +0800\n\n      "),(0,l.Wm)("span",{class:"token function"},"add"),(0,l.Uk)("\n")])])],-1),ee=(0,l.Wm)("p",null,[(0,l.Wm)("code",null,"git log"),(0,l.Uk)("还有一些其他参数，下列表格列举了常用的选项：")],-1),ae=(0,l.Wm)("table",null,[(0,l.Wm)("thead",null,[(0,l.Wm)("tr",null,[(0,l.Wm)("th",null,"选项"),(0,l.Wm)("th",null,"描述")])]),(0,l.Wm)("tbody",null,[(0,l.Wm)("tr",null,[(0,l.Wm)("td",null,[(0,l.Wm)("code",null,"-p")]),(0,l.Wm)("td",null,"按补丁格式显示每个提交引入的更改")]),(0,l.Wm)("tr",null,[(0,l.Wm)("td",null,[(0,l.Wm)("code",null,"--stat")]),(0,l.Wm)("td",null,"显示每个提交中被更改的文件的统计信息")]),(0,l.Wm)("tr",null,[(0,l.Wm)("td",null,[(0,l.Wm)("code",null,"--shortstat")]),(0,l.Wm)("td",null,[(0,l.Uk)("只显示上述"),(0,l.Wm)("code",null,"--stat"),(0,l.Uk)("输出中包含“已更改/新增/删除”行的统计信息")])]),(0,l.Wm)("tr",null,[(0,l.Wm)("td",null,[(0,l.Wm)("code",null,"--name-only")]),(0,l.Wm)("td",null,"只显示每个提交信息后显示被更改的文件列表")]),(0,l.Wm)("tr",null,[(0,l.Wm)("td",null,[(0,l.Wm)("code",null,"--name-status")]),(0,l.Wm)("td",null,"在上一个选项输出基础上还显示出“已更改/新增/删除”的统计信息")]),(0,l.Wm)("tr",null,[(0,l.Wm)("td",null,[(0,l.Wm)("code",null,"--abbrev-commit")]),(0,l.Wm)("td",null,[(0,l.Uk)("只显示完整的"),(0,l.Wm)("code",null,"SHA-1"),(0,l.Uk)("40位校验和字符串中的前几位")])]),(0,l.Wm)("tr",null,[(0,l.Wm)("td",null,[(0,l.Wm)("code",null,"--relative-data")]),(0,l.Wm)("td",null,"显示相对日期")]),(0,l.Wm)("tr",null,[(0,l.Wm)("td",null,[(0,l.Wm)("code",null,"--graph")]),(0,l.Wm)("td",null,[(0,l.Uk)("在提交历史旁边显示"),(0,l.Wm)("code",null,"ASCII"),(0,l.Uk)("图表，用于展示分支和合并的历史信息")])]),(0,l.Wm)("tr",null,[(0,l.Wm)("td",null,[(0,l.Wm)("code",null,"--pretty")]),(0,l.Wm)("td",null,[(0,l.Uk)("用一种可选格式显示提交，选项有"),(0,l.Wm)("code",null,"oneline"),(0,l.Uk)("、"),(0,l.Wm)("code",null,"short"),(0,l.Uk)("、"),(0,l.Wm)("code",null,"full"),(0,l.Uk)("、"),(0,l.Wm)("code",null,"fuller"),(0,l.Uk)("、"),(0,l.Wm)("code",null,"format")])])])],-1),le=(0,l.Wm)("h4",{id:"限制提交历史的显示范围",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#限制提交历史的显示范围","aria-hidden":"true"},"#"),(0,l.Uk)(" 限制提交历史的显示范围")],-1),se=(0,l.Wm)("p",null,[(0,l.Uk)("用于限制"),(0,l.Wm)("code",null,"git log"),(0,l.Uk)("显示范围的常用选项如下表：")],-1),te=(0,l.Wm)("table",null,[(0,l.Wm)("thead",null,[(0,l.Wm)("tr",null,[(0,l.Wm)("th",null,"选项"),(0,l.Wm)("th",null,"描述")])]),(0,l.Wm)("tbody",null,[(0,l.Wm)("tr",null,[(0,l.Wm)("td",null,[(0,l.Wm)("code",null,"-(n)")]),(0,l.Wm)("td",null,[(0,l.Uk)("只显示最新的"),(0,l.Wm)("code",null,"n"),(0,l.Uk)("次提交")])]),(0,l.Wm)("tr",null,[(0,l.Wm)("td",null,[(0,l.Wm)("code",null,"--since"),(0,l.Uk)(", "),(0,l.Wm)("code",null,"--after")]),(0,l.Wm)("td",null,"只输出指定日期之后的提交")]),(0,l.Wm)("tr",null,[(0,l.Wm)("td",null,[(0,l.Wm)("code",null,"--until"),(0,l.Uk)(", "),(0,l.Wm)("code",null,"--before")]),(0,l.Wm)("td",null,"只输出指定日期之前的提交")]),(0,l.Wm)("tr",null,[(0,l.Wm)("td",null,[(0,l.Wm)("code",null,"--author")]),(0,l.Wm)("td",null,"只输出与指定字符相匹配作者的提交")]),(0,l.Wm)("tr",null,[(0,l.Wm)("td",null,[(0,l.Wm)("code",null,"--commit")]),(0,l.Wm)("td",null,"只输出与指定字符相匹配提交者的提交")]),(0,l.Wm)("tr",null,[(0,l.Wm)("td",null,[(0,l.Wm)("code",null,"--grep")]),(0,l.Wm)("td",null,"只输出与指定字符相匹配提交信息的提交")]),(0,l.Wm)("tr",null,[(0,l.Wm)("td",null,[(0,l.Wm)("code",null,"--S")]),(0,l.Wm)("td",null,"只输出包含“添加或删除指定字符串”的更改的提交")])])],-1),me=(0,l.Wm)("div",{class:"language-bash ext-sh"},[(0,l.Wm)("pre",{class:"language-bash"},[(0,l.Wm)("code",null,[(0,l.Wm)("span",{class:"token comment"},"# 只显示最近一次的提交"),(0,l.Uk)("\n$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(" log -1\n"),(0,l.Wm)("span",{class:"token comment"},"# 只显示作者为xxx的提交"),(0,l.Uk)("\n$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(" log --author"),(0,l.Wm)("span",{class:"token operator"},"="),(0,l.Uk)("wangtunan\n"),(0,l.Wm)("span",{class:"token comment"},"# 只显示2020年3月31日之前的提交"),(0,l.Uk)("\n$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(" log --before"),(0,l.Wm)("span",{class:"token operator"},"="),(0,l.Wm)("span",{class:"token string"},"'2020-03-31'"),(0,l.Uk)("\n")])])],-1),ie=(0,l.Wm)("h3",{id:"撤销操作",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#撤销操作","aria-hidden":"true"},"#"),(0,l.Uk)(" 撤销操作")],-1),ce=(0,l.Wm)("p",null,"有一种撤销操作的场景场景是提交之后发现自己忘记添加某些文件或者写错了提交信息，此时如果想重新提交，可以使用如下命令：",-1),oe=(0,l.Wm)("div",{class:"language-bash ext-sh"},[(0,l.Wm)("pre",{class:"language-bash"},[(0,l.Wm)("code",null,[(0,l.Wm)("span",{class:"token comment"},"# 重新添加提交信息"),(0,l.Uk)("\n$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(" commit -m --amend\n")])])],-1),ue=(0,l.Wm)("p",null,[(0,l.Uk)("注意：使用"),(0,l.Wm)("code",null,"--amend"),(0,l.Uk)("重新提交，只会产生一个提交，这是因为重新提交的命令修改了第一个提交的结果。")],-1),de=(0,l.Wm)("h4",{id:"撤销已暂存的文件",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#撤销已暂存的文件","aria-hidden":"true"},"#"),(0,l.Uk)(" 撤销已暂存的文件")],-1),We=(0,l.Wm)("p",null,[(0,l.Uk)("假设我们不小心把不该提交的文件使用了"),(0,l.Wm)("code",null,"git add"),(0,l.Uk)("命令暂存了，可以使用"),(0,l.Wm)("code",null,"git status"),(0,l.Uk)("命令的提示信息来撤销已暂存的文件：")],-1),ke=(0,l.Wm)("div",{class:"language-bash ext-sh"},[(0,l.Wm)("pre",{class:"language-bash"},[(0,l.Wm)("code",null,[(0,l.Wm)("span",{class:"token comment"},"# 错误提交了README.md文件"),(0,l.Uk)("\n$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(),(0,l.Wm)("span",{class:"token function"},"add"),(0,l.Uk)(" README.md\n"),(0,l.Wm)("span",{class:"token comment"},"# 查看文件状态"),(0,l.Uk)("\n$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(" status\nOn branch master\nChanges to be committed:\n  "),(0,l.Wm)("span",{class:"token punctuation"},"("),(0,l.Uk)("use "),(0,l.Wm)("span",{class:"token string"},'"git reset HEAD <file>..."'),(0,l.Uk)(" to unstage"),(0,l.Wm)("span",{class:"token punctuation"},")"),(0,l.Uk)("\n\n        deleted:    README.md\n")])])],-1),re=(0,l.Wm)("p",null,[(0,l.Uk)("在以上提示信息中，我们可以发现使用"),(0,l.Wm)("code",null,"git reset"),(0,l.Uk)("命令可以取消已暂存的文件：")],-1),he=(0,l.Wm)("div",{class:"language-bash ext-sh"},[(0,l.Wm)("pre",{class:"language-bash"},[(0,l.Wm)("code",null,[(0,l.Wm)("span",{class:"token comment"},"# 取消已暂存的文件"),(0,l.Uk)("\n$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(" reset HEAD README.md\n")])])],-1),Ue=(0,l.Wm)("h4",{id:"撤销对文件的修改",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#撤销对文件的修改","aria-hidden":"true"},"#"),(0,l.Uk)(" 撤销对文件的修改")],-1),ge=(0,l.Wm)("div",{class:"custom-container warning"},[(0,l.Wm)("p",{class:"custom-container-title"},"WARNING"),(0,l.Wm)("p",null,[(0,l.Wm)("code",null,"git checkout -- [file]"),(0,l.Uk)("是一条危险的命令，因为它会丢弃已经修改的内容，而且这种撤销是不可恢复的，在执行这条命令之前务必确保一定不在需要某个文件的修改。")])],-1),pe=(0,l.Wm)("p",null,[(0,l.Uk)("在某些情况下，我们发现不再需要对某个文件的修改了，可以使用"),(0,l.Wm)("code",null,"git checkout"),(0,l.Uk)("命令来帮着我们撤销已经修改的文件：")],-1),be=(0,l.Wm)("div",{class:"language-bash ext-sh"},[(0,l.Wm)("pre",{class:"language-bash"},[(0,l.Wm)("code",null,[(0,l.Wm)("span",{class:"token comment"},"# 查看文件的状态"),(0,l.Uk)("\n$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(" status\n  "),(0,l.Wm)("span",{class:"token punctuation"},"("),(0,l.Uk)("use "),(0,l.Wm)("span",{class:"token string"},'"git add <file>..."'),(0,l.Uk)(" to update what will be committed"),(0,l.Wm)("span",{class:"token punctuation"},")"),(0,l.Uk)("\n  "),(0,l.Wm)("span",{class:"token punctuation"},"("),(0,l.Uk)("use "),(0,l.Wm)("span",{class:"token string"},'"git checkout -- <file>..."'),(0,l.Uk)(" to discard changes "),(0,l.Wm)("span",{class:"token keyword"},"in"),(0,l.Uk)(" working directory"),(0,l.Wm)("span",{class:"token punctuation"},")"),(0,l.Uk)("\n\n        modified:   README.md\n")])])],-1),fe=(0,l.Wm)("p",null,[(0,l.Uk)("我们可以发现，提示的"),(0,l.Wm)("code",null,"git checkout -- [file]"),(0,l.Uk)("命令可以帮助我们撤销对于"),(0,l.Wm)("code",null,"README.md"),(0,l.Uk)("文件的修改：")],-1),xe=(0,l.Wm)("div",{class:"language-bash ext-sh"},[(0,l.Wm)("pre",{class:"language-bash"},[(0,l.Wm)("code",null,[(0,l.Wm)("span",{class:"token comment"},"# 撤销README.md文件的修改"),(0,l.Uk)("\n$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(" checkout -- README.md\n")])])],-1),ve=(0,l.Wm)("h3",{id:"远程仓库",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#远程仓库","aria-hidden":"true"},"#"),(0,l.Uk)(" 远程仓库")],-1),Ge=(0,l.Wm)("h4",{id:"显示远程仓库",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#显示远程仓库","aria-hidden":"true"},"#"),(0,l.Uk)(" 显示远程仓库")],-1),Ee=(0,l.Wm)("p",null,[(0,l.Uk)("当我们使用"),(0,l.Wm)("code",null,"git clone"),(0,l.Uk)("命令克隆远程仓库后，我们使用"),(0,l.Wm)("code",null,"git remote"),(0,l.Uk)("显示远程仓库的信息：")],-1),Ae=(0,l.Wm)("div",{class:"language-bash ext-sh"},[(0,l.Wm)("pre",{class:"language-bash"},[(0,l.Wm)("code",null,[(0,l.Wm)("span",{class:"token comment"},"# 克隆远程仓库"),(0,l.Uk)("\n$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(" clone xxxxxxx\n"),(0,l.Wm)("span",{class:"token comment"},"# 显示远程仓库"),(0,l.Uk)("\n$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(" remote\norigin\n")])])],-1),$e=(0,l.Wm)("p",null,[(0,l.Uk)("使用"),(0,l.Wm)("code",null,"git clone"),(0,l.Uk)("时，默认情况下，"),(0,l.Wm)("code",null,"Git"),(0,l.Uk)("给克隆服务器取一个叫做"),(0,l.Wm)("code",null,"origin"),(0,l.Uk)("的默认名称。")],-1),De=(0,l.Wm)("p",null,[(0,l.Uk)("我们也可以在使用"),(0,l.Wm)("code",null,"git remote"),(0,l.Uk)("时，添加"),(0,l.Wm)("code",null,"-v"),(0,l.Uk)("参数，来显示每一个远程仓库以及它对应的地址：")],-1),Me=(0,l.Wm)("div",{class:"language-bash ext-sh"},[(0,l.Wm)("pre",{class:"language-bash"},[(0,l.Wm)("code",null,[(0,l.Wm)("span",{class:"token comment"},"# 显示远程仓库信息"),(0,l.Uk)("\n$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(" remote -v\norigin  https://github.com/wangtunan/blog.git "),(0,l.Wm)("span",{class:"token punctuation"},"("),(0,l.Uk)("fetch"),(0,l.Wm)("span",{class:"token punctuation"},")"),(0,l.Uk)("\norigin  https://github.com/wangtunan/blog.git "),(0,l.Wm)("span",{class:"token punctuation"},"("),(0,l.Uk)("push"),(0,l.Wm)("span",{class:"token punctuation"},")"),(0,l.Uk)("\n")])])],-1),Re=(0,l.Wm)("h4",{id:"添加远程仓库",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#添加远程仓库","aria-hidden":"true"},"#"),(0,l.Uk)(" 添加远程仓库")],-1),we=(0,l.Wm)("p",null,[(0,l.Uk)("要添加远程仓库，并给其取一个名字，可以使用"),(0,l.Wm)("code",null,"git remote add [shortname] [url]"),(0,l.Uk)("命令：")],-1),ye=(0,l.Wm)("div",{class:"language-bash ext-sh"},[(0,l.Wm)("pre",{class:"language-bash"},[(0,l.Wm)("code",null,[(0,l.Wm)("span",{class:"token comment"},"# 添加远程仓库"),(0,l.Uk)("\n$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(" remote "),(0,l.Wm)("span",{class:"token function"},"add"),(0,l.Uk)(" origin https://github.com/wangtunan/blog.git\n")])])],-1),He=(0,l.Wm)("h4",{id:"从远程仓库拉取数据",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#从远程仓库拉取数据","aria-hidden":"true"},"#"),(0,l.Uk)(" 从远程仓库拉取数据")],-1),Se=(0,l.Wm)("p",null,[(0,l.Uk)("要想从远程仓库拉取数据，可以使用"),(0,l.Wm)("code",null,"git fetch [remote-name]"),(0,l.Uk)("命令：")],-1),Ce=(0,l.Wm)("div",{class:"language-bash ext-sh"},[(0,l.Wm)("pre",{class:"language-bash"},[(0,l.Wm)("code",null,[(0,l.Wm)("span",{class:"token comment"},"# 从远程仓库拉取数据"),(0,l.Uk)("\n$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(" fetch origin\n")])])],-1),Ne=(0,l.Wm)("p",null,[(0,l.Wm)("strong",null,"注意"),(0,l.Uk)("："),(0,l.Wm)("code",null,"git fetch"),(0,l.Uk)("命令只会把数据拉取到本地仓库，然而它并不会自动将这些数据合并到本地的工作成果中，也不会修改当前工作目录下的任何数据。如果要进行合并，可以使用"),(0,l.Wm)("code",null,"git pull [remote-name]"),(0,l.Uk)("命令：")],-1),Le=(0,l.Wm)("div",{class:"language-bash ext-sh"},[(0,l.Wm)("pre",{class:"language-bash"},[(0,l.Wm)("code",null,[(0,l.Wm)("span",{class:"token comment"},"# 拉取远程仓库代码并合并到本地"),(0,l.Uk)("\n$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(" pull origin\n")])])],-1),Oe=(0,l.Wm)("h4",{id:"将数据推送到远程仓库",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#将数据推送到远程仓库","aria-hidden":"true"},"#"),(0,l.Uk)(" 将数据推送到远程仓库")],-1),Ie=(0,l.Wm)("p",null,[(0,l.Uk)("将数据推送到远程仓库，只需要使用"),(0,l.Wm)("code",null,"git push [remote-name] [branch-name]"),(0,l.Uk)("命令：")],-1),Te=(0,l.Wm)("div",{class:"language-bash ext-sh"},[(0,l.Wm)("pre",{class:"language-bash"},[(0,l.Wm)("code",null,[(0,l.Wm)("span",{class:"token comment"},"# 将数据推送到远程仓库"),(0,l.Uk)("\n$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(" push origin master\n")])])],-1),je=(0,l.Wm)("h4",{id:"检查远程仓库",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#检查远程仓库","aria-hidden":"true"},"#"),(0,l.Uk)(" 检查远程仓库")],-1),Pe=(0,l.Wm)("p",null,[(0,l.Uk)("想要查看远程仓库的更多信息，可以使用"),(0,l.Wm)("code",null,"git remote show [remote-name]"),(0,l.Uk)("命令：")],-1),Ve=(0,l.Wm)("div",{class:"language-bash ext-sh"},[(0,l.Wm)("pre",{class:"language-bash"},[(0,l.Wm)("code",null,[(0,l.Wm)("span",{class:"token comment"},"# 查看远程仓库的更多信息"),(0,l.Uk)("\n$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(" remote show origin\n  Fetch URL: https://github.com/wangtunan/blog.git\n  Push  URL: https://github.com/wangtunan/blog.git\n  HEAD branch: master\n  Remote branches:\n    gh-pages tracked\n    master   tracked\n  Local branch configured "),(0,l.Wm)("span",{class:"token keyword"},"for"),(0,l.Uk)(),(0,l.Wm)("span",{class:"token string"},"'git pull'"),(0,l.Wm)("span",{class:"token builtin class-name"},":"),(0,l.Uk)("\n    master merges with remote master\n  Local ref configured "),(0,l.Wm)("span",{class:"token keyword"},"for"),(0,l.Uk)(),(0,l.Wm)("span",{class:"token string"},"'git push'"),(0,l.Wm)("span",{class:"token builtin class-name"},":"),(0,l.Uk)("\n    master pushes to master "),(0,l.Wm)("span",{class:"token punctuation"},"("),(0,l.Uk)("fast-forwardable"),(0,l.Wm)("span",{class:"token punctuation"},")"),(0,l.Uk)("\n")])])],-1),_e=(0,l.Wm)("h4",{id:"删除和重命名远程仓库",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#删除和重命名远程仓库","aria-hidden":"true"},"#"),(0,l.Uk)(" 删除和重命名远程仓库")],-1),Be=(0,l.Wm)("p",null,[(0,l.Uk)("可以使用"),(0,l.Wm)("code",null,"git remote rename [oldName] [newName]"),(0,l.Uk)("命令来重命名远程仓库：")],-1),Ke=(0,l.Wm)("div",{class:"language-bash ext-sh"},[(0,l.Wm)("pre",{class:"language-bash"},[(0,l.Wm)("code",null,[(0,l.Wm)("span",{class:"token comment"},"# 重命名远程仓库"),(0,l.Uk)("\n$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(" remote "),(0,l.Wm)("span",{class:"token function"},"rename"),(0,l.Uk)(" origin newOrigin\n")])])],-1),ze=(0,l.Wm)("p",null,[(0,l.Uk)("可以使用"),(0,l.Wm)("code",null,"git remote rm [remote-name]"),(0,l.Uk)("命令来删除远程仓库：")],-1),Fe=(0,l.Wm)("div",{class:"language-bash ext-sh"},[(0,l.Wm)("pre",{class:"language-bash"},[(0,l.Wm)("code",null,[(0,l.Wm)("span",{class:"token comment"},"# 删除远程仓库"),(0,l.Uk)("\n$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(" remote "),(0,l.Wm)("span",{class:"token function"},"rm"),(0,l.Uk)(" origin\n")])])],-1),Ye=(0,l.Wm)("h3",{id:"标记",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#标记","aria-hidden":"true"},"#"),(0,l.Uk)(" 标记")],-1),qe=(0,l.Wm)("p",null,[(0,l.Uk)("就像大多数版本控制系统一样，"),(0,l.Wm)("code",null,"Git"),(0,l.Uk)("可以把特定的历史版本标记为重要的版本，其典型应用场景是标出发布版本。")],-1),Je=(0,l.Wm)("h4",{id:"列举标签",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#列举标签","aria-hidden":"true"},"#"),(0,l.Uk)(" 列举标签")],-1),Qe=(0,l.Wm)("p",null,[(0,l.Uk)("使用"),(0,l.Wm)("code",null,"git tag"),(0,l.Uk)("命令来列举所有可用的标签：")],-1),Xe=(0,l.Wm)("div",{class:"language-bash ext-sh"},[(0,l.Wm)("pre",{class:"language-bash"},[(0,l.Wm)("code",null,[(0,l.Wm)("span",{class:"token comment"},"# 列举所有可用的标签"),(0,l.Uk)("\n$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(" tag\nv0.1\nv0.3\nv0.5\nv1.0\nv1.2\nv1.4\n")])])],-1),Ze=(0,l.Wm)("p",null,[(0,l.Uk)("注意："),(0,l.Wm)("code",null,"git tag"),(0,l.Uk)("命令列举的标签会按照字母顺序列出，列举顺序的前后和标签的重要性无关。")],-1),na=(0,l.Wm)("p",null,"如果标签过多，可以使用指定的字符串去匹配：",-1),ea=(0,l.Wm)("div",{class:"language-bash ext-sh"},[(0,l.Wm)("pre",{class:"language-bash"},[(0,l.Wm)("code",null,[(0,l.Wm)("span",{class:"token comment"},"# 使用指定的字符串去匹配标签"),(0,l.Uk)("\n$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(" tag -l "),(0,l.Wm)("span",{class:"token string"},'"v0."'),(0,l.Uk)("\nv0.1\nv0.3\nv0.5\n")])])],-1),aa=(0,l.Wm)("h4",{id:"创建标签",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#创建标签","aria-hidden":"true"},"#"),(0,l.Uk)(" 创建标签")],-1),la=(0,l.Wm)("p",null,[(0,l.Uk)("在"),(0,l.Wm)("code",null,"Git"),(0,l.Uk)("中，标签分为两种类型：")],-1),sa=(0,l.Wm)("ul",null,[(0,l.Wm)("li",null,"轻量标签：轻量标签很像是一个不变的分支，它只是一个指向某次提交的指针。"),(0,l.Wm)("li",null,[(0,l.Uk)("注释标签：注释标签则会作为完整的对象存储在"),(0,l.Wm)("code",null,"Git"),(0,l.Uk)("数据库中，一般推荐创建注释标签，因为它包含的信息比较多。")])],-1),ta=(0,l.Wm)("div",{class:"language-bash ext-sh"},[(0,l.Wm)("pre",{class:"language-bash"},[(0,l.Wm)("code",null,[(0,l.Wm)("span",{class:"token comment"},"# 创建轻量标签"),(0,l.Uk)("\n$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(" tag v2.0.0\n\n"),(0,l.Wm)("span",{class:"token comment"},"# 创建注释标签，携带-a参数"),(0,l.Uk)("\n$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(" tag -a  v2.1.0 -m "),(0,l.Wm)("span",{class:"token string"},"'注释标签的提交信息'"),(0,l.Uk)("\n")])])],-1),ma=(0,l.Wm)("p",null,[(0,l.Uk)("添加完以上标签后，可以使用"),(0,l.Wm)("code",null,"git show [tag-name]"),(0,l.Uk)("命令来显示标签对应的信息：")],-1),ia=(0,l.Wm)("div",{class:"language-bash ext-sh"},[(0,l.Wm)("pre",{class:"language-bash"},[(0,l.Wm)("code",null,[(0,l.Wm)("span",{class:"token comment"},"# 显示注释标签的信息"),(0,l.Uk)("\n$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(" show v2.1.0\n")])])],-1),ca=(0,l.Wm)("h4",{id:"追加标签",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#追加标签","aria-hidden":"true"},"#"),(0,l.Uk)(" 追加标签")],-1),oa=(0,l.Wm)("p",null,[(0,l.Uk)("我们已经知道可以使用"),(0,l.Wm)("code",null,"git log"),(0,l.Uk)("查看提交历史，如果我们想要给以前某个的提交历史追加标签，可以像下面这样做：")],-1),ua=(0,l.Wm)("div",{class:"language-bash ext-sh"},[(0,l.Wm)("pre",{class:"language-bash"},[(0,l.Wm)("code",null,[(0,l.Wm)("span",{class:"token comment"},"# 查看提交历史"),(0,l.Uk)("\n$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(" log --pretty"),(0,l.Wm)("span",{class:"token operator"},"="),(0,l.Uk)("oneline\n6444834e8debf9e407c26ee29ae5fb42b9b99511 "),(0,l.Wm)("span",{class:"token punctuation"},"("),(0,l.Uk)("HEAD -"),(0,l.Wm)("span",{class:"token operator"},">"),(0,l.Uk)(" master"),(0,l.Wm)("span",{class:"token punctuation"},")"),(0,l.Uk)(" update README.md\n7aca89161b709f1f16f637703020815c0afb14ea "),(0,l.Wm)("span",{class:"token function"},"add"),(0,l.Uk)("\n\n"),(0,l.Wm)("span",{class:"token comment"},"# 为7aca89161b709f1f16f637703020815c0afb14ea这次提交追加标签"),(0,l.Uk)("\n$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(" tag -a v1.0 7aca8916\n")])])],-1),da=(0,l.Wm)("h4",{id:"共享标签",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#共享标签","aria-hidden":"true"},"#"),(0,l.Uk)(" 共享标签")],-1),Wa=(0,l.Wm)("p",null,[(0,l.Uk)("默认情况下，"),(0,l.Wm)("code",null,"git push"),(0,l.Uk)("命令不会把标签传输到远程服务器，在创建标签后，必须明确的将标签提交到共享服务器上：")],-1),ka=(0,l.Wm)("div",{class:"language-bash ext-sh"},[(0,l.Wm)("pre",{class:"language-bash"},[(0,l.Wm)("code",null,[(0,l.Wm)("span",{class:"token comment"},"# 推送本地v1.0标签"),(0,l.Uk)("\n$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(" push origin v1.0\n\n"),(0,l.Wm)("span",{class:"token comment"},"# 推送本地全部标签"),(0,l.Uk)("\n$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(" push origin --tags\n")])])],-1),ra=(0,l.Wm)("h3",{id:"git别名",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#git别名","aria-hidden":"true"},"#"),(0,l.Uk)(" Git别名")],-1),ha=(0,l.Wm)("p",null,[(0,l.Uk)("在掌握了以上基本的"),(0,l.Wm)("code",null,"Git"),(0,l.Uk)("操作后，如果你觉得完整的键入某些"),(0,l.Wm)("code",null,"Git"),(0,l.Uk)("命令太繁琐的话，可以为某些命令进行配置别名：")],-1),Ua=(0,l.Wm)("div",{class:"language-bash ext-sh"},[(0,l.Wm)("pre",{class:"language-bash"},[(0,l.Wm)("code",null,[(0,l.Wm)("span",{class:"token comment"},"# 配置别名"),(0,l.Uk)("\n$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(" config --global alias.ck checkout\n$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(" config --global alias.br branch\n\n"),(0,l.Wm)("span",{class:"token comment"},"# 使用别名：切换到develop分支"),(0,l.Uk)("\n$ "),(0,l.Wm)("span",{class:"token function"},"git"),(0,l.Uk)(" ck develop\n")])])],-1),ga=(0,l.Wm)("h2",{id:"git分支",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#git分支","aria-hidden":"true"},"#"),(0,l.Uk)(" Git分支")],-1),pa=(0,l.Wm)("h3",{id:"分支机制",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#分支机制","aria-hidden":"true"},"#"),(0,l.Uk)(" 分支机制")],-1),ba=(0,l.Wm)("h3",{id:"基本的分支与合并操作",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#基本的分支与合并操作","aria-hidden":"true"},"#"),(0,l.Uk)(" 基本的分支与合并操作")],-1),fa=(0,l.Wm)("h3",{id:"分支管理",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#分支管理","aria-hidden":"true"},"#"),(0,l.Uk)(" 分支管理")],-1),xa=(0,l.Wm)("h3",{id:"与分支有关的工作流",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#与分支有关的工作流","aria-hidden":"true"},"#"),(0,l.Uk)(" 与分支有关的工作流")],-1),va=(0,l.Wm)("h3",{id:"远程分支",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#远程分支","aria-hidden":"true"},"#"),(0,l.Uk)(" 远程分支")],-1),Ga=(0,l.Wm)("h3",{id:"变基",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#变基","aria-hidden":"true"},"#"),(0,l.Uk)(" 变基")],-1),Ea=(0,l.Wm)("h2",{id:"服务器上的git",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#服务器上的git","aria-hidden":"true"},"#"),(0,l.Uk)(" 服务器上的Git")],-1),Aa=(0,l.Wm)("h3",{id:"协议",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#协议","aria-hidden":"true"},"#"),(0,l.Uk)(" 协议")],-1),$a=(0,l.Wm)("h3",{id:"在服务器上搭建git",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#在服务器上搭建git","aria-hidden":"true"},"#"),(0,l.Uk)(" 在服务器上搭建Git")],-1),Da=(0,l.Wm)("h3",{id:"生成ssh公钥",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#生成ssh公钥","aria-hidden":"true"},"#"),(0,l.Uk)(" 生成SSH公钥")],-1),Ma=(0,l.Wm)("h3",{id:"配置服务器",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#配置服务器","aria-hidden":"true"},"#"),(0,l.Uk)(" 配置服务器")],-1),Ra=(0,l.Wm)("h3",{id:"git守护进程",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#git守护进程","aria-hidden":"true"},"#"),(0,l.Uk)(" Git守护进程")],-1),wa=(0,l.Wm)("h3",{id:"smart-http",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#smart-http","aria-hidden":"true"},"#"),(0,l.Uk)(" Smart HTTP")],-1),ya=(0,l.Wm)("h3",{id:"gitweb",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#gitweb","aria-hidden":"true"},"#"),(0,l.Uk)(" GitWeb")],-1),Ha=(0,l.Wm)("h3",{id:"gitlab",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#gitlab","aria-hidden":"true"},"#"),(0,l.Uk)(" GitLab")],-1),Sa=(0,l.Wm)("h2",{id:"分布式git",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#分布式git","aria-hidden":"true"},"#"),(0,l.Uk)(" 分布式Git")],-1),Ca=(0,l.Wm)("h3",{id:"分布式工作流程",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#分布式工作流程","aria-hidden":"true"},"#"),(0,l.Uk)(" 分布式工作流程")],-1),Na=(0,l.Wm)("h3",{id:"对项目做出贡献",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#对项目做出贡献","aria-hidden":"true"},"#"),(0,l.Uk)(" 对项目做出贡献")],-1),La=(0,l.Wm)("h3",{id:"维护项目",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#维护项目","aria-hidden":"true"},"#"),(0,l.Uk)(" 维护项目")],-1),Oa=(0,l.Wm)("h2",{id:"git工具",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#git工具","aria-hidden":"true"},"#"),(0,l.Uk)(" Git工具")],-1),Ia=(0,l.Wm)("h3",{id:"选择修订版本",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#选择修订版本","aria-hidden":"true"},"#"),(0,l.Uk)(" 选择修订版本")],-1),Ta=(0,l.Wm)("h3",{id:"交互式暂存",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#交互式暂存","aria-hidden":"true"},"#"),(0,l.Uk)(" 交互式暂存")],-1),ja=(0,l.Wm)("h3",{id:"存储与清理",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#存储与清理","aria-hidden":"true"},"#"),(0,l.Uk)(" 存储与清理")],-1),Pa=(0,l.Wm)("h3",{id:"签署工作",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#签署工作","aria-hidden":"true"},"#"),(0,l.Uk)(" 签署工作")],-1),Va=(0,l.Wm)("h3",{id:"搜索",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#搜索","aria-hidden":"true"},"#"),(0,l.Uk)(" 搜索")],-1),_a=(0,l.Wm)("h3",{id:"重写历史",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#重写历史","aria-hidden":"true"},"#"),(0,l.Uk)(" 重写历史")],-1),Ba=(0,l.Wm)("h3",{id:"重置揭秘",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#重置揭秘","aria-hidden":"true"},"#"),(0,l.Uk)(" 重置揭秘")],-1),Ka=(0,l.Wm)("h3",{id:"高级合并",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#高级合并","aria-hidden":"true"},"#"),(0,l.Uk)(" 高级合并")],-1),za=(0,l.Wm)("h3",{id:"refere",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#refere","aria-hidden":"true"},"#"),(0,l.Uk)(" Refere")],-1),Fa=(0,l.Wm)("h3",{id:"使用git调试",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#使用git调试","aria-hidden":"true"},"#"),(0,l.Uk)(" 使用Git调试")],-1),Ya=(0,l.Wm)("h3",{id:"子模块",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#子模块","aria-hidden":"true"},"#"),(0,l.Uk)(" 子模块")],-1),qa=(0,l.Wm)("h3",{id:"打包",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#打包","aria-hidden":"true"},"#"),(0,l.Uk)(" 打包")],-1),Ja=(0,l.Wm)("h3",{id:"替换",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#替换","aria-hidden":"true"},"#"),(0,l.Uk)(" 替换")],-1),Qa=(0,l.Wm)("h3",{id:"凭证存储",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#凭证存储","aria-hidden":"true"},"#"),(0,l.Uk)(" 凭证存储")],-1),Xa=(0,l.Wm)("h2",{id:"自定义git",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#自定义git","aria-hidden":"true"},"#"),(0,l.Uk)(" 自定义Git")],-1),Za=(0,l.Wm)("h3",{id:"配置git",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#配置git","aria-hidden":"true"},"#"),(0,l.Uk)(" 配置Git")],-1),nl=(0,l.Wm)("h3",{id:"git属性",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#git属性","aria-hidden":"true"},"#"),(0,l.Uk)(" Git属性")],-1),el=(0,l.Wm)("h3",{id:"git钩子",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#git钩子","aria-hidden":"true"},"#"),(0,l.Uk)(" Git钩子")],-1),al=(0,l.Wm)("h3",{id:"使用强制策略",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#使用强制策略","aria-hidden":"true"},"#"),(0,l.Uk)(" 使用强制策略")],-1),ll=(0,l.Wm)("h2",{id:"git内部原理",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#git内部原理","aria-hidden":"true"},"#"),(0,l.Uk)(" Git内部原理")],-1),sl=(0,l.Wm)("h3",{id:"底层命令和高层命令",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#底层命令和高层命令","aria-hidden":"true"},"#"),(0,l.Uk)(" 底层命令和高层命令")],-1),tl=(0,l.Wm)("h3",{id:"git对象",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#git对象","aria-hidden":"true"},"#"),(0,l.Uk)(" Git对象")],-1),ml=(0,l.Wm)("h3",{id:"git引用",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#git引用","aria-hidden":"true"},"#"),(0,l.Uk)(" Git引用")],-1),il=(0,l.Wm)("h3",{id:"包文件",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#包文件","aria-hidden":"true"},"#"),(0,l.Uk)(" 包文件")],-1),cl=(0,l.Wm)("h3",{id:"引用规格",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#引用规格","aria-hidden":"true"},"#"),(0,l.Uk)(" 引用规格")],-1),ol=(0,l.Wm)("h3",{id:"传输协议",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#传输协议","aria-hidden":"true"},"#"),(0,l.Uk)(" 传输协议")],-1),ul=(0,l.Wm)("h3",{id:"维护与数据恢复",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#维护与数据恢复","aria-hidden":"true"},"#"),(0,l.Uk)(" 维护与数据恢复")],-1),dl=(0,l.Wm)("h3",{id:"环境变量",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#环境变量","aria-hidden":"true"},"#"),(0,l.Uk)(" 环境变量")],-1),Wl={render:function(n,e){return(0,l.wg)(),(0,l.j4)(l.HY,null,[o,u,d,W,k,r,h,U,g,p,b,f,x,v,G,E,A,$,D,M,R,w,y,H,S,C,N,L,O,I,T,j,P,V,_,B,K,z,F,Y,q,J,Q,X,Z,nn,en,an,ln,sn,tn,mn,cn,on,un,dn,Wn,kn,rn,hn,Un,gn,pn,bn,fn,xn,vn,Gn,En,An,$n,Dn,Mn,Rn,wn,yn,Hn,Sn,Cn,Nn,Ln,On,In,Tn,jn,Pn,Vn,_n,Bn,Kn,zn,Fn,Yn,qn,Jn,Qn,Xn,Zn,ne,ee,ae,le,se,te,me,ie,ce,oe,ue,de,We,ke,re,he,Ue,ge,pe,be,fe,xe,ve,Ge,Ee,Ae,$e,De,Me,Re,we,ye,He,Se,Ce,Ne,Le,Oe,Ie,Te,je,Pe,Ve,_e,Be,Ke,ze,Fe,Ye,qe,Je,Qe,Xe,Ze,na,ea,aa,la,sa,ta,ma,ia,ca,oa,ua,da,Wa,ka,ra,ha,Ua,ga,pa,ba,fa,xa,va,Ga,Ea,Aa,$a,Da,Ma,Ra,wa,ya,Ha,Sa,Ca,Na,La,Oa,Ia,Ta,ja,Pa,Va,_a,Ba,Ka,za,Fa,Ya,qa,Ja,Qa,Xa,Za,nl,el,al,ll,sl,tl,ml,il,cl,ol,ul,dl],64)}}}}]);