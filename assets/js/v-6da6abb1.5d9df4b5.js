(self.webpackChunkgordan404wiki=self.webpackChunkgordan404wiki||[]).push([[5262],{3970:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>t});const t={key:"v-6da6abb1",path:"/typescript/",title:"TypeScript",lang:"zh-CN",frontmatter:{sidebar:"auto"},excerpt:"",headers:[{level:2,title:"安装",slug:"安装",children:[{level:3,title:"Node.js",slug:"node-js",children:[]},{level:3,title:"TypeScript",slug:"typescript-1",children:[]}]},{level:2,title:"起步",slug:"起步",children:[{level:3,title:"目录",slug:"目录",children:[]},{level:3,title:"编译",slug:"编译",children:[]}]},{level:2,title:"基础",slug:"基础",children:[{level:3,title:"原始数据类型",slug:"原始数据类型",children:[]},{level:3,title:"任意值",slug:"任意值",children:[]},{level:3,title:"类型注解和类型推断",slug:"类型注解和类型推断",children:[]},{level:3,title:"联合类型",slug:"联合类型",children:[]},{level:3,title:"接口",slug:"接口",children:[]},{level:3,title:"函数的类型",slug:"函数的类型",children:[]},{level:3,title:"类型断言",slug:"类型断言",children:[]},{level:3,title:"类型别名",slug:"类型别名",children:[]},{level:3,title:"字符串字面量类型",slug:"字符串字面量类型",children:[]}]},{level:2,title:"进阶",slug:"进阶",children:[{level:3,title:"数组和元组",slug:"数组和元组",children:[]},{level:3,title:"枚举",slug:"枚举",children:[]},{level:3,title:"类",slug:"类",children:[]},{level:3,title:"类和接口",slug:"类和接口",children:[]},{level:3,title:"泛型",slug:"泛型",children:[]},{level:3,title:"声明合并",slug:"声明合并",children:[]},{level:3,title:"命名空间",slug:"命名空间",children:[]}]}],filePathRelative:"typescript/README.md",git:{updatedTime:1626972344e3,contributors:[{name:"lishuaixingNewBee",email:"vae.china@foxmail.com",commits:1}]}}},2543:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>Tt});var t=a(4057);const o=a.p+"assets/img/1.e87dd4a5.png",e=a.p+"assets/img/2.2b688d9d.png",c=(0,t.Wm)("h1",{id:"typescript",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#typescript","aria-hidden":"true"},"#"),(0,t.Uk)(" TypeScript")],-1),p=(0,t.Wm)("p",null,[(0,t.Wm)("code",null,"TypeScript"),(0,t.Uk)("是"),(0,t.Wm)("code",null,"JavaScript"),(0,t.Uk)("的一个超集，主要提供了"),(0,t.Wm)("strong",null,"类型系统"),(0,t.Uk)("和对"),(0,t.Wm)("strong",null,"ES6"),(0,t.Uk)("的支持，它与2012年10月正式发布第一个版本。")],-1),k=(0,t.Wm)("p",null,"优势：",-1),l=(0,t.Wm)("ul",null,[(0,t.Wm)("li",null,"能在开发过程中更快的发现潜在问题。"),(0,t.Wm)("li",null,"对编辑器更友好的代码提示功能。"),(0,t.Wm)("li",null,"代码语义更清晰易懂。")],-1),m=(0,t.Wm)("h2",{id:"安装",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#安装","aria-hidden":"true"},"#"),(0,t.Uk)(" 安装")],-1),u=(0,t.Wm)("h3",{id:"node-js",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#node-js","aria-hidden":"true"},"#"),(0,t.Uk)(" Node.js")],-1),W=(0,t.Uk)("你首先需要在"),i={href:"https://nodejs.org/zh-cn/",target:"_blank",rel:"noopener noreferrer"},r=(0,t.Uk)("Node.js官网"),U=(0,t.Uk)("按照你电脑的操作系统下载对应的"),d=(0,t.Wm)("code",null,"Node",-1),g=(0,t.Uk)("版本进行安装。"),b=(0,t.Wm)("h3",{id:"typescript-1",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#typescript-1","aria-hidden":"true"},"#"),(0,t.Uk)(" TypeScript")],-1),y=(0,t.Wm)("p",null,[(0,t.Uk)("你需要使用如下命令全局安装"),(0,t.Wm)("code",null,"TypeScript"),(0,t.Uk)(":")],-1),h=(0,t.Wm)("div",{class:"language-bash ext-sh"},[(0,t.Wm)("pre",{class:"language-bash"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token comment"},"# 安装命令"),(0,t.Uk)("\n$ "),(0,t.Wm)("span",{class:"token function"},"npm"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token function"},"install"),(0,t.Uk)(" -g typescript\n\n"),(0,t.Wm)("span",{class:"token comment"},"# 安装完毕后，查看版本号"),(0,t.Uk)("\n$ tsc -v\n")])])],-1),f=(0,t.Wm)("div",{class:"custom-container warning"},[(0,t.Wm)("p",{class:"custom-container-title"},"WARNING"),(0,t.Wm)("p",null,"如果你对具体版本有严格的要求，你同样可以按照指定版本号进行安装。")],-1),w=(0,t.Wm)("p",null,"如下：",-1),v=(0,t.Wm)("div",{class:"language-bash ext-sh"},[(0,t.Wm)("pre",{class:"language-bash"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token comment"},"# 按指定版本号进行安装"),(0,t.Uk)("\n$ "),(0,t.Wm)("span",{class:"token function"},"npm"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token function"},"install"),(0,t.Uk)(" -g typescript@3.6.4\n\n"),(0,t.Wm)("span",{class:"token comment"},"# 安装完毕后，查看版本号"),(0,t.Uk)("\n$ tsc -v\n")])])],-1),x=(0,t.Wm)("h2",{id:"起步",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#起步","aria-hidden":"true"},"#"),(0,t.Uk)(" 起步")],-1),A=(0,t.Wm)("h3",{id:"目录",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#目录","aria-hidden":"true"},"#"),(0,t.Uk)(" 目录")],-1),T=(0,t.Wm)("p",null,[(0,t.Uk)("在正式开始学习"),(0,t.Wm)("code",null,"TypeScript"),(0,t.Uk)("之前，我们需要创建一个叫做"),(0,t.Wm)("code",null,"TypeScript"),(0,t.Uk)("的文件夹：")],-1),P=(0,t.Wm)("div",{class:"language-bash ext-sh"},[(0,t.Wm)("pre",{class:"language-bash"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token comment"},"# 创建文件夹"),(0,t.Uk)("\n$ "),(0,t.Wm)("span",{class:"token function"},"mkdir"),(0,t.Uk)(" TypeScript\n")])])],-1),j=(0,t.Wm)("p",null,[(0,t.Uk)("随后在"),(0,t.Wm)("code",null,"TypeScript"),(0,t.Uk)("文件夹中创建"),(0,t.Wm)("code",null,"demo.ts"),(0,t.Uk)("文件，其代码如下：")],-1),S=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token string"},"'Hello,world'"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n")])])],-1),H=(0,t.Wm)("h3",{id:"编译",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#编译","aria-hidden":"true"},"#"),(0,t.Uk)(" 编译")],-1),N=(0,t.Wm)("p",null,[(0,t.Wm)("code",null,".ts"),(0,t.Uk)("中的代码一般而言是不能直接运行在浏览器的，需要我们把"),(0,t.Wm)("code",null,"typescript"),(0,t.Uk)("代码进行编译成普通的"),(0,t.Wm)("code",null,"javascript"),(0,t.Uk)("代码以后才能运行在浏览器，我们可以使用如下命令来进行编译：")],-1),$=(0,t.Wm)("div",{class:"language-bash ext-sh"},[(0,t.Wm)("pre",{class:"language-bash"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token comment"},"# 编译命令"),(0,t.Uk)("\n$ tsc demo.ts\n")])])],-1),C=(0,t.Wm)("p",null,[(0,t.Uk)("当编译完毕后，我们可以在文件夹中看到多出来了一个叫做"),(0,t.Wm)("code",null,"demo.js"),(0,t.Uk)("文件：")],-1),I=(0,t.Wm)("div",{class:"language-bash ext-sh"},[(0,t.Wm)("pre",{class:"language-bash"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token operator"},"|"),(0,t.Uk)("-- TypeScript\n"),(0,t.Wm)("span",{class:"token operator"},"|"),(0,t.Uk)("   "),(0,t.Wm)("span",{class:"token operator"},"|"),(0,t.Uk)("-- demo.js\n"),(0,t.Wm)("span",{class:"token operator"},"|"),(0,t.Uk)("   "),(0,t.Wm)("span",{class:"token operator"},"|"),(0,t.Uk)("-- demo.ts\n")])])],-1),E=(0,t.Wm)("p",null,[(0,t.Uk)("随后我们需要使用如下命令来执行我们编译后的"),(0,t.Wm)("code",null,"javascript"),(0,t.Uk)("代码：")],-1),V=(0,t.Wm)("div",{class:"language-bash ext-sh"},[(0,t.Wm)("pre",{class:"language-bash"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token comment"},"# 执行"),(0,t.Uk)("\n$ node demo.js\n")])])],-1),F=(0,t.Wm)("p",null,"当执行完毕以上命令后，你可以在终端上看到输出一下内容：",-1),_=(0,t.Wm)("div",{class:"language-javascript ext-js"},[(0,t.Wm)("pre",{class:"language-javascript"},[(0,t.Wm)("code",null,[(0,t.Uk)("Hello"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("world\n")])])],-1),J=(0,t.Wm)("p",null,[(0,t.Wm)("strong",null,"简化过程"),(0,t.Uk)("：我们发现，如果要运行一个"),(0,t.Wm)("code",null,".ts"),(0,t.Uk)("文件，我们首先需要使用"),(0,t.Wm)("code",null,"tsc"),(0,t.Uk)("命令去编译它，随后再使用"),(0,t.Wm)("code",null,"node"),(0,t.Uk)("命令去执行它，那么有没有一种工具能够一个步骤就帮我们做完以上的事情呢？我们需要全局安装一个叫做"),(0,t.Wm)("code",null,"ts-node"),(0,t.Uk)("的工具：")],-1),R=(0,t.Wm)("div",{class:"language-bash ext-sh"},[(0,t.Wm)("pre",{class:"language-bash"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token comment"},"# 安装ts-node"),(0,t.Uk)("\n$ "),(0,t.Wm)("span",{class:"token function"},"npm"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token function"},"install"),(0,t.Uk)(" ts-node -g\n\n"),(0,t.Wm)("span",{class:"token comment"},"# 安装完毕，查看版本号"),(0,t.Uk)("\n$ ts-node -v\n")])])],-1),L=(0,t.Wm)("p",null,[(0,t.Uk)("在"),(0,t.Wm)("code",null,"ts-node"),(0,t.Uk)("安装完毕后，我们先删除"),(0,t.Wm)("code",null,"demo.js"),(0,t.Uk)("文件，随后使用"),(0,t.Wm)("code",null,"ts-node"),(0,t.Uk)("命令来编译并执行我们的代码：")],-1),M=(0,t.Wm)("div",{class:"custom-container warning"},[(0,t.Wm)("p",{class:"custom-container-title"},"WARNING"),(0,t.Wm)("p",null,[(0,t.Wm)("code",null,"ts-node"),(0,t.Uk)("包有升级更新，如果运行"),(0,t.Wm)("code",null,"ts-node"),(0,t.Uk)("命令报错，请按照"),(0,t.Wm)("code",null,"ts-node"),(0,t.Uk)("最新文档进行处理。")])],-1),z=(0,t.Wm)("div",{class:"language-bash ext-sh"},[(0,t.Wm)("pre",{class:"language-bash"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token comment"},"# 删除demo.js文件"),(0,t.Uk)("\n$ "),(0,t.Wm)("span",{class:"token function"},"rm"),(0,t.Uk)(" demo.js\n\n"),(0,t.Wm)("span",{class:"token comment"},"# 编译并执行"),(0,t.Uk)("\n$ ts-node demo.ts\n")])])],-1),G=(0,t.Wm)("p",null,"以上命令执行完毕后，你将会看到与上面实例相同的输出结果。",-1),B=(0,t.Wm)("h2",{id:"基础",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#基础","aria-hidden":"true"},"#"),(0,t.Uk)(" 基础")],-1),O=(0,t.Wm)("h3",{id:"原始数据类型",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#原始数据类型","aria-hidden":"true"},"#"),(0,t.Uk)(" 原始数据类型")],-1),D=(0,t.Wm)("p",null,[(0,t.Uk)("我们知道"),(0,t.Wm)("code",null,"JavaScript"),(0,t.Uk)("分为"),(0,t.Wm)("strong",null,"原始数据类型"),(0,t.Uk)("和"),(0,t.Wm)("strong",null,"对象类型"),(0,t.Uk)("，原始数据类型包括："),(0,t.Wm)("code",null,"number"),(0,t.Uk)("、"),(0,t.Wm)("code",null,"string"),(0,t.Uk)("、"),(0,t.Wm)("code",null,"boolean"),(0,t.Uk)("、"),(0,t.Wm)("code",null,"null"),(0,t.Uk)("、"),(0,t.Wm)("code",null,"undefined"),(0,t.Uk)("和"),(0,t.Wm)("code",null,"symbol"),(0,t.Uk)("。 在"),(0,t.Wm)("code",null,"TypeScript"),(0,t.Uk)("中，我们可以如下定义：")],-1),q=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" tsNum"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"123"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" tsStr"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'AAA'"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" tsFlag"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"boolean"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token boolean"},"true"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" tsNull"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"null"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"null"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" tsUndefined"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"undefined"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"undefined"),(0,t.Uk)("\n")])])],-1),Y=(0,t.Wm)("h4",{id:"void空值",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#void空值","aria-hidden":"true"},"#"),(0,t.Uk)(" void空值")],-1),K=(0,t.Wm)("p",null,[(0,t.Uk)("我们知道在"),(0,t.Wm)("code",null,"JavaScript"),(0,t.Uk)("中，是没有空值("),(0,t.Wm)("code",null,"void"),(0,t.Uk)(")的概念的，但在"),(0,t.Wm)("code",null,"TypeScript"),(0,t.Uk)("中，可以使用"),(0,t.Wm)("code",null,"void"),(0,t.Uk)("来表示一个没有返回值的函数：")],-1),Q=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token keyword"},"function"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token function"},"sayHello"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"void"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token string"},"'Hello, world'"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n")])])],-1),X=(0,t.Wm)("p",null,[(0,t.Uk)("我们也可以定义一个"),(0,t.Wm)("code",null,"void"),(0,t.Uk)("类型的变量，不过这样的变量并没有什么意义，因为我们只能给这种变量赋值为"),(0,t.Wm)("code",null,"null"),(0,t.Uk)("或"),(0,t.Wm)("code",null,"undefined"),(0,t.Uk)("。")],-1),Z=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" voidValue1"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"void"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"null"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" voidValue2"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"void"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"undefined"),(0,t.Uk)("\n")])])],-1),nn=(0,t.Wm)("h4",{id:"void、null和undefined",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#void、null和undefined","aria-hidden":"true"},"#"),(0,t.Uk)(" void、null和undefined")],-1),sn=(0,t.Wm)("p",null,[(0,t.Wm)("code",null,"void"),(0,t.Uk)("和"),(0,t.Wm)("code",null,"null"),(0,t.Uk)("与"),(0,t.Wm)("code",null,"undefined"),(0,t.Uk)("是有一定区别的，在"),(0,t.Wm)("code",null,"TypeScript"),(0,t.Uk)("中，"),(0,t.Wm)("code",null,"null"),(0,t.Uk)("和"),(0,t.Wm)("code",null,"undefined"),(0,t.Uk)("是所有类型的子类型，也就是说可以把"),(0,t.Wm)("code",null,"undefined"),(0,t.Uk)("或"),(0,t.Wm)("code",null,"null"),(0,t.Uk)("赋值给"),(0,t.Wm)("code",null,"number"),(0,t.Uk)("等类型的变量:")],-1),an=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" tsNumber1"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"undefined"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" tsNumber2"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"null"),(0,t.Uk)("\n")])])],-1),tn=(0,t.Wm)("p",null,[(0,t.Uk)("而对于"),(0,t.Wm)("code",null,"void"),(0,t.Uk)("而言，它只能被赋值为"),(0,t.Wm)("code",null,"null"),(0,t.Uk)("或者"),(0,t.Wm)("code",null,"undefined"),(0,t.Uk)("：")],-1),on=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token comment"},"// 这两行代码会编译报错"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" voidValue1"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"void"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"123"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" voidValue2"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"void"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'123'"),(0,t.Uk)("\n")])])],-1),en=(0,t.Wm)("h3",{id:"任意值",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#任意值","aria-hidden":"true"},"#"),(0,t.Uk)(" 任意值")],-1),cn=(0,t.Wm)("p",null,[(0,t.Uk)("任意值"),(0,t.Wm)("code",null,"Any"),(0,t.Uk)("用来表示可以接受任何类型的值。")],-1),pn=(0,t.Wm)("p",null,"在有以上内容的基础上，我们知道以下代码会报错：",-1),kn=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token comment"},"// 变量被定义为number，那么它只能接受number类型的值，不能改变其类型，会编译报错"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" tsNumber"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"123"),(0,t.Uk)("\ntsNumber "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'123'"),(0,t.Uk)("\n")])])],-1),ln=(0,t.Wm)("p",null,[(0,t.Uk)("但是如果一个变量被定义为"),(0,t.Wm)("code",null,"any"),(0,t.Uk)("，那么代表它可以接受任何类型的值：")],-1),mn=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token comment"},"// 以下代码是正确的，编译成功"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" tsAny"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"any"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"123"),(0,t.Uk)("\ntsAny "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'123'"),(0,t.Uk)("\n")])])],-1),un=(0,t.Wm)("p",null,[(0,t.Uk)("现在我们来思考一个问题，如果我们定义了一个变量，没有指定其类型，也没有初始化，那么它默认为"),(0,t.Wm)("code",null,"any"),(0,t.Uk)("类型：")],-1),Wn=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token comment"},"// 以下代码是正确的，编译成功"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" tsValue\ntsValue "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"123"),(0,t.Uk)("\ntsValue "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'123'"),(0,t.Uk)("\n")])])],-1),rn=(0,t.Wm)("h3",{id:"类型注解和类型推断",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#类型注解和类型推断","aria-hidden":"true"},"#"),(0,t.Uk)(" 类型注解和类型推断")],-1),Un=(0,t.Wm)("p",null,[(0,t.Uk)("在以上的所有实例中，我们都为每一个变量提供了一个确定的类型，这种做法就叫做"),(0,t.Wm)("strong",null,"类型注解"),(0,t.Uk)("。而有些时候，当我们没有为其提供一个确定的类型，但提供了一个确定的值，那么"),(0,t.Wm)("code",null,"TypeScript"),(0,t.Uk)("会根据我们给定的值的类型自动推断出这个变量的类型，这就叫"),(0,t.Wm)("strong",null,"类型推断"),(0,t.Uk)("。")],-1),dn=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token comment"},"// typescript会自动为num1变量推断为number"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" num1 "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"123"),(0,t.Uk)("\n\n"),(0,t.Wm)("span",{class:"token comment"},"// typescript会自动为num4变量推断为number"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" num2 "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"456"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" num3 "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"789"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" num4 "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(" num2 "),(0,t.Wm)("span",{class:"token operator"},"+"),(0,t.Uk)(" num3\n")])])],-1),gn=(0,t.Wm)("p",null,[(0,t.Uk)("根据以上的案例，当我们给一个变量一个明确值的情况下，我们可以省略为其定义类型。但如果在函数参数中，则我们必须为其指定一个类型，如果不指定则默认为"),(0,t.Wm)("code",null,"any"),(0,t.Uk)(":")],-1),bn=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token keyword"},"function"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token function"},"add"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("num1"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(" num2"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token keyword"},"return"),(0,t.Uk)(" num1 "),(0,t.Wm)("span",{class:"token operator"},"+"),(0,t.Uk)(" num2\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token comment"},"// 或者省略函数的返回值类型，因为typescript会基于num1和num1全部为number类型，从而推断出函数返回值为number类型"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"function"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token function"},"add"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("num1"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(" num2"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token keyword"},"return"),(0,t.Uk)(" num1 "),(0,t.Wm)("span",{class:"token operator"},"+"),(0,t.Uk)(" num2\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n")])])],-1),yn=(0,t.Wm)("p",null,[(0,t.Wm)("strong",null,"建议"),(0,t.Uk)("：始终为函数返回值提供一个确定的类型是有一个比较推荐的好习惯。")],-1),hn=(0,t.Wm)("h3",{id:"联合类型",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#联合类型","aria-hidden":"true"},"#"),(0,t.Uk)(" 联合类型")],-1),fn=(0,t.Wm)("p",null,[(0,t.Wm)("strong",null,"联合类型"),(0,t.Uk)("：表示取值可以为多种类型中的一种，多种类型使用"),(0,t.Wm)("code",null,"|"),(0,t.Uk)("分隔开。")],-1),wn=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" value"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"|"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Uk)("\nvalue "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"123"),(0,t.Uk)("\nvalue "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'123'"),(0,t.Uk)("\n")])])],-1),vn=(0,t.Wm)("div",{class:"custom-container warning"},[(0,t.Wm)("p",{class:"custom-container-title"},"WARNING"),(0,t.Wm)("p",null,[(0,t.Uk)("当我们使用联合类型的时候，因为"),(0,t.Wm)("code",null,"TypeScript"),(0,t.Uk)("不确定到底是哪一个类型，所以我们只能访问此联合类型的所有类型公用的属性和方法。")])],-1),xn=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token comment"},"// 会编译报错"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"function"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token function"},"getLength"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("value"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"|"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token keyword"},"return"),(0,t.Uk)(" value"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("length\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n"),(0,t.Wm)("span",{class:"token comment"},"// 以下代码不会编译报错"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"function"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token function"},"valueToStr"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("value"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"|"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token keyword"},"return"),(0,t.Uk)(" value"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"toString"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n")])])],-1),An=(0,t.Wm)("div",{class:"custom-container warning"},[(0,t.Wm)("p",{class:"custom-container-title"},"WARNING"),(0,t.Wm)("p",null,[(0,t.Uk)("另外一个值得注意的地方就是，当联合类型被赋值后，"),(0,t.Wm)("code",null,"TypeScript"),(0,t.Uk)("会根据类型推断来确定变量的类型，一旦确定后，则此变量只能使用这种类型的属性和方法。")])],-1),Tn=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" tsValue"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"|"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Uk)("\ntsValue "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'123'"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("tsValue"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("length"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token comment"},"// 编译正确"),(0,t.Uk)("\ntsValue "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"123"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("tsValue"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("length"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token comment"},"// 编译报错"),(0,t.Uk)("\n")])])],-1),Pn=(0,t.Wm)("h3",{id:"接口",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#接口","aria-hidden":"true"},"#"),(0,t.Uk)(" 接口")],-1),jn=(0,t.Wm)("p",null,[(0,t.Uk)("在"),(0,t.Wm)("code",null,"TypeScript"),(0,t.Uk)("中，接口"),(0,t.Wm)("code",null,"interface"),(0,t.Uk)("是一个比较重要的概念，它是对行为的抽象，而具体的行为需要由类去实现，接口"),(0,t.Wm)("code",null,"interface"),(0,t.Uk)("中的任何代码都不会被最后编译到"),(0,t.Wm)("code",null,"JavaScript"),(0,t.Uk)("中。")],-1),Sn=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token keyword"},"interface"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Person"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  name"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("\n  age"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" person"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(" Person "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  name"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'why'"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("\n  age"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"23"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n")])])],-1),Hn=(0,t.Wm)("p",null,[(0,t.Uk)("在以上代码中，"),(0,t.Wm)("code",null,"person"),(0,t.Uk)("变量它是"),(0,t.Wm)("code",null,"Person"),(0,t.Uk)("类型的，那么此变量只能接受接口规定的属性，且属性值的类型也必须和接口中规定的一致，多一个属性或者少一个属性在"),(0,t.Wm)("code",null,"TypeScript"),(0,t.Uk)("中都不是被允许的。")],-1),Nn=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token keyword"},"interface"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Person"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  name"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("\n  age"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token comment"},"// 编译报错"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" person1"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(" Person "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  name"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'why'"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token comment"},"// 编译报错"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" person2"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(" Person "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  name"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'why'"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("\n  age"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"23"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("\n  sex"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'man'"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n")])])],-1),$n=(0,t.Wm)("h4",{id:"接口中的任意属性",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#接口中的任意属性","aria-hidden":"true"},"#"),(0,t.Uk)(" 接口中的任意属性")],-1),Cn=(0,t.Wm)("p",null,[(0,t.Uk)("以上一个例子为基础，假设我们接口只对"),(0,t.Wm)("code",null,"name"),(0,t.Uk)("和"),(0,t.Wm)("code",null,"age"),(0,t.Uk)("做规定，其它任何属性都是可以的，那么我们可以如下方式进行定义：")],-1),In=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token keyword"},"interface"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Person"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  name"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("\n  age"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token comment"},"// 任意属性"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Uk)("propName"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"any"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" person"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(" Person "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  name"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'why'"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("\n  age"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"23"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("\n  sex"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'man'"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n")])])],-1),En=(0,t.Wm)("h4",{id:"接口中的可选属性",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#接口中的可选属性","aria-hidden":"true"},"#"),(0,t.Uk)(" 接口中的可选属性")],-1),Vn=(0,t.Wm)("p",null,[(0,t.Uk)("现在假设，我们有一个接口，它只对"),(0,t.Wm)("code",null,"name"),(0,t.Uk)("做规定，但是对于是否包含"),(0,t.Wm)("code",null,"age"),(0,t.Uk)("不做要求，那么可以如下方式进行处理：")],-1),Fn=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token keyword"},"interface"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Person"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  name"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token comment"},"// age属性是可选的"),(0,t.Uk)("\n  age"),(0,t.Wm)("span",{class:"token operator"},"?"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token comment"},"// 编译成功"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" person1"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(" Person "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  name"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'why'"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" person2"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(" Person "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  name"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'why'"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("\n  age"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"23"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n")])])],-1),_n=(0,t.Wm)("h4",{id:"接口中的只读属性",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#接口中的只读属性","aria-hidden":"true"},"#"),(0,t.Uk)(" 接口中的只读属性")],-1),Jn=(0,t.Wm)("p",null,"最后我们要介绍的知识点是只读属性，一旦在接口中标记了属性为只读的， 那么其不能被赋值。",-1),Rn=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token keyword"},"interface"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Person"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  name"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token keyword"},"readonly"),(0,t.Uk)(" age"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" person"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(" Person "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  name"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'why'"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("\n  age"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"23"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token comment"},"// 编译报错"),(0,t.Uk)("\nperson"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("age "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"32"),(0,t.Uk)("\n")])])],-1),Ln=(0,t.Wm)("h3",{id:"函数的类型",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#函数的类型","aria-hidden":"true"},"#"),(0,t.Uk)(" 函数的类型")],-1),Mn=(0,t.Wm)("p",null,[(0,t.Uk)("在"),(0,t.Wm)("code",null,"JavaScript"),(0,t.Uk)("中，定义函数有三种表现形式：")],-1),zn=(0,t.Wm)("ul",null,[(0,t.Wm)("li",null,"函数声明。"),(0,t.Wm)("li",null,"函数表达式。"),(0,t.Wm)("li",null,"箭头函数")],-1),Gn=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token comment"},"// 函数声明"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"function"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token function"},"func1"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token string"},"'Hello, world'"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token comment"},"// 函数表达式"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"const"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token function-variable function"},"func2"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"function"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token string"},"'Hello, world'"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token comment"},"// 箭头函数"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"const"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token function-variable function"},"func3"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"=>"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token string"},"'Hello, world'"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n")])])],-1),Bn=(0,t.Wm)("p",null,[(0,t.Uk)("如果函数有参数，则必须在"),(0,t.Wm)("code",null,"TypeScript"),(0,t.Uk)("中为其定义具体的类型：")],-1),On=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token keyword"},"function"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token function"},"add"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("x"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(" y"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token keyword"},"return"),(0,t.Uk)(" x "),(0,t.Wm)("span",{class:"token operator"},"+"),(0,t.Uk)(" y\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token function"},"add"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token number"},"1"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"2"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("    "),(0,t.Wm)("span",{class:"token comment"},"// 输出3"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token function"},"add"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token number"},"1"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'2'"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("  "),(0,t.Wm)("span",{class:"token comment"},"// 报错"),(0,t.Uk)("\n")])])],-1),Dn=(0,t.Wm)("h4",{id:"接口定义函数",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#接口定义函数","aria-hidden":"true"},"#"),(0,t.Uk)(" 接口定义函数")],-1),qn=(0,t.Wm)("p",null,"函数也可以使用接口来定义其类型：",-1),Yn=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token keyword"},"interface"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"AddInterface"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("x"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(" y"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"const"),(0,t.Uk)(" add"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token function-variable function"},"AddInterface"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"function"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("x"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(" y"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token keyword"},"return"),(0,t.Uk)(" x "),(0,t.Wm)("span",{class:"token operator"},"+"),(0,t.Uk)(" y\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token function"},"add"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token number"},"1"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"2"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("    "),(0,t.Wm)("span",{class:"token comment"},"// 输出3"),(0,t.Uk)("\n")])])],-1),Kn=(0,t.Wm)("h4",{id:"可选参数",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#可选参数","aria-hidden":"true"},"#"),(0,t.Uk)(" 可选参数")],-1),Qn=(0,t.Wm)("p",null,"前面我们已经提到过，必须为具体的参数提供具体的类型，但如果一个函数接受一个参数，这个参数又是可选的，那么我们可以如下方式进行定义：",-1),Xn=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token keyword"},"function"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token function"},"getArea"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("a"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(" b"),(0,t.Wm)("span",{class:"token operator"},"?"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token keyword"},"return"),(0,t.Uk)("  b "),(0,t.Wm)("span",{class:"token operator"},"?"),(0,t.Uk)(" a "),(0,t.Wm)("span",{class:"token operator"},"*"),(0,t.Uk)(" b "),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(" a "),(0,t.Wm)("span",{class:"token operator"},"*"),(0,t.Uk)(" a\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token function"},"getArea"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token number"},"4"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("     "),(0,t.Wm)("span",{class:"token comment"},"// 16"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token function"},"getArea"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token number"},"4"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"5"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("  "),(0,t.Wm)("span",{class:"token comment"},"// 20"),(0,t.Uk)("\n")])])],-1),Zn=(0,t.Wm)("div",{class:"custom-container warning"},[(0,t.Wm)("p",{class:"custom-container-title"},"WARNING"),(0,t.Wm)("p",null,"可选参数必须放在最后一个位置，否则会报错。")],-1),ns=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token comment"},"// 编译报错"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"function"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token function"},"getArea"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("b"),(0,t.Wm)("span",{class:"token operator"},"?"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(" a"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token keyword"},"return"),(0,t.Uk)("  b "),(0,t.Wm)("span",{class:"token operator"},"?"),(0,t.Uk)(" a "),(0,t.Wm)("span",{class:"token operator"},"*"),(0,t.Uk)(" b "),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(" a "),(0,t.Wm)("span",{class:"token operator"},"*"),(0,t.Uk)(" a\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n")])])],-1),ss=(0,t.Wm)("h4",{id:"参数默认值",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#参数默认值","aria-hidden":"true"},"#"),(0,t.Uk)(" 参数默认值")],-1),as=(0,t.Wm)("p",null,[(0,t.Uk)("在"),(0,t.Wm)("code",null,"JavaScript"),(0,t.Uk)("中，函数允许我们给参数设置默认值，因此另外一种处理可选参数的方式是，为参数提供一个默认值，此时"),(0,t.Wm)("code",null,"TypeScript"),(0,t.Uk)("将会把该参数识别为可选参数：")],-1),ts=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token keyword"},"function"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token function"},"getArea"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("a"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(" b"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"1"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token keyword"},"return"),(0,t.Uk)("  a "),(0,t.Wm)("span",{class:"token operator"},"*"),(0,t.Uk)(" b\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token function"},"getArea"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token number"},"4"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("     "),(0,t.Wm)("span",{class:"token comment"},"// 4"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token function"},"getArea"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token number"},"4"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"5"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("  "),(0,t.Wm)("span",{class:"token comment"},"// 20"),(0,t.Uk)("\n")])])],-1),os=(0,t.Wm)("div",{class:"custom-container tip"},[(0,t.Wm)("p",{class:"custom-container-title"},"TIP"),(0,t.Wm)("p",null,[(0,t.Uk)("给一个参数设置了默认值后，就不再受"),(0,t.Wm)("code",null,"TypeScript"),(0,t.Uk)("可选参数必须在最后一个位置的限制了。")])],-1),es=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token keyword"},"function"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token function"},"getArea"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("b"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"1"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(" a"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token keyword"},"return"),(0,t.Uk)("  a "),(0,t.Wm)("span",{class:"token operator"},"*"),(0,t.Uk)(" b\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token comment"},"// 此时必须显示的传递一个undefined进行占位"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token function"},"getArea"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token keyword"},"undefined"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Wm)("span",{class:"token number"},"4"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token comment"},"// 4"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token function"},"getArea"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token number"},"4"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"5"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("        "),(0,t.Wm)("span",{class:"token comment"},"// 20"),(0,t.Uk)("\n")])])],-1),cs=(0,t.Wm)("h4",{id:"剩余参数",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#剩余参数","aria-hidden":"true"},"#"),(0,t.Uk)(" 剩余参数")],-1),ps=(0,t.Wm)("p",null,[(0,t.Uk)("在"),(0,t.Wm)("code",null,"ES6"),(0,t.Uk)("中，我们可以使用"),(0,t.Wm)("code",null,"..."),(0,t.Uk)("符号进行收缩剩余参数，在"),(0,t.Wm)("code",null,"TypeScript"),(0,t.Uk)("中，我们依然可以这么做：")],-1),ks=(0,t.Wm)("div",{class:"language-javascript ext-js"},[(0,t.Wm)("pre",{class:"language-javascript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token comment"},"// rest是一个数组，我们可以使用数组的类型来定义它"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"function"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token function"},"getTotal"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token parameter"},[(0,t.Uk)("a"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(" number"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"..."),(0,t.Uk)("rest"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(" number"),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Wm)("span",{class:"token punctuation"},"]")]),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("a"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("    "),(0,t.Wm)("span",{class:"token comment"},"// 1"),(0,t.Uk)("\n  console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("rest"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token comment"},"// [2, 3, 4]"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n"),(0,t.Wm)("span",{class:"token function"},"getTotal"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token number"},"1"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"2"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"3"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"4"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n")])])],-1),ls=(0,t.Wm)("h4",{id:"函数重载",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#函数重载","aria-hidden":"true"},"#"),(0,t.Uk)(" 函数重载")],-1),ms=(0,t.Wm)("p",null,[(0,t.Uk)("因为在"),(0,t.Wm)("code",null,"JavaScript"),(0,t.Uk)("中，并没有限制函数参数的个数或者类型，因此"),(0,t.Wm)("code",null,"JavaScript"),(0,t.Uk)("没有函数重载的概念，在"),(0,t.Wm)("code",null,"TypeScript"),(0,t.Uk)("中对于函数重载的理解是：只要函数参数的类型或者函数参数的数量不同时，就可以认为这是两个函数(重载)。")],-1),us=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token comment"},"// 前两个为函数声明，最后一个才是函数实现"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"function"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token function"},"add"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("a"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(" b"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"function"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token function"},"add"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("a"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(" b"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"function"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token function"},"add"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("a"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"|"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(" b"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"|"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"|"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token keyword"},"if"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token keyword"},"typeof"),(0,t.Uk)(" a "),(0,t.Wm)("span",{class:"token operator"},"==="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'number'"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"&&"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"typeof"),(0,t.Uk)(" b "),(0,t.Wm)("span",{class:"token operator"},"==="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'number'"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token keyword"},"return"),(0,t.Uk)(" a "),(0,t.Wm)("span",{class:"token operator"},"+"),(0,t.Uk)(" b\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"else"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token keyword"},"return"),(0,t.Uk)(" a "),(0,t.Wm)("span",{class:"token operator"},"+"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"''"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"+"),(0,t.Uk)(" b\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token function"},"add"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token number"},"1"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"2"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("      "),(0,t.Wm)("span",{class:"token comment"},"// 3"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token function"},"add"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token string"},"'1'"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'2'"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("  "),(0,t.Wm)("span",{class:"token comment"},"// 12"),(0,t.Uk)("\n")])])],-1),Ws=(0,t.Wm)("div",{class:"custom-container tip"},[(0,t.Wm)("p",{class:"custom-container-title"},"TIP"),(0,t.Wm)("p",null,"在有函数重载时，会优先从第一个进行逐一匹配，因此如果重载函数有包含关系，应该将最精准的函数定义写在最前面。")],-1),is=(0,t.Wm)("h3",{id:"类型断言",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#类型断言","aria-hidden":"true"},"#"),(0,t.Uk)(" 类型断言")],-1),rs=(0,t.Wm)("p",null,"在上面联合类型中，我们知道可以变量可以是多个类型的，这可能会在代码编写的过程中带给我们一些困惑：",-1),Us=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token keyword"},"class"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Student"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  name"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'student'"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token function"},"sayHi"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("name"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"class"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Teacher"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  name"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'teacher'"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token function"},"sayHello"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("name"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"function"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token function"},"print"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("person"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(" Student "),(0,t.Wm)("span",{class:"token operator"},"|"),(0,t.Uk)(" Teacher"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token keyword"},"if"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("person "),(0,t.Wm)("span",{class:"token keyword"},"instanceof"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Student"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token comment"},"// 强制断言为Student类型"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("person "),(0,t.Wm)("span",{class:"token keyword"},"as"),(0,t.Uk)(" Student"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"sayHi"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"else"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token comment"},"// 强制断言为Teacher类型"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("person "),(0,t.Wm)("span",{class:"token keyword"},"as"),(0,t.Uk)(" Teacher"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"sayHello"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n"),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" stu "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Student"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" teacher "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Teacher"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token function"},"print"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("stu"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("      "),(0,t.Wm)("span",{class:"token comment"},"// student"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token function"},"print"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("teacher"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("  "),(0,t.Wm)("span",{class:"token comment"},"// teacher"),(0,t.Uk)("\n")])])],-1),ds=(0,t.Wm)("p",null,[(0,t.Uk)("代码分析：在"),(0,t.Wm)("code",null,"print"),(0,t.Uk)("函数中，我们接受的参数可以是"),(0,t.Wm)("code",null,"Student"),(0,t.Uk)("或者"),(0,t.Wm)("code",null,"Teacher"),(0,t.Uk)("，在此函数内部我们希望能够根据不同的类型来调用不同的方法。我们首先使用"),(0,t.Wm)("code",null,"instanceof"),(0,t.Uk)("来判断参数是否为"),(0,t.Wm)("code",null,"Student"),(0,t.Uk)("类的实例，是我们将"),(0,t.Wm)("code",null,"person"),(0,t.Uk)("参数强制断言成"),(0,t.Wm)("code",null,"Student"),(0,t.Uk)("类型，此时就可以安全的调用"),(0,t.Wm)("code",null,"sayHi"),(0,t.Uk)("方法了，"),(0,t.Wm)("code",null,"Teacher"),(0,t.Uk)("同理。")],-1),gs=(0,t.Wm)("h3",{id:"类型别名",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#类型别名","aria-hidden":"true"},"#"),(0,t.Uk)(" 类型别名")],-1),bs=(0,t.Wm)("p",null,[(0,t.Uk)("类型别名用"),(0,t.Wm)("code",null,"type"),(0,t.Uk)("关键字来给一个类型起一个新的名字，类型别名常用于联合类型。")],-1),ys=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token keyword"},"type"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"combineType"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"|"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"type"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},[(0,t.Wm)("span",{class:"token keyword"},"type"),(0,t.Uk)("Obj")]),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  age"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n  name"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"const"),(0,t.Uk)(" value1"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(" combineType "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"123"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"const"),(0,t.Uk)(" obj"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"type"),(0,t.Uk)("Obj "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  age"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"123"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n  name"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'why'"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n")])])],-1),hs=(0,t.Wm)("h3",{id:"字符串字面量类型",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#字符串字面量类型","aria-hidden":"true"},"#"),(0,t.Uk)(" 字符串字面量类型")],-1),fs=(0,t.Wm)("p",null,"字符串字面量类型用来表示一个变量只能取某几个字符串值中的一个。",-1),ws=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token keyword"},"type"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"eventName"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'click'"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"|"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'scroll'"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"|"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'mousemove'"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"function"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token function"},"handleEvent"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("event"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(" eventName"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("event"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token function"},"handleEvent"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token string"},"'click'"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("    "),(0,t.Wm)("span",{class:"token comment"},"// click"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token function"},"handleEvent"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token string"},"'scroll'"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("   "),(0,t.Wm)("span",{class:"token comment"},"// scroll"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token function"},"handleEvent"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token string"},"'dbclick'"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("  "),(0,t.Wm)("span",{class:"token comment"},"// 编译报错"),(0,t.Uk)("\n")])])],-1),vs=(0,t.Wm)("h2",{id:"进阶",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#进阶","aria-hidden":"true"},"#"),(0,t.Uk)(" 进阶")],-1),xs=(0,t.Wm)("h3",{id:"数组和元组",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#数组和元组","aria-hidden":"true"},"#"),(0,t.Uk)(" 数组和元组")],-1),As=(0,t.Wm)("h4",{id:"数组",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#数组","aria-hidden":"true"},"#"),(0,t.Uk)(" 数组")],-1),Ts=(0,t.Wm)("p",null,"和普通的变量一样，数组中的类型定义也有一定的规则：类型+方括号表示",-1),Ps=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token comment"},"// 只允许存储number类型"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" numArray"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Wm)("span",{class:"token number"},"1"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"2"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"3"),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token comment"},"// 只允许存储string类型"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" strArray"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Wm)("span",{class:"token string"},"'1'"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'2'"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'3'"),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Uk)("\n")])])],-1),js=(0,t.Wm)("p",null,"值得一提的是，以上案例还有一种泛型方式的写法：",-1),Ss=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token comment"},"// 只允许存储number类型"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" numArray"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"Array"),(0,t.Wm)("span",{class:"token operator"},"<"),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Wm)("span",{class:"token operator"},">"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Wm)("span",{class:"token number"},"1"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"2"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"3"),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token comment"},"// 只允许存储string类型"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" strArray"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"Array"),(0,t.Wm)("span",{class:"token operator"},"<"),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Wm)("span",{class:"token operator"},">"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Wm)("span",{class:"token string"},"'1'"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'2'"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'3'"),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Uk)("\n")])])],-1),Hs=(0,t.Wm)("p",null,"在数组中也可以使用联合类型：",-1),Ns=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token comment"},"// 只允许存储number和string类型的值"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" tsArray"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"|"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Wm)("span",{class:"token number"},"1"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'2'"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'3'"),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Uk)("\n")])])],-1),$s=(0,t.Wm)("p",null,"我们知道，在数组中不仅可以存储基础数据类型，还可以存储对象类型，如果需要存储对象类型，可以用如下方式进行定义：",-1),Cs=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token comment"},"// 只允许存储对象仅有name和age，且name为string类型，age为number类型的对象"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" objArray"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)(" name"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(" age"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)(" name"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'AAA'"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(" age"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"23"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Uk)("\n")])])],-1),Is=(0,t.Wm)("p",null,"为了更加方便的撰写代码，我们可以使用类型别名的方式来管理以上类型：",-1),Es=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token comment"},"// 类型别名"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"type"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"person"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  name"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n  age"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" objArray"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(" person"),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)(" name"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'AAA'"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(" age"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"23"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Uk)("\n")])])],-1),Vs=(0,t.Wm)("h4",{id:"元组",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#元组","aria-hidden":"true"},"#"),(0,t.Uk)(" 元组")],-1),Fs=(0,t.Wm)("p",null,"对元组的理解是：一个数组如果知道它确定的长度，且每个位置的值的类型也是确定的，那么就可以把这样的数组称为元组。",-1),_s=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token comment"},"// tuple数组只有2个元素，并且第一个元素类型为string，第二个元素类型为number"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" tuple"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Wm)("span",{class:"token string"},"'AAA'"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"123"),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Uk)("\n")])])],-1),Js=(0,t.Wm)("div",{class:"custom-container warning"},[(0,t.Wm)("p",{class:"custom-container-title"},"WARNING"),(0,t.Wm)("p",null,"当访问元组中已知位置的索引时，将得到其对应正确的值；当访问元组中未知位置的索引时，会报错。")],-1),Rs=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" tuple"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Wm)("span",{class:"token string"},"'AAA'"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"123"),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("tuple"),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Wm)("span",{class:"token number"},"1"),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token comment"},"// 123"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("tuple"),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Wm)("span",{class:"token number"},"2"),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token comment"},"// 报错"),(0,t.Uk)("\n")])])],-1),Ls=(0,t.Wm)("h3",{id:"枚举",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#枚举","aria-hidden":"true"},"#"),(0,t.Uk)(" 枚举")],-1),Ms=(0,t.Wm)("p",null,[(0,t.Uk)("枚举"),(0,t.Wm)("code",null,"Enum"),(0,t.Uk)("类型用来表示取值限定在指定的范围，例如一周只能有七天，颜色只能有红、绿、蓝等。")],-1),zs=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token keyword"},"enum"),(0,t.Uk)(" colors  "),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  red"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("\n  green"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("\n  blue\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("colors"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("red"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("   "),(0,t.Wm)("span",{class:"token comment"},"// 0"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("colors"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("green"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token comment"},"// 1"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("colors"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("blue"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("  "),(0,t.Wm)("span",{class:"token comment"},"// 2"),(0,t.Uk)("\n")])])],-1),Gs=(0,t.Wm)("p",null,[(0,t.Uk)("代码分析：我们定义一个"),(0,t.Wm)("code",null,"colors"),(0,t.Uk)("的枚举类型，其取值只能是"),(0,t.Wm)("code",null,"red"),(0,t.Uk)("、"),(0,t.Wm)("code",null,"green"),(0,t.Uk)("、"),(0,t.Wm)("code",null,"blue"),(0,t.Uk)("。我们可以在打印的内容发现，其输出值从0开始，依次累加1。这是枚举类型的默认行为，我们可以手动设置一个起始值：")],-1),Bs=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token keyword"},"enum"),(0,t.Uk)(" colors  "),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  red "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"10"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("\n  green"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("\n  blue\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("colors"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("red"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("   "),(0,t.Wm)("span",{class:"token comment"},"// 10"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("colors"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("green"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token comment"},"// 11"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("colors"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("blue"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("  "),(0,t.Wm)("span",{class:"token comment"},"// 12"),(0,t.Uk)("\n")])])],-1),Os=(0,t.Wm)("p",null,"在枚举类型中，我们不仅可以正向的获取值，还可以通过值反向获取枚举：",-1),Ds=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token keyword"},"enum"),(0,t.Uk)(" colors  "),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  red "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"10"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("\n  green"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("\n  blue\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("colors"),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Wm)("span",{class:"token number"},"10"),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token comment"},"// red"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("colors"),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Wm)("span",{class:"token number"},"11"),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token comment"},"// green"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("colors"),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Wm)("span",{class:"token number"},"12"),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token comment"},"// blue"),(0,t.Uk)("\n")])])],-1),qs=(0,t.Wm)("h3",{id:"类",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#类","aria-hidden":"true"},"#"),(0,t.Uk)(" 类")],-1),Ys=(0,t.Wm)("h4",{id:"类的继承",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#类的继承","aria-hidden":"true"},"#"),(0,t.Uk)(" 类的继承")],-1),Ks=(0,t.Wm)("p",null,[(0,t.Uk)("在"),(0,t.Wm)("code",null,"JavaScript"),(0,t.Uk)("中，通过"),(0,t.Wm)("code",null,"extends"),(0,t.Uk)("关键字来实现子类继承父类，子类也可以通过"),(0,t.Wm)("code",null,"super"),(0,t.Uk)("关键字来访问父类的属性或者方法。")],-1),Qs=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token keyword"},"class"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Person"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  name"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token function"},"constructor"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("name"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("name "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(" name\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token function"},"sayHello"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token template-string"},[(0,t.Wm)("span",{class:"token template-punctuation string"},"`"),(0,t.Wm)("span",{class:"token string"},"hello, "),(0,t.Wm)("span",{class:"token interpolation"},[(0,t.Wm)("span",{class:"token interpolation-punctuation punctuation"},"${"),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("name"),(0,t.Wm)("span",{class:"token interpolation-punctuation punctuation"},"}")]),(0,t.Wm)("span",{class:"token template-punctuation string"},"`")]),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"class"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Teacher"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"extends"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Person"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token function"},"constructor"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("name"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token comment"},"// 调用父类的构造函数"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token keyword"},"super"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("name"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token function"},"sayTeacherHello"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token comment"},"// 调用父类的方法"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token keyword"},"return"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"super"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"sayHello"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" teacher "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Teacher"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token string"},"'why'"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\nteacher"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"sayHello"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("        "),(0,t.Wm)("span",{class:"token comment"},"// hello, why"),(0,t.Uk)("\nteacher"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"sayTeacherHello"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token comment"},"// hello, why"),(0,t.Uk)("\n")])])],-1),Xs=(0,t.Wm)("div",{class:"custom-container tip"},[(0,t.Wm)("p",{class:"custom-container-title"},"TIP"),(0,t.Wm)("p",null,"有一种关于类属性的简写方式，就是在类的构造函数中指明访问修饰符。")],-1),Zs=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token comment"},"// 简写形式"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"class"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Person"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token function"},"constructor"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token keyword"},"public"),(0,t.Uk)(" name"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token comment"},"// 等价于"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"class"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Person"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  name"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token function"},"constructor"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("name"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("name "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(" name\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n")])])],-1),na=(0,t.Wm)("h4",{id:"存取器",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#存取器","aria-hidden":"true"},"#"),(0,t.Uk)(" 存取器")],-1),sa=(0,t.Wm)("p",null,[(0,t.Uk)("在"),(0,t.Wm)("code",null,"class"),(0,t.Uk)("中，可以通过"),(0,t.Wm)("code",null,"getter"),(0,t.Uk)("和"),(0,t.Wm)("code",null,"setter"),(0,t.Uk)("来改变属性的读取和赋值行为。")],-1),aa=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token keyword"},"class"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Person"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token comment"},"// 私有属性，只能在类中进行访问"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token keyword"},"private"),(0,t.Uk)(" _name"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token function"},"constructor"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("_name"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("_name "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(" _name\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token keyword"},"get"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token function"},"name"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token keyword"},"return"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("_name\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token keyword"},"set"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token function"},"name"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("name"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("_name "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(" name\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" person "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Person"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token string"},"'why'"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("person"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("name"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("  "),(0,t.Wm)("span",{class:"token comment"},"// why"),(0,t.Uk)("\nperson"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("name "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'AAA'"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("person"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("name"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("  "),(0,t.Wm)("span",{class:"token comment"},"// AAA"),(0,t.Uk)("\n")])])],-1),ta=(0,t.Wm)("h4",{id:"静态属性和静态方法",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#静态属性和静态方法","aria-hidden":"true"},"#"),(0,t.Uk)(" 静态属性和静态方法")],-1),oa=(0,t.Wm)("p",null,[(0,t.Uk)("所谓静态属性和静态方法，就是只能通过类来进行访问，不能通过类的实例来进行访问。在众多设计模式中，有一种设计模式叫做单例设计模式，可以使用"),(0,t.Wm)("code",null,"static"),(0,t.Uk)("静态方法来辅助我们完成单例设计模式。")],-1),ea=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token keyword"},"class"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Person"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token keyword"},"private"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"static"),(0,t.Uk)(" _instance"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(" Person\n  "),(0,t.Wm)("span",{class:"token keyword"},"private"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token function"},"constructor"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token keyword"},"public"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"static"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token function"},"getInstance"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token keyword"},"if"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token operator"},"!"),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("_instance"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n      "),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("_instance "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Person"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"const"),(0,t.Uk)(" person1 "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(" Person"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"getInstance"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"const"),(0,t.Uk)(" person2 "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(" Person"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"getInstance"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("person1 "),(0,t.Wm)("span",{class:"token operator"},"==="),(0,t.Uk)(" person2"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token comment"},"// true"),(0,t.Uk)("\n")])])],-1),ca=(0,t.Wm)("h4",{id:"typescript类的访问修饰符",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#typescript类的访问修饰符","aria-hidden":"true"},"#"),(0,t.Uk)(" TypeScript类的访问修饰符")],-1),pa=(0,t.Wm)("p",null,[(0,t.Uk)("在以上的实例中，我们使用到了"),(0,t.Wm)("code",null,"TypeScript"),(0,t.Uk)("中关于类的几种访问修饰符，它有三种：")],-1),ka=(0,t.Wm)("ul",null,[(0,t.Wm)("li",null,[(0,t.Wm)("code",null,"public"),(0,t.Uk)("：公有的，在任何地方都可以访问到。")]),(0,t.Wm)("li",null,[(0,t.Wm)("code",null,"protected"),(0,t.Uk)("：受保护的，只能在类的内部及其类的子类内部使用。")]),(0,t.Wm)("li",null,[(0,t.Wm)("code",null,"private"),(0,t.Uk)("：私有的，只能在类的内部进行使用。")])],-1),la=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token keyword"},"class"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Person"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token keyword"},"private"),(0,t.Uk)(" age"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token keyword"},"protected"),(0,t.Uk)(" address"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token keyword"},"public"),(0,t.Uk)(" name"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token function"},"constructor"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("age"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(" address"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(" name"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("age "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(" age\n    "),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("address "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(" address\n    "),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("name "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(" name\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"class"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Teacher"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"extends"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Person"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token function"},"sayHello"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token template-string"},[(0,t.Wm)("span",{class:"token template-punctuation string"},"`"),(0,t.Wm)("span",{class:"token string"},"my addresss is "),(0,t.Wm)("span",{class:"token interpolation"},[(0,t.Wm)("span",{class:"token interpolation-punctuation punctuation"},"${"),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("address"),(0,t.Wm)("span",{class:"token interpolation-punctuation punctuation"},"}")]),(0,t.Wm)("span",{class:"token template-punctuation string"},"`")]),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token comment"},"// my address is 广东广州"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token template-string"},[(0,t.Wm)("span",{class:"token template-punctuation string"},"`"),(0,t.Wm)("span",{class:"token string"},"my name is "),(0,t.Wm)("span",{class:"token interpolation"},[(0,t.Wm)("span",{class:"token interpolation-punctuation punctuation"},"${"),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("name"),(0,t.Wm)("span",{class:"token interpolation-punctuation punctuation"},"}")]),(0,t.Wm)("span",{class:"token template-punctuation string"},"`")]),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("        "),(0,t.Wm)("span",{class:"token comment"},"// my name is why"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token template-string"},[(0,t.Wm)("span",{class:"token template-punctuation string"},"`"),(0,t.Wm)("span",{class:"token string"},"my age is "),(0,t.Wm)("span",{class:"token interpolation"},[(0,t.Wm)("span",{class:"token interpolation-punctuation punctuation"},"${"),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("age"),(0,t.Wm)("span",{class:"token interpolation-punctuation punctuation"},"}")]),(0,t.Wm)("span",{class:"token template-punctuation string"},"`")]),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("          "),(0,t.Wm)("span",{class:"token comment"},"// 编译报错"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"const"),(0,t.Uk)(" person "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Person"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token number"},"21"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'广东广州'"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'why'"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("person"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("name"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("    "),(0,t.Wm)("span",{class:"token comment"},"// why"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("person"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("age"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("     "),(0,t.Wm)("span",{class:"token comment"},"// 编译报错"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("person"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("address"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token comment"},"// 编译报错"),(0,t.Uk)("\n")])])],-1),ma=(0,t.Wm)("h4",{id:"只读属性",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#只读属性","aria-hidden":"true"},"#"),(0,t.Uk)(" 只读属性")],-1),ua=(0,t.Wm)("p",null,[(0,t.Uk)("可以使用"),(0,t.Wm)("code",null,"readonly"),(0,t.Uk)("关键字来表示属性是只读的。")],-1),Wa=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token keyword"},"class"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Person"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token function"},"constructor"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token keyword"},"public"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"readonly"),(0,t.Uk)(" name"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" person "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Person"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token string"},"'AAA'"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("person"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("name"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("  "),(0,t.Wm)("span",{class:"token comment"},"// AAA"),(0,t.Uk)("\nperson"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("name "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'BBB'"),(0,t.Uk)("       "),(0,t.Wm)("span",{class:"token comment"},"// 编译报错 "),(0,t.Uk)("\n")])])],-1),ia=(0,t.Wm)("h4",{id:"抽象类",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#抽象类","aria-hidden":"true"},"#"),(0,t.Uk)(" 抽象类")],-1),ra=(0,t.Wm)("p",null,[(0,t.Uk)("在"),(0,t.Wm)("code",null,"TypeScript"),(0,t.Uk)("中，可以使用"),(0,t.Wm)("code",null,"abstract"),(0,t.Uk)("关键字来定义抽象类以及抽象类中的抽象方法，在使用抽象类的过程中，有几点需要注意：")],-1),Ua=(0,t.Wm)("ul",null,[(0,t.Wm)("li",null,"抽象类不能被实例化，只能被继承。"),(0,t.Wm)("li",null,"抽象类中的抽象方法必须被子类实现。")],-1),da=(0,t.Wm)("p",null,"抽象类不能被实例化：",-1),ga=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token keyword"},"abstract"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"class"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Animal"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  name"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token function"},"constructor"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("name"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("name "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(" name\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"class"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Person"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"extends"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Animal"),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"const"),(0,t.Uk)(" person "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Person"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token string"},"'why'"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("person"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("name"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("    "),(0,t.Wm)("span",{class:"token comment"},"// why"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"const"),(0,t.Uk)(" animal "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Animal"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token comment"},"// 编译报错"),(0,t.Uk)("\n")])])],-1),ba=(0,t.Wm)("p",null,"抽象类中的抽象方法必须被子类实现：",-1),ya=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token keyword"},"abstract"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"class"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Animal"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  name"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token function"},"constructor"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("name"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("name "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(" name\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token keyword"},"abstract"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token function"},"eat"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"void"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"class"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Person"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"extends"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Animal"),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token comment"},"// 子类必须实现抽象类中的抽象方法"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token function"},"eat"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token string"},"'person is eating'"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"const"),(0,t.Uk)(" person "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Person"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token string"},"'why'"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("person"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("name"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("    "),(0,t.Wm)("span",{class:"token comment"},"// why"),(0,t.Uk)("\nperson"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"eat"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("                "),(0,t.Wm)("span",{class:"token comment"},"// person is eating"),(0,t.Uk)("\n")])])],-1),ha=(0,t.Wm)("h3",{id:"类和接口",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#类和接口","aria-hidden":"true"},"#"),(0,t.Uk)(" 类和接口")],-1),fa=(0,t.Wm)("h4",{id:"类实现接口",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#类实现接口","aria-hidden":"true"},"#"),(0,t.Uk)(" 类实现接口")],-1),wa=(0,t.Wm)("div",{class:"custom-container tip"},[(0,t.Wm)("p",{class:"custom-container-title"},"TIP"),(0,t.Wm)("p",null,"一个类可以实现一个或者多个接口，用逗号分隔。")],-1),va=(0,t.Wm)("p",null,"如果我们定义了一个接口，然后类去实现它，那么这个接口中的属性和方法，在类中必须全部都要存在，否则会编译报错。",-1),xa=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token keyword"},"interface"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Animal"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  age"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token function"},"sayHello"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"void"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n"),(0,t.Wm)("span",{class:"token keyword"},"class"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Person"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"implements"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Animal"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  age"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token function"},"sayHello"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("age"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n")])])],-1),Aa=(0,t.Wm)("h4",{id:"接口继承接口",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#接口继承接口","aria-hidden":"true"},"#"),(0,t.Uk)(" 接口继承接口")],-1),Ta=(0,t.Wm)("p",null,"在上面的案例中，我们使用到了类实现接口，其实一个接口还可以继承自另外一个接口。",-1),Pa=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token keyword"},"interface"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Animal"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  age"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token function"},"sayHello"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"void"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"interface"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Person"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"extends"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Animal"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token comment"},"// Person接口继承了Animal，就拥有了Animal种所有的属性和方法"),(0,t.Uk)("\n  name"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n"),(0,t.Wm)("span",{class:"token keyword"},"class"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Person"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"implements"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Person"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  age"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token function"},"sayHello"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("age"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n")])])],-1),ja=(0,t.Wm)("h4",{id:"接口继承类",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#接口继承类","aria-hidden":"true"},"#"),(0,t.Uk)(" 接口继承类")],-1),Sa=(0,t.Wm)("p",null,[(0,t.Uk)("在有些语言中，接口一般而言是不能继承类的，但在"),(0,t.Wm)("code",null,"TypeScript"),(0,t.Uk)("中是可以继承的，接口继承类以后，就拥有类中所有的属性和方法。")],-1),Ha=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token keyword"},"class"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Point"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  x"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Uk)("\n  y"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token function"},"constructor"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("x"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(" y"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("x "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(" x\n    "),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("y "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(" y\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"interface"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Point3d"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"extends"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Point"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  z"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" point3d"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(" Point3d "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  x"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"10"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("\n  y"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"10"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("\n  z"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"10"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("point3d"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("  "),(0,t.Wm)("span",{class:"token comment"},"// { x: 10, y: 10, z: 10 }"),(0,t.Uk)("\n")])])],-1),Na=(0,t.Wm)("h3",{id:"泛型",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#泛型","aria-hidden":"true"},"#"),(0,t.Uk)(" 泛型")],-1),$a=(0,t.Wm)("p",null,[(0,t.Uk)("泛型"),(0,t.Wm)("code",null,"generics"),(0,t.Uk)("是指在定义函数、接口和类的时候，不预先指定其具体类型，而在使用的时候再去指定的一种特性。")],-1),Ca=(0,t.Wm)("h4",{id:"函数中的泛型",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#函数中的泛型","aria-hidden":"true"},"#"),(0,t.Uk)(" 函数中的泛型")],-1),Ia=(0,t.Wm)("p",null,[(0,t.Uk)("假设我们有如下一个函数，其中参数"),(0,t.Wm)("code",null,"a"),(0,t.Uk)("和"),(0,t.Wm)("code",null,"b"),(0,t.Uk)("接受的类型必须为相同的类型。")],-1),Ea=(0,t.Wm)("div",{class:"language-javascript ext-js"},[(0,t.Wm)("pre",{class:"language-javascript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token keyword"},"function"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token function"},"join"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token parameter"},[(0,t.Uk)("a"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(" b")]),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token keyword"},"return"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token template-string"},[(0,t.Wm)("span",{class:"token template-punctuation string"},"`"),(0,t.Wm)("span",{class:"token interpolation"},[(0,t.Wm)("span",{class:"token interpolation-punctuation punctuation"},"${"),(0,t.Uk)("a"),(0,t.Wm)("span",{class:"token interpolation-punctuation punctuation"},"}")]),(0,t.Wm)("span",{class:"token interpolation"},[(0,t.Wm)("span",{class:"token interpolation-punctuation punctuation"},"${"),(0,t.Uk)("b"),(0,t.Wm)("span",{class:"token interpolation-punctuation punctuation"},"}")]),(0,t.Wm)("span",{class:"token template-punctuation string"},"`")]),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n")])])],-1),Va=(0,t.Wm)("p",null,"我们在没有了解到泛型之前，我们可以用联合类型来定义：",-1),Fa=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token keyword"},"function"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token function"},"join"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("a"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"|"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(" b"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"|"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token keyword"},"return"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token template-string"},[(0,t.Wm)("span",{class:"token template-punctuation string"},"`"),(0,t.Wm)("span",{class:"token interpolation"},[(0,t.Wm)("span",{class:"token interpolation-punctuation punctuation"},"${"),(0,t.Uk)("a"),(0,t.Wm)("span",{class:"token interpolation-punctuation punctuation"},"}")]),(0,t.Wm)("span",{class:"token interpolation"},[(0,t.Wm)("span",{class:"token interpolation-punctuation punctuation"},"${"),(0,t.Uk)("b"),(0,t.Wm)("span",{class:"token interpolation-punctuation punctuation"},"}")]),(0,t.Wm)("span",{class:"token template-punctuation string"},"`")]),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n")])])],-1),_a=(0,t.Wm)("p",null,[(0,t.Uk)("代码分析：在以上的例子中，我们仅仅只是规定了"),(0,t.Wm)("code",null,"a"),(0,t.Uk)("和"),(0,t.Wm)("code",null,"b"),(0,t.Uk)("参数必须是"),(0,t.Wm)("code",null,"number"),(0,t.Uk)("类型或者"),(0,t.Wm)("code",null,"string"),(0,t.Uk)("类型，但并没有办法来限制"),(0,t.Wm)("code",null,"a"),(0,t.Uk)("和"),(0,t.Wm)("code",null,"b"),(0,t.Uk)("必须是同一个类型。这个时候我们可以使用泛型来表示：")],-1),Ja=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token keyword"},"function"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token generic-function"},[(0,t.Wm)("span",{class:"token function"},"join"),(0,t.Wm)("span",{class:"token generic class-name"},[(0,t.Wm)("span",{class:"token operator"},"<"),(0,t.Wm)("span",{class:"token constant"},"T"),(0,t.Wm)("span",{class:"token operator"},">")])]),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("a"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token constant"},"T"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(" b"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token constant"},"T"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token keyword"},"return"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token template-string"},[(0,t.Wm)("span",{class:"token template-punctuation string"},"`"),(0,t.Wm)("span",{class:"token interpolation"},[(0,t.Wm)("span",{class:"token interpolation-punctuation punctuation"},"${"),(0,t.Uk)("a"),(0,t.Wm)("span",{class:"token interpolation-punctuation punctuation"},"}")]),(0,t.Wm)("span",{class:"token interpolation"},[(0,t.Wm)("span",{class:"token interpolation-punctuation punctuation"},"${"),(0,t.Uk)("b"),(0,t.Wm)("span",{class:"token interpolation-punctuation punctuation"},"}")]),(0,t.Wm)("span",{class:"token template-punctuation string"},"`")]),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token function"},"join"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token number"},"1"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"2"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("     "),(0,t.Wm)("span",{class:"token comment"},"// 12    "),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token function"},"join"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token string"},"'1'"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'2'"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token comment"},"// 12"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token function"},"join"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token number"},"1"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'2'"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("   "),(0,t.Wm)("span",{class:"token comment"},"// 编译报错"),(0,t.Uk)("\n")])])],-1),Ra=(0,t.Wm)("p",null,[(0,t.Wm)("strong",null,"注意"),(0,t.Uk)("：我们在调用"),(0,t.Wm)("code",null,"join()"),(0,t.Uk)("函数并进行传参的时候，"),(0,t.Wm)("code",null,"TypeScript"),(0,t.Uk)("会自动帮我们推断参数的类型，以上三行代码也可以像如下方式进行撰写：")],-1),La=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token generic-function"},[(0,t.Wm)("span",{class:"token function"},"join"),(0,t.Wm)("span",{class:"token generic class-name"},[(0,t.Wm)("span",{class:"token operator"},"<"),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Wm)("span",{class:"token operator"},">")])]),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token number"},"1"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"2"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("     "),(0,t.Wm)("span",{class:"token comment"},"// 12    "),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token generic-function"},[(0,t.Wm)("span",{class:"token function"},"join"),(0,t.Wm)("span",{class:"token generic class-name"},[(0,t.Wm)("span",{class:"token operator"},"<"),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Wm)("span",{class:"token operator"},">")])]),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token string"},"'1'"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'2'"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token comment"},"// 12"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token generic-function"},[(0,t.Wm)("span",{class:"token function"},"join"),(0,t.Wm)("span",{class:"token generic class-name"},[(0,t.Wm)("span",{class:"token operator"},"<"),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Wm)("span",{class:"token operator"},">")])]),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token number"},"1"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'2'"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("   "),(0,t.Wm)("span",{class:"token comment"},"// 编译报错"),(0,t.Uk)("\n")])])],-1),Ma=(0,t.Wm)("div",{class:"custom-container tip"},[(0,t.Wm)("p",{class:"custom-container-title"},"TIP"),(0,t.Wm)("p",null,"泛型可以是多个的。")],-1),za=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token keyword"},"function"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token generic-function"},[(0,t.Wm)("span",{class:"token function"},"join"),(0,t.Wm)("span",{class:"token generic class-name"},[(0,t.Wm)("span",{class:"token operator"},"<"),(0,t.Wm)("span",{class:"token constant"},"T"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token constant"},"P"),(0,t.Wm)("span",{class:"token operator"},">")])]),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("a"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token constant"},"T"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(" b"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token constant"},"P"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token keyword"},"return"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token template-string"},[(0,t.Wm)("span",{class:"token template-punctuation string"},"`"),(0,t.Wm)("span",{class:"token interpolation"},[(0,t.Wm)("span",{class:"token interpolation-punctuation punctuation"},"${"),(0,t.Uk)("a"),(0,t.Wm)("span",{class:"token interpolation-punctuation punctuation"},"}")]),(0,t.Wm)("span",{class:"token interpolation"},[(0,t.Wm)("span",{class:"token interpolation-punctuation punctuation"},"${"),(0,t.Uk)("b"),(0,t.Wm)("span",{class:"token interpolation-punctuation punctuation"},"}")]),(0,t.Wm)("span",{class:"token template-punctuation string"},"`")]),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token function"},"join"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token number"},"1"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"2"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("     "),(0,t.Wm)("span",{class:"token comment"},"// 12    "),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token function"},"join"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token string"},"'1'"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'2'"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token comment"},"// 12"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token function"},"join"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token number"},"1"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'2'"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("   "),(0,t.Wm)("span",{class:"token comment"},"// 12"),(0,t.Uk)("\n")])])],-1),Ga=(0,t.Wm)("p",null,[(0,t.Uk)("代码分析：在以上的案例中，"),(0,t.Wm)("code",null,"join"),(0,t.Uk)("方法接受2个泛型类型，其中参数"),(0,t.Wm)("code",null,"a:T"),(0,t.Uk)("，参数"),(0,t.Wm)("code",null,"b:p"),(0,t.Uk)("，因此"),(0,t.Wm)("code",null,"console.log(join(1, '2'))"),(0,t.Uk)("会正确被编译并输出12。")],-1),Ba=(0,t.Wm)("h4",{id:"类中的泛型",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#类中的泛型","aria-hidden":"true"},"#"),(0,t.Uk)(" 类中的泛型")],-1),Oa=(0,t.Wm)("p",null,"泛型同样可以使用在类中。",-1),Da=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token keyword"},"class"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},[(0,t.Uk)("CreateClass"),(0,t.Wm)("span",{class:"token operator"},"<"),(0,t.Wm)("span",{class:"token constant"},"T"),(0,t.Wm)("span",{class:"token operator"},">")]),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  zeroValue"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token constant"},"T"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token function-variable function"},"add"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("x"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token constant"},"T"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(" y"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token constant"},"T"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"=>"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token constant"},"T"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" createNumber "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},[(0,t.Uk)("CreateClass"),(0,t.Wm)("span",{class:"token operator"},"<"),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Wm)("span",{class:"token operator"},">")]),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\ncreateNumber"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function-variable function"},"add"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"function"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("x"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(" y"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token keyword"},"return"),(0,t.Uk)(" x "),(0,t.Wm)("span",{class:"token operator"},"+"),(0,t.Uk)(" y\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" createString "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},[(0,t.Uk)("CreateClass"),(0,t.Wm)("span",{class:"token operator"},"<"),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Wm)("span",{class:"token operator"},">")]),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\ncreateString"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function-variable function"},"add"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"function"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("x"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(" y"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token keyword"},"return"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token template-string"},[(0,t.Wm)("span",{class:"token template-punctuation string"},"`"),(0,t.Wm)("span",{class:"token interpolation"},[(0,t.Wm)("span",{class:"token interpolation-punctuation punctuation"},"${"),(0,t.Uk)("x"),(0,t.Wm)("span",{class:"token interpolation-punctuation punctuation"},"}")]),(0,t.Wm)("span",{class:"token interpolation"},[(0,t.Wm)("span",{class:"token interpolation-punctuation punctuation"},"${"),(0,t.Uk)("y"),(0,t.Wm)("span",{class:"token interpolation-punctuation punctuation"},"}")]),(0,t.Wm)("span",{class:"token template-punctuation string"},"`")]),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("createNumber"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"add"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token number"},"1"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"2"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("     "),(0,t.Wm)("span",{class:"token comment"},"// 3"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("createString"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"add"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token string"},"'1'"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'2'"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token comment"},"// 12"),(0,t.Uk)("\n")])])],-1),qa=(0,t.Wm)("div",{class:"custom-container tip"},[(0,t.Wm)("p",{class:"custom-container-title"},"TIP"),(0,t.Wm)("p",null,[(0,t.Uk)("在"),(0,t.Wm)("code",null,"TypeScript@2.3+"),(0,t.Uk)("以后的版本，我们可以为泛型提供一个默认值。")])],-1),Ya=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token keyword"},"class"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},[(0,t.Uk)("CreateClass"),(0,t.Wm)("span",{class:"token operator"},"<"),(0,t.Wm)("span",{class:"token constant"},"T"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Wm)("span",{class:"token operator"},">")]),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  zeroValue"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token constant"},"T"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token function-variable function"},"add"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("x"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token constant"},"T"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(" y"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token constant"},"T"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"=>"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token constant"},"T"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" createNumber "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"CreateClass"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\ncreateNumber"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function-variable function"},"add"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"function"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("x"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(" y"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token keyword"},"return"),(0,t.Uk)(" x "),(0,t.Wm)("span",{class:"token operator"},"+"),(0,t.Uk)(" y\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" createString "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},[(0,t.Uk)("CreateClass"),(0,t.Wm)("span",{class:"token operator"},"<"),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Wm)("span",{class:"token operator"},">")]),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\ncreateString"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function-variable function"},"add"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"function"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("x"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(" y"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token keyword"},"return"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token template-string"},[(0,t.Wm)("span",{class:"token template-punctuation string"},"`"),(0,t.Wm)("span",{class:"token interpolation"},[(0,t.Wm)("span",{class:"token interpolation-punctuation punctuation"},"${"),(0,t.Uk)("x"),(0,t.Wm)("span",{class:"token interpolation-punctuation punctuation"},"}")]),(0,t.Wm)("span",{class:"token interpolation"},[(0,t.Wm)("span",{class:"token interpolation-punctuation punctuation"},"${"),(0,t.Uk)("y"),(0,t.Wm)("span",{class:"token interpolation-punctuation punctuation"},"}")]),(0,t.Wm)("span",{class:"token template-punctuation string"},"`")]),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("createNumber"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"add"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token number"},"1"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"2"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("     "),(0,t.Wm)("span",{class:"token comment"},"// 3"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("createString"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"add"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token string"},"'1'"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'2'"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token comment"},"// 12"),(0,t.Uk)("\n")])])],-1),Ka=(0,t.Wm)("p",null,[(0,t.Uk)("代码分析：在"),(0,t.Wm)("code",null,"CreateClass"),(0,t.Uk)("类的定义部分，我们为泛型提供了一个默认值"),(0,t.Wm)("code",null,"number"),(0,t.Uk)("，因此我们在实例"),(0,t.Wm)("code",null,"createNumber"),(0,t.Uk)("初始化的时候就可以不用传递"),(0,t.Wm)("code",null,"number"),(0,t.Uk)("了。")],-1),Qa=(0,t.Wm)("h4",{id:"接口中的泛型",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#接口中的泛型","aria-hidden":"true"},"#"),(0,t.Uk)(" 接口中的泛型")],-1),Xa=(0,t.Wm)("p",null,"像在类中一样，泛型可以存在于接口中。",-1),Za=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token keyword"},"interface"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"CreateArray"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token operator"},"<"),(0,t.Wm)("span",{class:"token constant"},"T"),(0,t.Wm)("span",{class:"token operator"},">"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("length"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(" value"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token constant"},"T"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token constant"},"T"),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" createArrayFunc"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token function-variable function"},"CreateArray"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"function"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("length"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(" value"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" result "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token keyword"},"for"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" index "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"0"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)(" index "),(0,t.Wm)("span",{class:"token operator"},"<"),(0,t.Uk)(" length"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)(" index"),(0,t.Wm)("span",{class:"token operator"},"++"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    result"),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Uk)("index"),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(" value\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token keyword"},"return"),(0,t.Uk)(" result\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token function"},"createArrayFunc"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token number"},"3"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'AAA'"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("  "),(0,t.Wm)("span",{class:"token comment"},"// ['AAA', 'AAA', 'AAA']"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token function"},"createArrayFunc"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token number"},"2"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token boolean"},"true"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("   "),(0,t.Wm)("span",{class:"token comment"},"// [true, true]"),(0,t.Uk)("\n")])])],-1),nt=(0,t.Wm)("h3",{id:"声明合并",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#声明合并","aria-hidden":"true"},"#"),(0,t.Uk)(" 声明合并")],-1),st=(0,t.Wm)("p",null,"如果定义了两个相同名字的函数、接口或类，那么它们会合并成一个类型。 声明合并，我们在上面已经有实例的案例了，那就是函数的重载。",-1),at=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token keyword"},"function"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token function"},"add"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("a"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(" b"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"function"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token function"},"add"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("a"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(" b"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"function"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token function"},"add"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("a"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"|"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(" b"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"|"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"|"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token keyword"},"if"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token keyword"},"typeof"),(0,t.Uk)(" a "),(0,t.Wm)("span",{class:"token operator"},"==="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'number'"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"&&"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"typeof"),(0,t.Uk)(" b "),(0,t.Wm)("span",{class:"token operator"},"==="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'number'"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token keyword"},"return"),(0,t.Uk)(" a "),(0,t.Wm)("span",{class:"token operator"},"+"),(0,t.Uk)(" b\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"else"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token keyword"},"return"),(0,t.Uk)(" a "),(0,t.Wm)("span",{class:"token operator"},"+"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"''"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"+"),(0,t.Uk)(" b\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token function"},"add"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token number"},"1"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"2"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("      "),(0,t.Wm)("span",{class:"token comment"},"// 3"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token builtin"},"console"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token function"},"add"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token string"},"'1'"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'2'"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("  "),(0,t.Wm)("span",{class:"token comment"},"// 12"),(0,t.Uk)("\n")])])],-1),tt=(0,t.Wm)("p",null,"当重复定义同一个接口时，会进行接口合并：",-1),ot=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token keyword"},"interface"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Person"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  name"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("\n  address"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"interface"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Person"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  name"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("\n  age"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"23"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token comment"},"// 相当于"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"interface"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Person"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  name"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("\n  address"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("\n  age"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"23"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n")])])],-1),et=(0,t.Wm)("div",{class:"custom-container warning"},[(0,t.Wm)("p",{class:"custom-container-title"},"WARNING"),(0,t.Wm)("p",null,"当合并的属性类型不一致时，会报错。")],-1),ct=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token keyword"},"interface"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Person"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  name"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("\n  address"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"interface"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Person"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token comment"},"// 报错，name类型冲突"),(0,t.Uk)("\n  name"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"number"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("\n  age"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token number"},"23"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n")])])],-1),pt=(0,t.Wm)("h3",{id:"命名空间",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#命名空间","aria-hidden":"true"},"#"),(0,t.Uk)(" 命名空间")],-1),kt=(0,t.Wm)("p",null,[(0,t.Uk)("在我们以上所有案例中，我们编写的代码大多数是运行在"),(0,t.Wm)("code",null,"Node"),(0,t.Uk)("环境下的，接下来我们来编写一些代码，让其在浏览器环境中运行。")],-1),lt=(0,t.Wm)("p",null,"首先我们需要创建如下的项目以及目录结构：",-1),mt=(0,t.Wm)("div",{class:"language-bash ext-sh"},[(0,t.Wm)("pre",{class:"language-bash"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token operator"},"|"),(0,t.Uk)("-- TypeScript\n"),(0,t.Wm)("span",{class:"token operator"},"|"),(0,t.Uk)("   "),(0,t.Wm)("span",{class:"token operator"},"|"),(0,t.Uk)("-- dist\n"),(0,t.Wm)("span",{class:"token operator"},"|"),(0,t.Uk)("   "),(0,t.Wm)("span",{class:"token operator"},"|"),(0,t.Uk)("   "),(0,t.Wm)("span",{class:"token operator"},"|"),(0,t.Uk)("-- index.html\n"),(0,t.Wm)("span",{class:"token operator"},"|"),(0,t.Uk)("   "),(0,t.Wm)("span",{class:"token operator"},"|"),(0,t.Uk)("-- src\n"),(0,t.Wm)("span",{class:"token operator"},"|"),(0,t.Uk)("   "),(0,t.Wm)("span",{class:"token operator"},"|"),(0,t.Uk)("   "),(0,t.Wm)("span",{class:"token operator"},"|"),(0,t.Uk)("-- page.ts\n"),(0,t.Wm)("span",{class:"token operator"},"|"),(0,t.Uk)("   "),(0,t.Wm)("span",{class:"token operator"},"|"),(0,t.Uk)("-- tsconfig.json\n")])])],-1),ut=(0,t.Wm)("p",null,[(0,t.Uk)("其中，"),(0,t.Wm)("code",null,"tsconfig.json"),(0,t.Uk)("的配置如下：")],-1),Wt=(0,t.Wm)("div",{class:"language-json ext-json"},[(0,t.Wm)("pre",{class:"language-json"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token property"},'"compilerOptions"'),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token property"},'"target"'),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},'"es5"'),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token property"},'"module"'),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},'"commonjs"'),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("                \n    "),(0,t.Wm)("span",{class:"token property"},'"outDir"'),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},'"./dist"'),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token property"},'"rootDir"'),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},'"./src"'),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(" \n    "),(0,t.Wm)("span",{class:"token property"},'"strict"'),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token boolean"},"true"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token property"},'"esModuleInterop"'),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token boolean"},"true"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n")])])],-1),it=(0,t.Wm)("p",null,[(0,t.Uk)("在配置完"),(0,t.Wm)("code",null,"tsconfig.json"),(0,t.Uk)("以后，我们来撰写"),(0,t.Wm)("code",null,"page.ts"),(0,t.Uk)("中的代码：")],-1),rt=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token keyword"},"class"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Header"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token function"},"constructor"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" dom "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(" document"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"createElement"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token string"},"'div'"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n    dom"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("innerHTML "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'Header'"),(0,t.Uk)("\n    document"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("body"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"append"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("dom"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"class"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Content"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token function"},"constructor"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" dom "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(" document"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"createElement"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token string"},"'div'"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n    dom"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("innerHTML "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'Content'"),(0,t.Uk)("\n    document"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("body"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"append"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("dom"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"class"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Footer"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token function"},"constructor"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" dom "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(" document"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"createElement"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token string"},"'div'"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n    dom"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("innerHTML "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'Footer'"),(0,t.Uk)("\n    document"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("body"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"append"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("dom"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"class"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Page"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token function"},"constructor"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Header"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Content"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Footer"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n")])])],-1),Ut=(0,t.Wm)("p",null,"编写完以上代码后，我们运行如下命令：",-1),dt=(0,t.Wm)("div",{class:"language-bash ext-sh"},[(0,t.Wm)("pre",{class:"language-bash"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token comment"},"# 编译src下的*.ts文件到dist目录下"),(0,t.Uk)("\n$ tsc\n")])])],-1),gt=(0,t.Wm)("p",null,[(0,t.Uk)("随后我们在"),(0,t.Wm)("code",null,"dist/index.html"),(0,t.Uk)("中引用我们刚刚编译的代码：")],-1),bt=(0,t.Wm)("div",{class:"language-html ext-html"},[(0,t.Wm)("pre",{class:"language-html"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token tag"},[(0,t.Wm)("span",{class:"token tag"},[(0,t.Wm)("span",{class:"token punctuation"},"<"),(0,t.Uk)("script")]),(0,t.Uk)(),(0,t.Wm)("span",{class:"token attr-name"},"src"),(0,t.Wm)("span",{class:"token attr-value"},[(0,t.Wm)("span",{class:"token punctuation attr-equals"},"="),(0,t.Wm)("span",{class:"token punctuation"},'"'),(0,t.Uk)("./page.js"),(0,t.Wm)("span",{class:"token punctuation"},'"')]),(0,t.Wm)("span",{class:"token punctuation"},">")]),(0,t.Wm)("span",{class:"token script"}),(0,t.Wm)("span",{class:"token tag"},[(0,t.Wm)("span",{class:"token tag"},[(0,t.Wm)("span",{class:"token punctuation"},"</"),(0,t.Uk)("script")]),(0,t.Wm)("span",{class:"token punctuation"},">")]),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token tag"},[(0,t.Wm)("span",{class:"token tag"},[(0,t.Wm)("span",{class:"token punctuation"},"<"),(0,t.Uk)("script")]),(0,t.Wm)("span",{class:"token punctuation"},">")]),(0,t.Wm)("span",{class:"token script"},[(0,t.Wm)("span",{class:"token language-javascript"},[(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Page"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n")])]),(0,t.Wm)("span",{class:"token tag"},[(0,t.Wm)("span",{class:"token tag"},[(0,t.Wm)("span",{class:"token punctuation"},"</"),(0,t.Uk)("script")]),(0,t.Wm)("span",{class:"token punctuation"},">")]),(0,t.Uk)("\n")])])],-1),yt=(0,t.Wm)("p",null,[(0,t.Uk)("当我们在浏览器中运行"),(0,t.Wm)("code",null,"index.html"),(0,t.Uk)("文件后，我们可以在浏览器下正确的看到我们想要的输出内容。")],-1),ht=(0,t.Wm)("p",null,[(0,t.Uk)("当我们在打开"),(0,t.Wm)("code",null,"page.js"),(0,t.Uk)("文件时，我们可以发现： "),(0,t.Wm)("img",{src:o,alt:"page.js代码"})],-1),ft=(0,t.Wm)("p",null,[(0,t.Wm)("strong",null,"在全局作用域环境下，我们一次性引入了四个全局变量"),(0,t.Uk)("："),(0,t.Wm)("code",null,"Header"),(0,t.Uk)("、"),(0,t.Wm)("code",null,"Content"),(0,t.Uk)("、"),(0,t.Wm)("code",null,"Footer"),(0,t.Uk)("和"),(0,t.Wm)("code",null,"Page"),(0,t.Uk)("。要解决这个问题，我们可以使用"),(0,t.Wm)("code",null,"namespace"),(0,t.Uk)("命令空间：")],-1),wt=(0,t.Wm)("div",{class:"language-typescript ext-ts"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token comment"},"// 使用命名空间包裹我们的代码并把Page类导出出去"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"namespace"),(0,t.Uk)(" Home "),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token keyword"},"class"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Header"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token function"},"constructor"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n      "),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" dom "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(" document"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"createElement"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token string"},"'div'"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n      dom"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("innerHTML "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'Header'"),(0,t.Uk)("\n      document"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("body"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"append"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("dom"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token keyword"},"class"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Content"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token function"},"constructor"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n      "),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" dom "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(" document"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"createElement"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token string"},"'div'"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n      dom"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("innerHTML "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'Content'"),(0,t.Uk)("\n      document"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("body"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"append"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("dom"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token keyword"},"class"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Footer"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token function"},"constructor"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n      "),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" dom "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(" document"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"createElement"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token string"},"'div'"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n      dom"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("innerHTML "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'Footer'"),(0,t.Uk)("\n      document"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("body"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"append"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("dom"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token keyword"},"export"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"class"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Page"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token function"},"constructor"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n      "),(0,t.Wm)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Header"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n      "),(0,t.Wm)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Content"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n      "),(0,t.Wm)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"Footer"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n")])])],-1),vt=(0,t.Wm)("p",null,[(0,t.Uk)("随后，再次使用"),(0,t.Wm)("code",null,"tsc"),(0,t.Uk)("命令重新编译代码，编译后的"),(0,t.Wm)("code",null,"page.js"),(0,t.Uk)("如下： "),(0,t.Wm)("img",{src:e,alt:"Page.js代码"})],-1),xt=(0,t.Wm)("p",null,[(0,t.Uk)("再次修改"),(0,t.Wm)("code",null,"index.html"),(0,t.Uk)("中的代码，我们依然能够得到跟前面示例代码一样的输出结果：")],-1),At=(0,t.Wm)("div",{class:"language-html ext-html"},[(0,t.Wm)("pre",{class:"language-html"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token tag"},[(0,t.Wm)("span",{class:"token tag"},[(0,t.Wm)("span",{class:"token punctuation"},"<"),(0,t.Uk)("script")]),(0,t.Uk)(),(0,t.Wm)("span",{class:"token attr-name"},"src"),(0,t.Wm)("span",{class:"token attr-value"},[(0,t.Wm)("span",{class:"token punctuation attr-equals"},"="),(0,t.Wm)("span",{class:"token punctuation"},'"'),(0,t.Uk)("./page.js"),(0,t.Wm)("span",{class:"token punctuation"},'"')]),(0,t.Wm)("span",{class:"token punctuation"},">")]),(0,t.Wm)("span",{class:"token script"}),(0,t.Wm)("span",{class:"token tag"},[(0,t.Wm)("span",{class:"token tag"},[(0,t.Wm)("span",{class:"token punctuation"},"</"),(0,t.Uk)("script")]),(0,t.Wm)("span",{class:"token punctuation"},">")]),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token tag"},[(0,t.Wm)("span",{class:"token tag"},[(0,t.Wm)("span",{class:"token punctuation"},"<"),(0,t.Uk)("script")]),(0,t.Wm)("span",{class:"token punctuation"},">")]),(0,t.Wm)("span",{class:"token script"},[(0,t.Wm)("span",{class:"token language-javascript"},[(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},[(0,t.Uk)("Home"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("Page")]),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n")])]),(0,t.Wm)("span",{class:"token tag"},[(0,t.Wm)("span",{class:"token tag"},[(0,t.Wm)("span",{class:"token punctuation"},"</"),(0,t.Uk)("script")]),(0,t.Wm)("span",{class:"token punctuation"},">")]),(0,t.Uk)("\n")])])],-1),Tt={render:function(n,s){const a=(0,t.up)("OutboundLink");return(0,t.wg)(),(0,t.j4)(t.HY,null,[c,p,k,l,m,u,(0,t.Wm)("p",null,[W,(0,t.Wm)("a",i,[r,(0,t.Wm)(a)]),U,d,g]),b,y,h,f,w,v,x,A,T,P,j,S,H,N,$,C,I,E,V,F,_,J,R,L,M,z,G,B,O,D,q,Y,K,Q,X,Z,nn,sn,an,tn,on,en,cn,pn,kn,ln,mn,un,Wn,rn,Un,dn,gn,bn,yn,hn,fn,wn,vn,xn,An,Tn,Pn,jn,Sn,Hn,Nn,$n,Cn,In,En,Vn,Fn,_n,Jn,Rn,Ln,Mn,zn,Gn,Bn,On,Dn,qn,Yn,Kn,Qn,Xn,Zn,ns,ss,as,ts,os,es,cs,ps,ks,ls,ms,us,Ws,is,rs,Us,ds,gs,bs,ys,hs,fs,ws,vs,xs,As,Ts,Ps,js,Ss,Hs,Ns,$s,Cs,Is,Es,Vs,Fs,_s,Js,Rs,Ls,Ms,zs,Gs,Bs,Os,Ds,qs,Ys,Ks,Qs,Xs,Zs,na,sa,aa,ta,oa,ea,ca,pa,ka,la,ma,ua,Wa,ia,ra,Ua,da,ga,ba,ya,ha,fa,wa,va,xa,Aa,Ta,Pa,ja,Sa,Ha,Na,$a,Ca,Ia,Ea,Va,Fa,_a,Ja,Ra,La,Ma,za,Ga,Ba,Oa,Da,qa,Ya,Ka,Qa,Xa,Za,nt,st,at,tt,ot,et,ct,pt,kt,lt,mt,ut,Wt,it,rt,Ut,dt,gt,bt,yt,ht,ft,wt,vt,xt,At],64)}}}}]);